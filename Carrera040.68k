;; This is a complete disassembly of the Carrera 040 Control Panel used ; to control the Carrera040 accelerator in 68030 Apple Macintoshes; like the IIx/IIcx/IIci/IIv? and IIsi; ; The aim is to patch it that much, that it'll accept a SE/30 as host for; this 68040 accelerator (using a PDS-to-IIci-Cache-slot adapter);; Disassembly and comments by me, Axel Muhr (axel@geekdot.com); ; Comments are spread all over the place, mainly while following the ; program flow... it's hard to keep track in over 6000 lines of ; machine code. There might be some German texts here and there - feel free ; to translate them when needed ;)      12:                                 QUAL    proc49 ; b# =3  s#1  =proc49      12:                    $8A lab_1    EQU     *-$FFFF88      12:                    $9A lab_2    EQU     *-$FFFF78      12:                    $A8 lab_3    EQU     *-$FFFF6A      12:                   $312 lab_4    EQU     *-$FFFD00      12:                   $324 lab_5    EQU     *-$FFFCEE      12:                   $342 lab_6    EQU     *-$FFFCD0      12:                   $374 lab_7    EQU     *-$FFFC9E      12:                   $386 lab_8    EQU     *-$FFFC8C      12:                   $448 lab_9    EQU     *-$FFFBCA      12:                   $492 lab_10   EQU     *-$FFFB80      12:                   $49C lab_11   EQU     *-$FFFB76      12:                   $4AE lab_12   EQU     *-$FFFB64      12:                   $4B4 lab_13   EQU     *-$FFFB5E      12:                   $4BA lab_14   EQU     *-$FFFB58      12:                   $4C6 lab_15   EQU     *-$FFFB4C      12:                   $4D2 lab_16   EQU     *-$FFFB40      12:                   $4DE lab_17   EQU     *-$FFFB34      12:                   $4E0 lab_18   EQU     *-$FFFB32      12:                   $520 lab_19   EQU     *-$FFFAF2      12:                   $544 lab_20   EQU     *-$FFFACE      12:                   $560 lab_21   EQU     *-$FFFAB2      12:                   $570 lab_22   EQU     *-$FFFAA2      12:                   $5E8 lab_23   EQU     *-$FFFA2A      12:                   $5F0 lab_24   EQU     *-$FFFA22      12:                   $5F4 lab_25   EQU     *-$FFFA1E      12:                   $5F6 lab_26   EQU     *-$FFFA1C      12:                   $602 lab_27   EQU     *-$FFFA10      12:                   $608 lab_28   EQU     *-$FFFA0A      12:                   $612 lab_29   EQU     *-$FFFA00      12:                   $622 lab_30   EQU     *-$FFF9F0      12:                   $67E lab_31   EQU     *-$FFF994      12:                   $688 lab_32   EQU     *-$FFF98A      12:                   $690 lab_33   EQU     *-$FFF982      12:                   $6A0 lab_34   EQU     *-$FFF972      12:                   $6C4 lab_35   EQU     *-$FFF94E      12:                   $6C8 lab_36   EQU     *-$FFF94A      12:                   $6CC lab_37   EQU     *-$FFF946      12:                   $738 lab_38   EQU     *-$FFF8DA      12:                   $73E lab_39   EQU     *-$FFF8D4      12:                   $74C lab_40   EQU     *-$FFF8C6      12:                   $7A6 lab_41   EQU     *-$FFF86C      12:                   $7C0 lab_42   EQU     *-$FFF852      12:                   $7E4 lab_43   EQU     *-$FFF82E      12:                   $828 lab_44   EQU     *-$FFF7EA      12:                   $852 lab_45   EQU     *-$FFF7C0      12:                   $85E lab_46   EQU     *-$FFF7B4      12:                   $86A lab_47   EQU     *-$FFF7A8      12:                   $86E lab_48   EQU     *-$FFF7A4      12:                   $87C lab_49   EQU     *-$FFF796      12:                   $882 lab_50   EQU     *-$FFF790      12:                   $88E lab_51   EQU     *-$FFF784      12:                   $8C0 lab_52   EQU     *-$FFF752      12:                   $8E6 lab_53   EQU     *-$FFF72C      12:                   $8FA lab_54   EQU     *-$FFF718      12:                   $90E lab_55   EQU     *-$FFF704      12:                   $910 lab_56   EQU     *-$FFF702      12:                   $920 lab_57   EQU     *-$FFF6F2      12:                   $938 lab_58   EQU     *-$FFF6DA      12:                   $952 lab_59   EQU     *-$FFF6C0      12:                   $960 lab_60   EQU     *-$FFF6B2      12:                   $97E lab_61   EQU     *-$FFF694      12:                   $9AC lab_62   EQU     *-$FFF666      12:                   $9BA lab_63   EQU     *-$FFF658      12:                   $A10 lab_64   EQU     *-$FFF602      12:                   $A3E lab_65   EQU     *-$FFF5D4      12:                   $ADA lab_66   EQU     *-$FFF538      12:                   $AFE lab_67   EQU     *-$FFF514      12:                   $B4C lab_68   EQU     *-$FFF4C6      12:                   $B58 lab_69   EQU     *-$FFF4BA      12:                   $B88 lab_70   EQU     *-$FFF48A      12:                   $B8A lab_71   EQU     *-$FFF488      12:                   $BAC lab_72   EQU     *-$FFF466      12:                   $BC0 lab_73   EQU     *-$FFF452      12:                   $BDE lab_74   EQU     *-$FFF434      12:                   $BE0 lab_75   EQU     *-$FFF432      12:                   $C1E lab_76   EQU     *-$FFF3F4      12:                   $C38 lab_77   EQU     *-$FFF3DA      12:                   $C42 lab_78   EQU     *-$FFF3D0      12:                   $C68 lab_79   EQU     *-$FFF3AA      12:                   $C78 lab_80   EQU     *-$FFF39A      12:                   $C84 lab_81   EQU     *-$FFF38E      12:                   $C8C lab_82   EQU     *-$FFF386      12:                   $CAC lab_83   EQU     *-$FFF366      12:                   $CBA lab_84   EQU     *-$FFF358      12:                   $D80 lab_85   EQU     *-$FFF292      12:                   $E0A lab_86   EQU     *-$FFF208      12:                   $E2A lab_87   EQU     *-$FFF1E8      12:                   $E30 lab_88   EQU     *-$FFF1E2      12:                   $EBC lab_91   EQU     *-$FFF156      12:                   $F3E lab_92   EQU     *-$FFF0D4      12:                   $F5E lab_93   EQU     *-$FFF0B4      12:                   $F64 lab_94   EQU     *-$FFF0AE      12:                   $FAA lab_95   EQU     *-$FFF068      12:                   $FB4 lab_96   EQU     *-$FFF05E      12:                   $FD6 lab_97   EQU     *-$FFF03C      12:                   $FE2 lab_98   EQU     *-$FFF030      12:                  $1022 lab_99   EQU     *-$FFEFF0      12:                  $1030 lab_100  EQU     *-$FFEFE2      12:                  $105A lab_101  EQU     *-$FFEFB8      12:                  $1080 lab_102  EQU     *-$FFEF92      12:                  $109A lab_103  EQU     *-$FFEF78      12:                  $10A8 lab_104  EQU     *-$FFEF6A      12:                  $10AE lab_105  EQU     *-$FFEF64      12:                  $10EE lab_106  EQU     *-$FFEF24      12:                  $10FA lab_107  EQU     *-$FFEF18      12:                  $1112 lab_108  EQU     *-$FFEF00      12:                  $1122 lab_109  EQU     *-$FFEEF0      12:                  $1134 lab_110  EQU     *-$FFEEDE      12:                  $115C lab_111  EQU     *-$FFEEB6      12:                  $1174 lab_112  EQU     *-$FFEE9E      12:                  $1190 lab_113  EQU     *-$FFEE82      12:                  $11BA lab_114  EQU     *-$FFEE58      12:                  $11CC lab_115  EQU     *-$FFEE46      12:                  $11EA lab_116  EQU     *-$FFEE28      12:                  $11EC lab_117  EQU     *-$FFEE26      12:                  $11F2 lab_118  EQU     *-$FFEE20      12:                  $11F4 lab_119  EQU     *-$FFEE1E      12:                  $11FA lab_120  EQU     *-$FFEE18      12:                  $11FE lab_121  EQU     *-$FFEE14      12:                  $121C lab_122  EQU     *-$FFEDF6      12:                  $1224 lab_123  EQU     *-$FFEDEE      12:                  $122C lab_124  EQU     *-$FFEDE6      12:                  $124C lab_125  EQU     *-$FFEDC6      12:                  $125A lab_126  EQU     *-$FFEDB8      12:                  $125E lab_127  EQU     *-$FFEDB4      12:                  $127C lab_128  EQU     *-$FFED96      12:                  $1284 lab_129  EQU     *-$FFED8E      12:                  $1288 lab_130  EQU     *-$FFED8A      12:                  $1316 lab_131  EQU     *-$FFECFC      12:                  $14B8 lab_132  EQU     *-$FFEB5A      12:                  $14E0 lab_133  EQU     *-$FFEB32      12:                  $14E6 lab_134  EQU     *-$FFEB2C      12:                  $14EC lab_135  EQU     *-$FFEB26      12:                  $151C lab_136  EQU     *-$FFEAF6      12:                  $1522 lab_137  EQU     *-$FFEAF0      12:                  $155E lab_138  EQU     *-$FFEAB4      12:                  $1564 lab_139  EQU     *-$FFEAAE      12:                  $1598 lab_140  EQU     *-$FFEA7A      12:                  $15A6 lab_141  EQU     *-$FFEA6C      12:                  $15BA lab_142  EQU     *-$FFEA58      12:                  $15DA lab_143  EQU     *-$FFEA38      12:                  $160E proc14_exit  EQU     *-$FFEA04      12:                  $1620 lab_145  EQU     *-$FFE9F2      12:                  $1652 lab_146  EQU     *-$FFE9C0      12:                  $1662 lab_147  EQU     *-$FFE9B0      12:                  $1670 lab_148  EQU     *-$FFE9A2      12:                  $168C lab_149  EQU     *-$FFE986      12:                  $169C lab_150  EQU     *-$FFE976      12:                  $16CA p18_noFPU  EQU     *-$FFE948      12:                  $16DA lab_152  EQU     *-$FFE938      12:                  $1754 lab_153  EQU     *-$FFE8BE      12:                  $1764 lab_154  EQU     *-$FFE8AE      12:                  $178A lab_155  EQU     *-$FFE888      12:                  $179A lab_156  EQU     *-$FFE878      12:                  $1812 lab_157  EQU     *-$FFE800      12:                  $1822 lab_158  EQU     *-$FFE7F0      12:                  $183A 53_cmd_5.3  EQU     *-$FFE7D8      12:                  $18B8 lab_160  EQU     *-$FFE75A      12:                  $18C8 lab_161  EQU     *-$FFE74A      12:                  $1942 lab_162  EQU     *-$FFE6D0      12:                  $1952 lab_163  EQU     *-$FFE6C0      12:                  $1978 lab_164  EQU     *-$FFE69A      12:                  $1988 lab_165  EQU     *-$FFE68A      12:                  $19FA lab_166  EQU     *-$FFE618      12:                  $1A0A lab_167  EQU     *-$FFE608      12:                  $1A4E lab_168  EQU     *-$FFE5C4      12:                  $1A7C lab_169  EQU     *-$FFE596      12:                  $1AF4 lab_170  EQU     *-$FFE51E      12:                  $1AF8 lab_171  EQU     *-$FFE51A      12:                  $1AFE lab_172  EQU     *-$FFE514      12:                  $1B54 lab_173  EQU     *-$FFE4BE      12:                  $1B7A lab_174  EQU     *-$FFE498      12:                  $1B8A lab_175  EQU     *-$FFE488      12:                  $1C04 lab_176  EQU     *-$FFE40E      12:                  $1C14 lab_177  EQU     *-$FFE3FE      12:                  $1C3A lab_178  EQU     *-$FFE3D8      12:                  $1C4A lab_179  EQU     *-$FFE3C8      12:                  $1CBC lab_180  EQU     *-$FFE356      12:                  $1CCC lab_181  EQU     *-$FFE346      12:                  $1D06 lab_182  EQU     *-$FFE30C      12:                  $1D16 lab_183  EQU     *-$FFE2FC      12:                  $1D90 lab_184  EQU     *-$FFE282      12:                  $1DA0 lab_185  EQU     *-$FFE272      12:                  $1DC6 lab_186  EQU     *-$FFE24C      12:                  $1DD6 lab_187  EQU     *-$FFE23C      12:                  $1E48 lab_188  EQU     *-$FFE1CA      12:                  $1E58 lab_189  EQU     *-$FFE1BA      12:                  $1E8E lab_190  EQU     *-$FFE184      12:                  $1EB4 lab_191  EQU     *-$FFE15E      12:                  $1EC2 lab_192  EQU     *-$FFE150      12:                  $1ED8 lab_193  EQU     *-$FFE13A      12:                  $1EE8 lab_194  EQU     *-$FFE12A      12:                  $1F02 lab_195  EQU     *-$FFE110      12:                  $1F12 lab_196  EQU     *-$FFE100      12:                  $1F3E lab_197  EQU     *-$FFE0D4      12:                  $1F72 lab_198  EQU     *-$FFE0A0      12:                  $1F94 lab_199  EQU     *-$FFE07E      12:                  $1F9A lab_200  EQU     *-$FFE078      12:                  $1FFA lab_201  EQU     *-$FFE018      12:                  $20BA sys_check  EQU     *-$FFDF58      12:                  $20CC OS_bad  EQU     *-$FFDF46      12:                  $20D2 lab_204  EQU     *-$FFDF40      12:                  $20EA lab_205  EQU     *-$FFDF28      12:                  $210A RET_ok  EQU     *-$FFDF08      12:                  $210C RET_err  EQU     *-$FFDF06      12:                  $2110 bad_conf  EQU     *-$FFDF02          2116:                  $212C lae_1    EQU     *-$FFFFEA    2116:                  $213C lae_2    EQU     *-$FFFFDA    2116:                  $2172 lae_3    EQU     *-$FFFFA4    2116:                  $2174 lae_4    EQU     *-$FFFFA2    2116:                  $2180 lae_5    EQU     *-$FFFF96    2116:                  $2262 lae_6    EQU     *-$FFFEB4    2116:                  $227A lae_7    EQU     *-$FFFE9C    2116:                  $2286 lae_8    EQU     *-$FFFE90    2116:                  $2290 lae_9    EQU     *-$FFFE86    2116:                  $2294 lae_10   EQU     *-$FFFE82    2116:                  $22AE lae_11   EQU     *-$FFFE68    2116:                  $2330 lae_12   EQU     *-$FFFDE6    2116:                  $233E lae_13   EQU     *-$FFFDD8    2116:                  $23AC lae_14   EQU     *-$FFFD6A    2116:                  $23FC lae_15   EQU     *-$FFFD1A    2116:                  $240A lae_16   EQU     *-$FFFD0C    2116:                  $2430 lae_17   EQU     *-$FFFCE6    2116:                  $243A lae_18   EQU     *-$FFFCDC    2116:                  $24BA lae_19   EQU     *-$FFFC5C    2116:                  $24C8 lae_20   EQU     *-$FFFC4E    2116:                  $24D0 lae_21   EQU     *-$FFFC46    2116:                  $24D4 lae_22   EQU     *-$FFFC42    2116:                  $24E8 lae_23   EQU     *-$FFFC2E    2116:                  $24EE lae_24   EQU     *-$FFFC28    2116:                  $254A lae_25   EQU     *-$FFFBCC    2116:                  $25B0 lae_26   EQU     *-$FFFB66    2116:                  $25C0 lae_27   EQU     *-$FFFB56    2116:                  $25F6 lae_28   EQU     *-$FFFB20    2116:                  $2608 lae_29   EQU     *-$FFFB0E    2116:                  $261E lae_30   EQU     *-$FFFAF8    2116:                  $2636 lae_31   EQU     *-$FFFAE0    2116:                  $2670 lae_32   EQU     *-$FFFAA6    2116:                  $2680 lae_33   EQU     *-$FFFA96    2116:                  $268A lae_34   EQU     *-$FFFA8C    2116:                  $2692 lae_35   EQU     *-$FFFA84    2116:                  $2696 lae_36   EQU     *-$FFFA80    2116:                  $26F4 lae_37   EQU     *-$FFFA22    2116:                  $2718 lae_38   EQU     *-$FFF9FE    2116:                  $271E lae_39   EQU     *-$FFF9F8    2116:                  $272A lae_40   EQU     *-$FFF9EC    2116:                  $2738 lae_41   EQU     *-$FFF9DE    2116:                  $2776 lae_42   EQU     *-$FFF9A0    2116:                  $277E lae_43   EQU     *-$FFF998    2116:                  $2786 lae_44   EQU     *-$FFF990    2116:                  $278E lae_45   EQU     *-$FFF988    2116:                  $27A2 lae_46   EQU     *-$FFF974    2116:                  $27E6 lae_47   EQU     *-$FFF930    2116:                  $27EC lae_48   EQU     *-$FFF92A    2116:                  $27F8 lae_49   EQU     *-$FFF91E    2116:                  $2806 lae_50   EQU     *-$FFF910    2116:                  $2848 lae_51   EQU     *-$FFF8CE    2116:                  $2854 lae_52   EQU     *-$FFF8C2    2116:                  $2860 lae_53   EQU     *-$FFF8B6    2116:                  $286C lae_54   EQU     *-$FFF8AA    2116:                  $2884 lae_55   EQU     *-$FFF892    2116:                  $28DE lae_56   EQU     *-$FFF838    2116:                  $28EA lae_57   EQU     *-$FFF82C    2116:                  $28EE lae_58   EQU     *-$FFF828    2116:                  $28F2 lae_59   EQU     *-$FFF824    2116:                  $2932 lae_60   EQU     *-$FFF7E4    2116:                  $2938 lae_61   EQU     *-$FFF7DE    2116:                  $29A2 lae_62   EQU     *-$FFF774    2116:                  $29A8 lae_63   EQU     *-$FFF76E    2116:                  $2A46 lae_64   EQU     *-$FFF6D0    2116:                  $2A6C lae_65   EQU     *-$FFF6AA    2116:                  $2A78 lae_66   EQU     *-$FFF69E    2116:                  $2AA8 lae_67   EQU     *-$FFF66E    2116:                  $2AE8 lae_68   EQU     *-$FFF62E    2116:                  $2B7C lae_69   EQU     *-$FFF59A    2116:                  $2BFA lae_70   EQU     *-$FFF51C    2116:                  $2CB6 lae_71   EQU     *-$FFF460    2116:                  $2CEC lae_72   EQU     *-$FFF42A    2116:                  $2CF2 p43_resNF   EQU     *-$FFF424    2116:                  $2CFA IIci_1st   EQU     *-$FFF41C    2116:                  $2D6A lae_75   EQU     *-$FFF3AC    2116:                  $2D72 IIci_2nd   EQU     *-$FFF3A4    2116:                  $2DD2 lae_77   EQU     *-$FFF344    2116:                  $2E48 lae_78   EQU     *-$FFF2CE    2116:                  $2E80 lae_79   EQU     *-$FFF296    2116:                  $2EB0 lae_80   EQU     *-$FFF266    2116:                  $2EDE lae_81   EQU     *-$FFF238    2116:                  $2F10 lae_82   EQU     *-$FFF206    2116:                  $2F48 lae_83   EQU     *-$FFF1CE    2116:                  $2F68 lae_84   EQU     *-$FFF1AE    2116:                  $2FCA lae_85   EQU     *-$FFF14C    2116:                  $2FF6 lae_86   EQU     *-$FFF120    2116:                  $3024 lae_87   EQU     *-$FFF0F2    2116:                  $303C lae_88   EQU     *-$FFF0DA    2116:                  $3064 lae_89   EQU     *-$FFF0B2    2116:                  $3070 lae_90   EQU     *-$FFF0A6    2116:                  $3086 lae_91   EQU     *-$FFF090    2116:                  $3096 lae_92   EQU     *-$FFF080    2116:                  $30C0 lae_93   EQU     *-$FFF056    2116:                  $3128 lae_94   EQU     *-$FFEFEE    2116:                  $313A lae_95   EQU     *-$FFEFDC    2116:                  $3148 lae_96   EQU     *-$FFEFCE    2116:                  $3174 lae_97   EQU     *-$FFEFA2    2116:                  $3176 lae_98   EQU     *-$FFEFA0    2116:                  $318C lae_99   EQU     *-$FFEF8A    2116:                  $3194 IIci_3rd  EQU     *-$FFEF82    2116:                  $31B8 lae_101  EQU     *-$FFEF5E    2116:                  $3204 lae_102  EQU     *-$FFEF12    2116:                  $3206 lae_103  EQU     *-$FFEF10    2116:                  $3268 lae_104  EQU     *-$FFEEAE    2116:                  $32CE IIci_4th  EQU     *-$FFEE48    2116:                  $335E IIci_4th_loMem  EQU     *-$FFEDB8    2116:                  $3366 lae_107  EQU     *-$FFEDB0    2116:                  $3396 lae_108  EQU     *-$FFED80    2116:                  $33B4 lae_109  EQU     *-$FFED62    2116:                  $33B8 lae_110  EQU     *-$FFED5E    2116:                  $33BC IIci_4th_exit  EQU     *-$FFED5A    2116:                  $3414 lae_112  EQU     *-$FFED02    2116:                  $3484 lae_113  EQU     *-$FFEC92    2116:                  $348C lae_114  EQU     *-$FFEC8A    2116:                  $351C lae_115  EQU     *-$FFEBFA    2116:                  $3574 lae_116  EQU     *-$FFEBA2    2116:                  $35F0 lae_117  EQU     *-$FFEB26    2116:                  $361A lae_118  EQU     *-$FFEAFC    2116:                  $362E lae_119  EQU     *-$FFEAE8    2116:                  $369E lae_120  EQU     *-$FFEA78    2116:                  $36CA lae_121  EQU     *-$FFEA4C    2116:                  $36CC lae_122  EQU     *-$FFEA4A    2116:                  $36D6 lae_123  EQU     *-$FFEA40    2116:                  $36DE lae_124  EQU     *-$FFEA38    2116:                  $373C lae_125  EQU     *-$FFE9DA    2116:                  $373E lae_126  EQU     *-$FFE9D8    2116:                  $37A0 lae_127  EQU     *-$FFE976    2116:                  $3806 lae_128  EQU     *-$FFE910    2116:                  $3836 lae_129  EQU     *-$FFE8E0    2116:                  $3854 lae_130  EQU     *-$FFE8C2    2116:                  $3858 lae_131  EQU     *-$FFE8BE    2116:                  $3874 v_1st  EQU     *-$FFE8A2    2116:                  $38EC lae_133  EQU     *-$FFE82A    2116:                  $38F4 v_2nd  EQU     *-$FFE822    2116:                  $3984 lae_135  EQU     *-$FFE792    2116:                  $39B8 lae_136  EQU     *-$FFE75E    2116:                  $3A46 lae_137  EQU     *-$FFE6D0    2116:                  $3A70 lae_138  EQU     *-$FFE6A6    2116:                  $3A84 lae_139  EQU     *-$FFE692    2116:                  $3AF4 lae_140  EQU     *-$FFE622    2116:                  $3B20 lae_141  EQU     *-$FFE5F6    2116:                  $3B22 lae_142  EQU     *-$FFE5F4    2116:                  $3B2C lae_143  EQU     *-$FFE5EA    2116:                  $3B34 v_3rd  EQU     *-$FFE5E2    2116:                  $3B9E lae_145  EQU     *-$FFE578    2116:                  $3BA0 lae_146  EQU     *-$FFE576    2116:                  $3C10 lae_147  EQU     *-$FFE506    2116:                  $3C76 v_4th  EQU     *-$FFE4A0    2116:                  $3CF4 lae_149  EQU     *-$FFE422    2116:                  $3CF6 lae_150  EQU     *-$FFE420    2116:                  $3CFC lae_151  EQU     *-$FFE41A    2116:                  $3D14 MacII_1st  EQU     *-$FFE402    2116:                  $3D8C lae_153  EQU     *-$FFE38A    2116:                  $3D94 MacII_2nd  EQU     *-$FFE382    2116:                  $3E26 lae_155  EQU     *-$FFE2F0    2116:                  $3EA0 lae_156  EQU     *-$FFE276    2116:                  $3F54 lae_157  EQU     *-$FFE1C2    2116:                  $3F80 lae_158  EQU     *-$FFE196    2116:                  $3F82 lae_159  EQU     *-$FFE194    2116:                  $3F8C lae_160  EQU     *-$FFE18A    2116:                  $3F94 MacII_3rd  EQU     *-$FFE182    2116:                  $3FF2 lae_162  EQU     *-$FFE124    2116:                  $3FF4 lae_163  EQU     *-$FFE122    2116:                  $4056 lae_164  EQU     *-$FFE0C0    2116:                  $40BC MacII_4th  EQU     *-$FFE05A    2116:                  $413A lae_166  EQU     *-$FFDFDC    2116:                  $4140 lae_167  EQU     *-$FFDFD6    2116:                  $4146 lae_168  EQU     *-$FFDFD0    2116:                  $41D2 lae_169  EQU     *-$FFDF44    2116:                  $4206 lae_170  EQU     *-$FFDF10    2116:                  $42C6 lae_171  EQU     *-$FFDE50    2116:                  $42D0 lae_172  EQU     *-$FFDE46    2116:                  $42DA lae_173  EQU     *-$FFDE3C    2116:                  $42E2 lae_174  EQU     *-$FFDE34    2116:                  $4318 lae_175  EQU     *-$FFDDFE    2116:                  $4320 lae_176  EQU     *-$FFDDF6   Axel: 16 lines missing, MaxcNosy ate them ;); Well, "L. Austin fecit" I'd say...      12$ 4C2E 2041 7573 'L. Aus' proc49  MULU.L  $7573(A6),D2       18: 7469           'ti'             MOVEQ   #$69,D2      1A¥ 6E00 48E7      'n.H.'           BGT     $4903      1E¥ 7FFE           '..'             ILL*; This is where it all begins	      20: 6100 21DA        $21FC          BSR     main ; <- 1st Sub called      24: 2F00           '/.'             PUSH.L  D0      26: 41FA FFD8      'A...'           LEA     data1,A0      2A: 43FA 21D0        $21FC          LEA     main,A1      2E: 2009           ' .'             MOVE.L  A1,D0      30: 43FA FFCE      'C...'           LEA     data1,A1      34: 9089           '..'             SUB.L   A1,D0      36: A020           '. '             _SetPtrSize ; (A0/p:Ptr; D0/newSize:Size)       38: 201F           ' .'             POP.L   D0      3A: 4CDF 7FFE      'L...'           MOVEM.L (A7)+,D1-D7/A0-A6      3E: 4E75           'Nu'             RTS          	         40: 0000 0000      '....'   A5wrld:  DC.L $0000 0000  ; I assume this holds the A5 Worls base.      44: 48E7 4020      'H.@ '   data3:  MOVEM.L D1/A2,-(A7)      48: 246F 000A      '$o..'           MOVEA.L 10(A7),A2        ; This is checking the Exception Vector for Bus Errors in ROM (base $40800000)...        ; It lives at 0x8 - my SE/30 with BMOW Rom (=IIsi rom) points to 0x408026F0        ; TechNote DV04 is very handy here!      4C: 2238 0008      '"8..'           MOVE.L  8,D1                50: 0C81 4080 D566 '..@..f'         CMPI.L  #$4080D566,D1 ;      56: 6732               $8A          BEQ.S   lab_1      58: 0C81 4080 DB50 '..@..P'         CMPI.L  #$4080DB50,D1      5E: 673A               $9A          BEQ.S   lab_2      60: 0C81 4080 DB5C '..@..\'         CMPI.L  #$4080DB5C,D1      66: 6740               $A8          BEQ.S   lab_3      68: 0C81 4080 E2BA '..@...'         CMPI.L  #$4080E2BA,D1      6E: 671A               $8A          BEQ.S   lab_1      70: 0C81 4080 E590 '..@...'         CMPI.L  #$4080E590,D1      76: 6722               $9A          BEQ.S   lab_2      78: 0C81 4080 E59C '..@...'         CMPI.L  #$4080E59C,D1      7E: 6728               $A8          BEQ.S   lab_3      80: 4CDF 0402      'L...'           MOVEM.L (A7)+,D1/A2      84$ 4EF0 81E1 0008 'N.....'         JMP     ([8])      8A: 2278 02AE         $2AE   lab_1  MOVEA.L RomBase,A1      8E: 584A           'XJ'             ADDQ    #4,A2      90: 2F4A 000A      '/J..'           MOVE.L  A2,10(A7)      94: 4CDF 0402      'L...'           MOVEM.L (A7)+,D1/A2      98: 4E73           'Ns'             RTE           9A: 7000           'p.'      lab_2  MOVEQ   #0,D0      9C: 584A           'XJ'             ADDQ    #4,A2      9E: 2F4A 000A      '/J..'           MOVE.L  A2,10(A7)      A2: 4CDF 0402      'L...'           MOVEM.L (A7)+,D1/A2      A6: 4E73           'Ns'             RTE         A8: 307C FFFF      $FFFFFF   lab_3  MOVEA   #Lastdum,A0      AC: 544A           'TJ'             ADDQ    #2,A2      AE: 2F4A 000A      '/J..'           MOVE.L  A2,10(A7)      B2: 4CDF 0402      'L...'           MOVEM.L (A7)+,D1/A2      B6: 4E73           'Ns'             RTE           B8$ 4EF0 81E1 0028 'N....('         JMP     ([$28])      BE$ 4EF0 81E1 002C 'N....,'         JMP     ([$2C])      C4: 594F           'YO'             SUBQ    #4,A7      C6: 2F00           '/.'             PUSH.L  D0      C8: 302F 000E      '0/..'           MOVE    14(A7),D0      CC: 0280 0000 00FF '......'         ANDI.L  #$FF,D0      D2: 2F40 0004      '/@..'           MOVE.L  D0,4(A7)      D6$ 2F77 8161 0004 '/w.a..'         MOVE.L  ([4,A7]),4(A7)      DE: 201F           ' .'             POP.L   D0      E0: 4E75           'Nu'             RTS 	            E2: 0000 0000      '....'           ORI.B   #0,D0      E6: 0000 0000      '....'           ORI.B   #0,D0      EA: 0000 0000      '....'           ORI.B   #0,D0      EE: 0000 0000      '....'           ORI.B   #0,D0      F2: 0000 0000      '....'           ORI.B   #0,D0      F6: 0000 0000      '....'           ORI.B   #0,D0      FA: 0000 0000      '....'           ORI.B   #0,D0      FE: 0000 0000      '....'           ORI.B   #0,D0     102: 0000 0000      '....'           ORI.B   #0,D0     106: 0000 0000      '....'           ORI.B   #0,D0     10A: 0000 0000      '....'           ORI.B   #0,D0     10E: 0000 0000      '....'           ORI.B   #0,D0     112: 0000 0000      '....'           ORI.B   #0,D0     116: 0000 0000      '....'           ORI.B   #0,D0     11A: 0000 0000      '....'           ORI.B   #0,D0     11E: 0000 0000      '....'           ORI.B   #0,D0     122: 0000 0000      '....'           ORI.B   #0,D0     126: 0000 0000      '....'           ORI.B   #0,D0     12A: 0000 0000      '....'           ORI.B   #0,D0     12E: 0000 0000      '....'           ORI.B   #0,D0     132: 0000 0000      '....'           ORI.B   #0,D0     136: 0000 0000      '....'           ORI.B   #0,D0     13A: 0000 0000      '....'           ORI.B   #0,D0     13E: 0000 0000      '....'           ORI.B   #0,D0     142: 0000 0000      '....'           ORI.B   #0,D0     146: 0000 0000      '....'           ORI.B   #0,D0     14A: 0000 0000      '....'           ORI.B   #0,D0     14E: 0000 0000      '....'           ORI.B   #0,D0     152: 0000 0000      '....'           ORI.B   #0,D0     156: 0000 0000      '....'           ORI.B   #0,D0     15A: 0000 0000      '....'           ORI.B   #0,D0     15E: 0000 0000      '....'           ORI.B   #0,D0     162: 0000 0000      '....'           ORI.B   #0,D0     166: 0000 0000      '....'           ORI.B   #0,D0     16A: 0000 0000      '....'           ORI.B   #0,D0     16E: 0000 0000      '....'           ORI.B   #0,D0     172: 0000 0000      '....'           ORI.B   #0,D0     176: 0000 0000      '....'           ORI.B   #0,D0     17A: 0000 0000      '....'           ORI.B   #0,D0     17E: 0000 0000      '....'           ORI.B   #0,D0     182: 0000 0000      '....'           ORI.B   #0,D0     186: 0000 0000      '....'           ORI.B   #0,D0     18A: 0000 0000      '....'           ORI.B   #0,D0     18E: 0000 0000      '....'           ORI.B   #0,D0     192: 0000 0000      '....'           ORI.B   #0,D0     196: 0000 0000      '....'           ORI.B   #0,D0     19A: 0000 0000      '....'           ORI.B   #0,D0     19E: 0000 0000      '....'           ORI.B   #0,D0     1A2: 0000 0000      '....'           ORI.B   #0,D0     1A6: 0000 0000      '....'           ORI.B   #0,D0     1AA: 0000 0000      '....'           ORI.B   #0,D0     1AE: 0000 0000      '....'           ORI.B   #0,D0     1B2: 0000 0000      '....'           ORI.B   #0,D0     1B6: 0000 0000      '....'           ORI.B   #0,D0     1BA: 0000 0000      '....'           ORI.B   #0,D0     1BE: 0000 0000      '....'           ORI.B   #0,D0     1C2: 0000 0000      '....'           ORI.B   #0,D0     1C6: 0000 0000      '....'           ORI.B   #0,D0     1CA: 0000 0000      '....'           ORI.B   #0,D0     1CE: 0000 0000      '....'           ORI.B   #0,D0     1D2: 0000 0000      '....'           ORI.B   #0,D0     1D6: 0000 0000      '....'           ORI.B   #0,D0     1DA: 0000 0000      '....'           ORI.B   #0,D0     1DE: 0000 0000      '....'           ORI.B   #0,D0     1E2: 0000 0000      '....'           ORI.B   #0,D0     1E6: 0000 0000      '....'           ORI.B   #0,D0     1EA: 0000 0000      '....'           ORI.B   #0,D0     1EE: 0000 0000      '....'           ORI.B   #0,D0     1F2: 0000 0000      '....'           ORI.B   #0,D0     1F6: 0000 0000      '....'           ORI.B   #0,D0     1FA: 0000 0000      '....'           ORI.B   #0,D0     1FE: 0000 0000      '....'           ORI.B   #0,D0     202: 0000 0000      '....'           ORI.B   #0,D0     206: 0000 0000      '....'           ORI.B   #0,D0     20A: 0000 0000      '....'           ORI.B   #0,D0     20E: 0000 0000      '....'           ORI.B   #0,D0     212: 0000 0000      '....'           ORI.B   #0,D0     216: 0000 0000      '....'           ORI.B   #0,D0     21A: 0000 0000      '....'           ORI.B   #0,D0     21E: 0000 0000      '....'           ORI.B   #0,D0     222: 0000 0000      '....'           ORI.B   #0,D0     226: 0000 0000      '....'           ORI.B   #0,D0     22A: 0000 0000      '....'           ORI.B   #0,D0     22E: 0000 0000      '....'           ORI.B   #0,D0     232: 0000 0000      '....'           ORI.B   #0,D0     236: 0000 0000      '....'           ORI.B   #0,D0     23A: 0000 0000      '....'           ORI.B   #0,D0     23E: 0000 0000      '....'           ORI.B   #0,D0     242: 0000 0000      '....'           ORI.B   #0,D0     246: 0000 0000      '....'           ORI.B   #0,D0     24A: 0000 0000      '....'           ORI.B   #0,D0     24E: 0000 0000      '....'           ORI.B   #0,D0     252: 0000 0000      '....'           ORI.B   #0,D0     256: 0000 0000      '....'           ORI.B   #0,D0     25A: 0000 0000      '....'           ORI.B   #0,D0     25E: 0000 0000      '....'           ORI.B   #0,D0     262: 0000 0000      '....'           ORI.B   #0,D0     266: 0000 0000      '....'           ORI.B   #0,D0     26A: 0000 0000      '....'           ORI.B   #0,D0     26E: 0000 0000      '....'           ORI.B   #0,D0     272: 0000 0000      '....'           ORI.B   #0,D0     276: 0000 0000      '....'           ORI.B   #0,D0     27A: 0000 0000      '....'           ORI.B   #0,D0     27E: 0000 0000      '....'           ORI.B   #0,D0     282: 0000 0000      '....'           ORI.B   #0,D0     286: 0000 0000      '....'           ORI.B   #0,D0     28A: 0000 0000      '....'           ORI.B   #0,D0     28E: 0000 0000      '....'           ORI.B   #0,D0     292: 0000 0000      '....'           ORI.B   #0,D0     296: 0000 0000      '....'           ORI.B   #0,D0     29A: 0000 0000      '....'           ORI.B   #0,D0     29E: 0000 0000      '....'           ORI.B   #0,D0     2A2: 0000 0000      '....'           ORI.B   #0,D0     2A6: 0000 0000      '....'           ORI.B   #0,D0     2AA: 0000 0000      '....'           ORI.B   #0,D0     2AE: 0000 0000      '....'           ORI.B   #0,D0     2B2: 0000 0000      '....'           ORI.B   #0,D0     2B6: 0000 0000      '....'           ORI.B   #0,D0     2BA: 0000 0000      '....'           ORI.B   #0,D0     2BE: 0000 0000      '....'           ORI.B   #0,D0     2C2: 0000 0000      '....'           ORI.B   #0,D0     2C6: 0000 0000      '....'           ORI.B   #0,D0     2CA: 0000 0000      '....'           ORI.B   #0,D0     2CE: 0000 0000      '....'           ORI.B   #0,D0     2D2: 0000 0000      '....'           ORI.B   #0,D0     2D6: 0000 0000      '....'           ORI.B   #0,D0     2DA: 0000 0000      '....'           ORI.B   #0,D0     2DE: 0000 0000      '....'           ORI.B   #0,D0     2E2: 0000           '..'             DC.W   0	 	 ; Some sort of exception handler...	      2E4: 594F           'YO'       data8 SUBQ    #4,A7     2E6: 48E7 8080      'H...'           MOVEM.L D0/A0,-(A7)     2EA: 206F 000E      ' o..'           MOVEA.L 14(A7),A0     2EE: 3010           '0.'             MOVE    (A0),D0     2F0: 0C40 F327      '.@.'            CMPI    #$F327,D0     2F4: 661C              $312          BNE.S   lab_4     2F6: 302F 000C      '0/..'           MOVE    12(A7),D0     2FA: 3F40 0008      '?@..'           MOVE    D0,8(A7)     2FE: 5448           'TH'             ADDQ    #2,A0     300: 2F48 000A      '/H..'           MOVE.L  A0,10(A7)     304: 426F 000E      'Bo..'           CLR     14(A7)     308: 42AF 0010      'B...'           CLR.L   16(A7)     30C: 4CDF 0101      'L...'           MOVEM.L (A7)+,D0/A0     310: 4E73           'Ns'             RTE    ; Return from Exception	       312: 0C40 F35F      '.@._'     lab_4 CMPI    #$F35F,D0     316: 662A              $342          BNE.S   lab_6     318: 4AAF 0014      'J...'           TST.L   20(A7)     31C: 6706              $324          BEQ.S   lab_5     31E: 4A2F 0001      'J/..'           TST.B   1(A7)     322: 661E              $342          BNE.S   lab_6     324: 202F 0010      ' /..'     lab_5 MOVE.L  16(A7),D0     328: 2F40 0014      '/@..'           MOVE.L  D0,20(A7)     32C: 202F 000C      ' /..'           MOVE.L  12(A7),D0     330: 2F40 0010      '/@..'           MOVE.L  D0,16(A7)     334: 5448           'TH'             ADDQ    #2,A0     336: 2F48 0012      '/H..'           MOVE.L  A0,18(A7)     33A: 4CDF 0101      'L...'           MOVEM.L (A7)+,D0/A0     33E: 504F           'PO'             ADDQ    #8,A7     340: 4E73           'Ns'             RTE          342: 4CDF 0101      'L...'    lab_6  MOVEM.L (A7)+,D0/A0     346: 584F           'XO'             ADDQ    #4,A7     348$ 4EFB 8161 0004    $34E          JMP     ([data9])     34E: 0000 0000      '....'    data9  DC.L    #0000 0000     352$ 4EFB 8161 000E    $362  data10  JMP     ([data13])     358$ 4EFB 8161 0004    $35E  data11  JMP     ([data12])     35E: 0000 0000      '....'   data12  DC.L    #0000 0000     362: 0000 0000      '....'   data13  DC.L    #0000 0000               366: 7400           't.' GetAutoMode MOVEQ   #0,D2     368: 303C 0002      '0<..'           MOVE    #2,D0     36C: 323C 001F      '2<..'           MOVE    #31,D1     370: 41ED 0088      'A...'           LEA     $88(A5),A0     374: 4A68 000A      'Jh..'    lab_7  TST     10(A0)     378: 670C              $386          BEQ.S   lab_8     37A: 5242           'RB'             ADDQ    #1,D2     37C: B068 0008      '.h..'           CMP.W   8(A0),D0     380: 6D04              $386          BLT.S   lab_8     382: 3028 0008      '0(..'           MOVE    8(A0),D0     386: D0FC 000C      '....'    lab_8  ADDA.W  #12,A0     38A: 51C9 FFE8         $374          DBRA    D1,lab_7     38E: 43FA 0020         $3B0          LEA     data14,A1     392: 323C 0008      '2<..'           MOVE    #8,D1     396: C2C0           '..'             MULU    D0,D1     398: 2031 1000      ' 1..'           MOVE.L  0(A1,D1.W),D0     39C: 2231 1004      '"1..'           MOVE.L  4(A1,D1.W),D1     3A0: 4E75           'Nu'             RTS     	 	 data 3A2: 8D47 6574      '.Get'           PACK    D7,D6,#$6574     3A6¥ 4175           'Au'             ILL*         3A8: 746F           'to'             MOVEQ   #$6F,D2     3AA¥ 4D6F           'Mo'             ILL*         3AC¥ 6465           'de'             BHS.S   $413     3AE: 0000 ; ---- END GetAutoMode ---          0000 0030     '....'            DC.L    #0000 0030     3B2: 0000 0000 '.0....'              DC.L    #0000 0000     3B8: 0000 0040      '...@'           DC.L    #0000 0040     3BC: 0000 0000      '....'           DC.L    #0000 0000     3C0: 0000 0040      '...@'           DC.L    #0000 0040     3C4: 0000 0020      '... '           DC.L    #0000 0020     3C8: 0000 0040      '...@'           DC.L    #0000 0040     3CC: 0000 00FF      '....'           DC.L    #0000 00FF     	 	 3D0: 4E56 FE64      'NV.d'   GetInfo LINK    A6,#-$19C     3D4: 2F03           '/.'             PUSH.L  D3     3D6: 1F38 0A5E         $A5E          PUSH.B  ResLoad     3DA: 1F3C 0001      '.<..'           PUSH.B  #1     3DE: A99B           '..'             _SetResLoad ; (AutoLoad:BOOLEAN)      3E0: 41EE FE64      'A..d'           LEA     -$19C(A6),A0     3E4: 43EE FF80      'C...'           LEA     -$80(A6),A1     3E8: 2149 0012      '!I..'           MOVE.L  A1,ioNamePtr(A0)     3EC: 2178 0A5A 0018    $A5A          MOVE.L  CurMap,ioRefNum(A0)     3F2: 42A8 001C      'B...'           CLR.L   ioFCBIndx(A0)     3F6: 7008           'p.'             MOVEQ   #8,D0       ;Trap = GetFcbInfo     3F8: A260           '.`'             _HFsDispatch ,HFS  ; (A0|IOPB:FCBPBRec):D0\OSErr      3FA: 6600 00E2         $4DE          BNE     lab_17     3FE: 41EE FEE0      'A...'           LEA     -$120(A6),A0     402: 216E FE76 0012 '!n.v..'         MOVE.L  -$18A(A6),18(A0)     408: 316E FE98 0016 '1n....'         MOVE    -$168(A6),22(A0)     40E: 4268 001C      'Bh..'           CLR     ioFDirIndex(A0)     412: 216E FE9E 0030 '!n...0'         MOVE.L  -$162(A6),ioDirID(A0)     418: A20C           '..'             _GetFileInfo ,HFS  ; (A0|IOPB:HParamBlockRec):D0\OSErr      41A: 6600 00C2         $4DE          BNE     lab_17     41E: 2628 0024      '&(.$'           MOVE.L  ioFlFndrInfo+fdCreator(A0),D3     422: 0C83 4D41 4353 '..MACS'         CMPI.L  #'MACS',D3     428: 6700 00B4         $4DE          BEQ     lab_17     42C: 594F           'YO'             SUBQ    #4,A7     42E: 2F3C 7665 7273 '/<vers'         PUSH.L  #'vers'     434: 3F3C 0001      '?<..'           PUSH    #1     438: A80E           '..'             _Get1IxResource ; (theType:ResType; index:INTEGER):Handle      43A: 7400           't.'             MOVEQ   #0,D2     43C: 201F           ' .'             POP.L   D0     43E: 6708              $448          BEQ.S   lab_9     440: 2040           ' @'             MOVEA.L D0,A0     442: 2050           ' P'             MOVEA.L (A0),A0     444: 3410           '4.'             MOVE    (A0),D2     446: 604A              $492          BRA.S   lab_10     448: 594F           'YO'      lab_9  SUBQ    #4,A7     44A: 2F3C 5645 5253 '/<VERS'         PUSH.L  #'VERS'     450: 3F3C 0001      '?<..'           PUSH    #1     454: A80E           '..'             _Get1IxResource ; (theType:ResType; index:INTEGER):Handle      456: 7400           't.'             MOVEQ   #0,D2     458: 201F           ' .'             POP.L   D0     45A: 6736              $492          BEQ.S   lab_10     45C: 2040           ' @'             MOVEA.L D0,A0     45E: 2050           ' P'             MOVEA.L (A0),A0     460: 2410           '$.'             MOVE.L  (A0),D2     462: 1418           '..'             MOVE.B  (A0)+,D2     464: 0402 0030      '...0'           SUBI.B  #48,D2     468: 1202           '..'             MOVE.B  D2,D1     46A: E50A           '..'             LSL.B   #2,D2     46C: D401           '..'             ADD.B   D1,D2     46E: D402           '..'             ADD.B   D2,D2     470: 1218           '..'             MOVE.B  (A0)+,D1     472: 0401 0030      '...0'           SUBI.B  #48,D1     476: D401           '..'             ADD.B   D1,D2     478: E14A           '.J'             LSL     #8,D2     47A: 1018           '..'             MOVE.B  (A0)+,D0     47C: 0400 0030      '...0'           SUBI.B  #48,D0     480: 1200           '..'             MOVE.B  D0,D1     482: E508           '..'             LSL.B   #2,D0     484: D001           '..'             ADD.B   D1,D0     486: D000           '..'             ADD.B   D0,D0     488: 1218           '..'             MOVE.B  (A0)+,D1     48A: 0401 0030      '...0'           SUBI.B  #48,D1     48E: D001           '..'             ADD.B   D1,D0     490: 1400           '..'             MOVE.B  D0,D2     492: 202D 0084      ' -..'   lab_10  MOVE.L  $84(A5),D0     496: 6746              $4DE          BEQ.S   lab_17     498$ 2070 0990      ' p..'           MOVEA.L (0,ZA0,D0.L),A0     49C: 2028 0004      ' (..'           MOVE.L  4(A0),D0     4A0: 6712              $4B4          BEQ.S   lab_13     4A2: B680           '..'             CMP.L   D0,D3     4A4: 6608              $4AE          BNE.S   lab_12     4A6: 3010           '0.'             MOVE    (A0),D0     4A8: 6710              $4BA          BEQ.S   lab_14     4AA: B440           '.@'             CMP.W   D0,D2     4AC: 670C              $4BA          BEQ.S   lab_14     4AE: 41E8 000A      'A...'           LEA     10(A0),A0     4B2: 60E8              $49C          BRA     lab_11     4B4$ 2075 8161 0084     $84          MOVEA.L ([glob1,A5]),A0     4BA: 303C 001F      '0<..'           MOVE    #31,D0     4BE: 43ED 0088      'C...'           LEA     $88(A5),A1     4C2: 2228 0004      '"(..'           MOVE.L  4(A0),D1     4C6: 4A69 000A      'Ji..'           TST     10(A1)     4CA: 6706              $4D2          BEQ.S   lab_16     4CC: B2A9 0004      '....'           CMP.L   4(A1),D1     4D0: 670C              $4DE          BEQ.S   lab_17     4D2: D2FC 000C      '....'           ADDA.W  #12,A1     4D6: 51C8 FFEE         $4C6          DBRA    D0,lab_15     4DA: 7000           'p.'             MOVEQ   #0,D0     4DC: 6002              $4E0          BRA.S   lab_18     4DE: 70FF           'p.'     lab_17  MOVEQ   #-1,D0     4E0: 121F           '..'             POP.B   D1     4E2: 2F08           '/.'             PUSH.L  A0     4E4: 1F01           '..'             PUSH.B  D1     4E6: A99B           '..'             _SetResLoad ; (AutoLoad:BOOLEAN)      4E8: 205F           ' _'             POP.L   A0     4EA: 261F           '&.'             POP.L   D3     4EC: 4E5E           'N^'             UNLK    A6     4EE: 4A40           'J@'             TST     D0     4F0: 4E75           'Nu'             RTS     	 data 4F2: 8947 6574      '.Get'           PACK    D7,D4,#$6574     4F6¥ 496E           'In'             ILL*         4F8¥ 666F           'fo'             BNE.S   $569     4FA: 0000           '..'             DC.W   0; ---- END GetInfo ---	      4FC: 48E7 010C   'H...' myGetNextEvent MOVEM.L D7/A4-A5,-(A7)     500: 2A7A FB3E          $40          MOVEA.L A5wrld,A5     504: 2038 016A         $16A          MOVE.L  Ticks,D0     508: 90AD 0208      '....'           SUB.L   $208(A5),D0     50C: 0C80 0000 003C '.....<'         CMPI.L  #60,D0     512: 635C              $570          BLS.S   lab_22     514: 2B40 0208      '+@..'           MOVE.L  D0,$208(A5)     518: 3E3C 001F      '><..'           MOVE    #31,D7     51C: 49ED 0088      'I...'           LEA     $88(A5),A4     520: 302C 000A      '0,..'           MOVE    10(A4),D0     524: 671E              $544          BEQ.S   lab_20     526: 9EFC 0032      '...2'           SUBA.W  #50,A7     52A: 204F           ' O'             MOVEA.L A7,A0     52C: 42A8 000C      'B...'           CLR.L   ioCompletion(A0)     530: 3140 0018      '1@..'           MOVE    D0,ioRefNum(A0)     534: A011           '..'             _GetEOF ; (A0|IOPB:ParamBlockRec):D0\OSErr      536: 3028 0010      '0(..'           MOVE    ioResult(A0),D0     53A: 4FEF 0032      'O..2'           LEA     50(A7),A7     53E: 6704              $544          BEQ.S   lab_20     540: 426C 000A      'Bl..'           CLR     10(A4)     544: 49EC 000C      'I...'           LEA     12(A4),A4     548: 51CF FFD6         $520          DBRA    D7,lab_19     54C: 4A6D 0210      'Jm..'           TST     $210(A5)     550: 671E              $570          BEQ.S   lab_22     552: 6100 FE12         $366          BSR     GetAutoMode     556: B055           '.U'             CMP.W   (A5),D0     558: 6606              $560          BNE.S   lab_21     55A: B2AD 0074      '...t'           CMP.L   $74(A5),D1     55E: 6710              $570          BEQ.S   lab_22     560: 6100 0B66        $10C8          BSR     SetCPUmode     564: 4A38 08F3         $8F3          TST.B   QDExist     568: 6606              $570          BNE.S   lab_22     56A: 2A78 0904         $904          MOVEA.L CurrentA5,A5     56E: A937           '.7'             _DrawMenuBar       570: 4CDF 3080      'L.0.' lab_22:   MOVEM.L (A7)+,D7/A4-A5     574: 2F3A 0016         $58C          PUSH.L  data16     578: 4E75           'Nu'             RTS   	 	   data 57A: 904D           '.M'             SUB     A5,D0     57C¥ 7947           'yG'             ILL*         57E: 6574           'et'             BLO.S   lab_25     580: 4E65           'Ne'             MOVE    A5,USP     582: 7874           'xt'             MOVEQ   #$74,D4     584¥ 4576           'Ev'             ILL*         586: 656E           'en'             BLO.S   lab_26     588: 7400           't.'             MOVEQ   #0,D2; --- END MY Get Next Event ---     58A: 0000 0000      '....'           ORI.B   #0,D0     58E: 0000           '..'             DC.W   0	      590: 4A6F 0004    'Jo..' myGetResource  TST     4(A7)     594: 6600 0136         $6CC          BNE     lab_37     598: 0CAF 434F 4445 '..CODE'         CMPI.L  #'CODE',6(A7)     5A0: 6600 012A         $6CC          BNE     lab_37     5A4: 48E7 FFFE      'H...'           MOVEM.L D0-D7/A0-A6,-(A7)     5A8: 2A7A FA96          $40          MOVEA.L A5wrld,A5     5AC: 6100 FE22         $3D0          BSR     GetInfo     5B0: 6600 0116         $6C8          BNE     lab_36     5B4: 3A28 0008      ':(..'           MOVE    8(A0),D5     5B8: 4A6D 0210      'Jm..'           TST     $210(A5)     5BC: 6700 00CA         $688          BEQ     lab_32     5C0: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)     5C6: 6700 00C0         $688          BEQ     lab_32     5CA: 0C2D 0000 0023 '.-...#'         CMPI.B  #0,35(A5)     5D0: 6700 00B6         $688          BEQ     lab_32     5D4: 262D 0236      '&-.6'           MOVE.L  $236(A5),D3     5D8: 4244           'BD'             CLR     D4     5DA: 4A68 0008      'Jh..'           TST     8(A0)     5DE: 6708              $5E8          BEQ.S   lab_23     5E0: 262D 023A      '&-.:'           MOVE.L  $23A(A5),D3     5E4: 383C FFFF      '8<..'           MOVE    #$FFFF,D4     5E8: 303C 001F      '0<..'           MOVE    #31,D0     5EC: 43ED 0088      'C...'           LEA     $88(A5),A1     5F0: 4A69 000A      'Ji..'           TST     10(A1)     5F4: 6712              $608          BEQ.S   lab_28     5F6: 4A44           'JD'             TST     D4     5F8: 6608              $602          BNE.S   lab_27     5FA: 4A69 0008      'Ji..'           TST     8(A1)     5FE: 6612              $612          BNE.S   lab_29     600: 6006              $608          BRA.S   lab_28     602: 4A69 0008      'Ji..'           TST     8(A1)     606: 670A              $612          BEQ.S   lab_29     608: D2FC 000C      '....'           ADDA.W  #12,A1     60C: 51C8 FFE2         $5F0          DBRA    D0,lab_24     610: 6076              $688          BRA.S   lab_32     612: 4A44           'JD'             TST     D4     614: 670C              $622          BEQ.S   lab_30     616: 0C2D 0002 0023 '.-...#'         CMPI.B  #2,35(A5)     61C: 666A              $688          BNE.S   lab_32     61E: 4245           'BE'             CLR     D5     620: 6066              $688          BRA.S   lab_32     622: 0C2D 0002 0023 '.-...#'         CMPI.B  #2,35(A5)     628: 675E              $688          BEQ.S   lab_32     62A: 41ED 0212      'A...'           LEA     $212(A5),A0     62E: 317C 0008 0004 '1|....'         MOVE    #8,4(A0)     634: 4268 000E      'Bh..'           CLR     14(A0)     638: 42A8 0010      'B...'           CLR.L   16(A0)     63C: 42A8 0014      'B...'           CLR.L   20(A0)     640: 2243           '"C'             MOVEA.L D3,A1     642: 2151 0018      '!Q..'           MOVE.L  (A1),24(A0)     646: 217C FFFF FFFF '!|....'         MOVE.L  #-1,28(A0)     64E: A05E           '.^'             _NMInstall ; (A0/theNMRec:NMRecPtr):D0\OSErr      650: 4CDF 7FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A6     654: 207A 008C         $6E2          MOVEA.L data18,A0     658: 302F 0004      '0/..'           MOVE    4(A7),D0     65C: 222F 0006      '"/..'           MOVE.L  6(A7),D1     660: 42A7           'B.'             CLR.L   -(A7)     662: 2F01           '/.'             PUSH.L  D1     664: 3F00           '?.'             PUSH    D0     666: 4E90           'N.'             JSR     (A0)     668: 221F           '".'             POP.L   D1     66A: 6712              $67E          BEQ.S   lab_31     66C: 2041           ' A'             MOVEA.L D1,A0     66E: 2050           ' P'             MOVEA.L (A0),A0     670: 317C 4E75 0012 '1|Nu..'         MOVE    #$4E75,18(A0)     676: 7001           'p.'             MOVEQ   #1,D0     678: A198           '..'             _HWPriv       67A: 7003           'p.'             MOVEQ   #3,D0     67C: A198           '..'             _HWPriv       67E: 225F           '"_'             POP.L   A1     680: 5C4F           '\O'             ADDQ    #6,A7     682: 2E81           '..'             MOVE.L  D1,(A7)     684: 4A40           'J@'             TST     D0     686: 4ED1           'N.'             JMP     (A1)     688: 303C 001F      '0<..'           MOVE    #31,D0     68C: 43ED 0088      'C...'           LEA     $88(A5),A1     690: 4A69 000A      'Ji..'           TST     10(A1)     694: 670A              $6A0          BEQ.S   lab_34     696: D2FC 000C      '....'           ADDA.W  #12,A1     69A: 51C8 FFF4         $690          DBRA    D0,lab_33     69E: 6028              $6C8          BRA.S   lab_36     6A0: 700C           'p.'             MOVEQ   #12,D0     6A2: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)      6A4: 3378 0A5A 000A    $A5A          MOVE    CurMap,10(A1)     6AA: 3345 0008      '3E..'           MOVE    D5,8(A1)     6AE: 7000           'p.'             MOVEQ   #0,D0     6B0: 4A6D 0210      'Jm..'           TST     $210(A5)     6B4: 6712              $6C8          BEQ.S   lab_36     6B6: 6100 FCAE         $366          BSR     GetAutoMode     6BA: B055           '.U'             CMP.W   (A5),D0     6BC: 6606              $6C4          BNE.S   lab_35     6BE: B2AD 0074      '...t'           CMP.L   $74(A5),D1     6C2: 6704              $6C8          BEQ.S   lab_36     6C4: 6100 0A02        $10C8          BSR     SetCPUmode     6C8: 4CDF 7FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A6     6CC: 2F3A 0014         $6E2          PUSH.L  data18     6D0: 4E75           'Nu'             RTS     	 	 	 data 6D2: 8F4D 7947      '.MyG'           PACK    -(A5),-(A7),#$7947     6D6: 6574           'et'             BLO.S   lab_40     6D8: 5265           'Re'             ADDQ    #1,-(A5)     6DA¥ 736F           'so'             ILL*         6DC¥ 7572           'ur'             ILL*         6DE¥ 6365           'ce'             BLS.S   $745     6E0: 0000 0000      '....'           ORI.B   #0,D0     6E4: 0000           '..'             DC.W   0; ---- END My Get Ressource ----	     6E6: 2F3A 009A         $782 data19:  PUSH.L  data21     6EA: 4E75           'Nu'             RTS          6EC: 207A F952          $40          MOVEA.L A5wrld,A0  ; If A5wrld really is the A5-world base, A0 is a copy of it now.     6F0: 1200           '..'             MOVE.B  D0,D1     6F2: 674A              $73E          BEQ.S   lab_39     6F4: 1038 0CB2         $CB2          MOVE.B  MMU32bit,D0     6F8: 663E              $738          BNE.S   lab_38     6FA: 40E7           '@.'             MOVE    SR,-(A7)     6FC: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)     700: 11C1 0CB2         $CB2          MOVE.B  D1,MMU32bit     704: 2228 0060      '"(.`'           MOVE.L  96(A0),D1     708$ 4E7B 1807      'N{..'           MOVEC   D1,SRP     70C$ 4E7B 1806      'N{..'           MOVEC   D1,URP     710: 2228 0064      '"(.d'           MOVE.L  $64(A0),D1     714$ 4E7B 1004      'N{..'           MOVEC   D1,ITT0     718: 2228 006C      '"(.l'           MOVE.L  $6C(A0),D1     71C$ 4E7B 1006      'N{..'           MOVEC   D1,DTT0     720: 2228 0068      '"(.h'           MOVE.L  $68(A0),D1     724$ 4E7B 1005      'N{..'           MOVEC   D1,ITT1     728: 2228 0070      '"(.p'           MOVE.L  $70(A0),D1     72C$ 4E7B 1007      'N{..'           MOVEC   D1,DTT1     730: 4E71           'Nq'             NOP          732$ F518           '..'             PFLUSHA      734: 46DF           'F.'             MOVE    (A7)+,SR     736: 4E75           'Nu'             RTS          738: 11C0 0CB2         $CB2   lab_38 MOVE.B  D0,MMU32bit     73C: 4E75           'Nu'             RTS          73E: 1038 0CB2         $CB2   lab_39 MOVE.B  MMU32bit,D0     742: 67F4              $738          BEQ     lab_38     744: 40E7           '@.'             MOVE    SR,-(A7)     746: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)     74A: 11C1 0CB2         $CB2          MOVE.B  D1,MMU32bit     74E: 2228 003C      '"(.<'           MOVE.L  60(A0),D1     752$ 4E7B 1807      'N{..'           MOVEC   D1,SRP     756$ 4E7B 1806      'N{..'           MOVEC   D1,URP     75A: 2228 0040      '"(.@'           MOVE.L  64(A0),D1     75E$ 4E7B 1004      'N{..'           MOVEC   D1,ITT0     762: 2228 0048      '"(.H'           MOVE.L  72(A0),D1     766$ 4E7B 1006      'N{..'           MOVEC   D1,DTT0     76A: 2228 0044      '"(.D'           MOVE.L  68(A0),D1     76E$ 4E7B 1005      'N{..'           MOVEC   D1,ITT1     772: 2228 004C      '"(.L'           MOVE.L  76(A0),D1     776$ 4E7B 1007      'N{..'           MOVEC   D1,DTT1     77A: 4E71           'Nq'             NOP          77C$ F518           '..'             PFLUSHA      77E: 46DF           'F.'             MOVE    (A7)+,SR     780: 4E75           'Nu'             RTS     	      782: 0000 0000      '....'  data21:  DC.L 0000 0000     	 786: 2F3A 003A         $7C2 data22:  PUSH.L  data25     78A: 4E75           'Nu'             RTS     	      78C: 0C40 0006      '.@..'           CMPI    #6,D0     790: 6214              $7A6          BHI.S   lab_41     792: 303B 0206         $79A          MOVE    data24(D0.W*2),D0     796: 4EFB 0002         $79A          JMP     data24(D0.W)     79A: 002C 002C 002C '.,.,.,'  data24 ORI.B   #$2C,44(A4)     7A0: 002C 0030 0060 '.,.0.`'         ORI.B   #$30,96(A4)     7A6: 203C FFFF FE0A ' <....'         MOVE.L  #-$1F6,D0     7AC: 4E75           'Nu'             RTS   	    	   data 7AE: 924D           '.M'             SUB     A5,D1     7B0¥ 794D           'yM'             ILL*         7B2¥ 656D           'em'             BLO.S   $821     7B4: 6F72           'or'             BLE.S   lab_44     7B6¥ 7944           'yD'             ILL*         7B8¥ 6973           'is'             BVS.S   $82D     7BA: 7061           'pa'             MOVEQ   #97,D0     7BC: 7463           'tc'             MOVEQ   #99,D2     7BE: 6800 0000      'er'             BVC     lab_42     ; ----- End MyMemoryDispatcher ----          7C2: 0000 0000      '....'  data25   DC.L 0000 0000     7C6: 7000           'p.'             MOVEQ   #0,D0     7C8: 4E75           'Nu'             RTS    	 ; ------- LockContiguous -------	       7CA: 2F0A           '/.'             PUSH.L  A2     7CC: 2448           '$H'             MOVEA.L A0,A2     7CE: 7200           'r.'             MOVEQ   #0,D1     7D0: 2052           ' R'             MOVEA.L (A2),A0     7D2: 2009           ' .'             MOVE.L  A1,D0     7D4: 6146              $81C          BSR.S   myGetPhysical     7D6: 7000           'p.'             MOVEQ   #0,D0     7D8: 0C81 0000 0001 '......'         CMPI.L  #1,D1     7DE: 6704              $7E4          BEQ.S   lab_43     7E0: 303C FD92      '0<..'           MOVE    #$FD92,D0     7E4: 245F           '$_'             POP.L   A2     7E6: 4E75           'Nu'             RTS     data 7E8: 904C           '.L'             SUB     A4,D0     7EA¥ 6F63           'oc'             BLE.S   $84F     7EC¥ 6B43           'kC'             BMI.S   $831     7EE: 6F6E           'on'             BLE.S   lab_46     7F0: 7469           'ti'             MOVEQ   #$69,D2     7F2¥ 6775           'gu'             BEQ.S   $869     7F4¥ 6F75           'ou'             BLE.S   $86B     7F6¥ 7300           's.'             ILL*         7F8: 0000           '..'             DC.W   0     ; ---- End LockContiguous -----        7FA: 2F0A           '/.'             PUSH.L  A2     7FC: 2448           '$H'             MOVEA.L A0,A2     7FE: 2209           '".'             MOVE.L  A1,D1     800: 205A           ' Z'             MOVEA.L (A2)+,A0     802: 201A           ' .'             MOVE.L  (A2)+,D0     804: 6116              $81C          BSR.S   myGetPhysical     806: 2041           ' A'             MOVEA.L D1,A0     808: 7000           'p.'             MOVEQ   #0,D0     80A: 245F           '$_'             POP.L   A2     80C: 4E75           'Nu'             RTS          80E: 8D47 6574      '.Get'           PACK    D7,D6,#$6574     812: 5068 7973      'Phys'           ADDQ    #8,$7973(A0)     816¥ 6963           'ic'             BVS.S   $87B     818: 616C           'al'          BSR.S   proc4     81A: 0000           '..'             DC.W   0	  ; ---- END GetPhysical ----	      81C: 48E7 3FF0   'H.?.'  myGetPhysical  MOVEM.L D2-D7/A0-A3,-(A7)     820: 2E01           '..'             MOVE.L  D1,D7     822: 97CB           '..'             SUBA.L  A3,A3     824: 7C00           '|.'             MOVEQ   #0,D6     826: 7801           'x.'             MOVEQ   #1,D4     828$ 4E7A 1805      'Nz..'           MOVEC   MMUSR,D1     82C$ F548           '.H'             PTESTW   (A0)     82E$ 4E7A 3805      'Nz8.'           MOVEC   MMUSR,D3     832$ 4E7B 1805      'N{..'           MOVEC   D1,MMUSR     836: 0243 F000      '.C..'           ANDI    #$F000,D3     83A: 2243           '"C'             MOVEA.L D3,A1     83C: 2208           '".'             MOVE.L  A0,D1     83E: 0281 0000 0FFF '......'         ANDI.L  #$FFF,D1     844: D3C1           '..'             ADDA.L  D1,A1     846: 0C04 0001      '....'           CMPI.B  #1,D4     84A: 6606              $852          BNE.S   lab_45     84C: 2803           '(.'             MOVE.L  D3,D4     84E: 2649           '&I'             MOVEA.L A1,A3     850: 7400           't.'             MOVEQ   #0,D2     852: 4481           'D.'             NEG.L   D1     854: 0681 0000 2000 '.... .'         ADDI.L  #$2000,D1     85A: D1C1           '..'             ADDA.L  D1,A0     85C: 9081           '..'             SUB.L   D1,D0     85E: 640A              $86A          BHS.S   lab_47     860: D081           '..'             ADD.L   D1,D0     862: 2200           '".'             MOVE.L  D0,D1     864: 7000           'p.'             MOVEQ   #0,D0     866: D481           '..'             ADD.L   D1,D2     868: 6004              $86E          BRA.S   lab_48     86A: B883           '..'             CMP.L   D3,D4     86C: 6714              $882          BEQ.S   lab_50     86E: 5246           'RF'             ADDQ    #1,D6     870: 4A87           'J.'             TST.L   D7     872: 6708              $87C          BEQ.S   lab_49     874: 24CB           '$.'             MOVE.L  A3,(A2)+     876: 24C2           '$.'             MOVE.L  D2,(A2)+     878: 5347           'SG'             SUBQ    #1,D7     87A: 6712              $88E          BEQ.S   lab_51     87C: 7400           't.'             MOVEQ   #0,D2     87E: 2649           '&I'             MOVEA.L A1,A3     880: 2803           '(.'             MOVE.L  D3,D4     882: D481           '..'             ADD.L   D1,D2     884: 0684 0000 2000 '.... .'         ADDI.L  #$2000,D4     88A: 4A80           'J.'             TST.L   D0     88C: 669A              $828          BNE     lab_44     88E: 2206           '".'             MOVE.L  D6,D1     890: 4CDF 0FFC      'L...'           MOVEM.L (A7)+,D2-D7/A0-A3     894: 4E75           'Nu'             RTS    	 data 896: 8F4D 7947      '.MyG'           PACK    -(A5),-(A7),#$7947     89A: 6574           'et'             BLO.S   proc6     89C: 5068 7973      'Phys'           ADDQ    #8,$7973(A0)     8A0¥ 6963           'ic'             BVS.S   $905     8A2: 616C           'al'             BSR.S   proc6     8A4: 0000           '..'             DC.W   0   ; ----- END MyGetPhysical ----	 	 8A6: 0C38 0004 012F    $12F   myClearCache  CMPI.B  #4,CPUFlag ; code for installed CPU: 0=68000, 1=68010, 2=68020,                                                             ; 3=68030 4=68040     8AC: 6712              $8C0          BEQ.S   lab_52     8AE: 2F01           '/.'             PUSH.L  D1     8B0$ 4E7A 1002      'Nz..'           MOVEC   CACR,D1     8B4: 0001 0008      '....'           ORI.B   #8,D1     8B8$ 4E7B 1002      'N{..'           MOVEC   D1,CACR     8BC: 221F           '".'             POP.L   D1     8BE: 4E75           'Nu'             RTS          8C0: 4E71           'Nq'     lab_52  NOP          8C2$ F4F8           '..'             CPUSHA  BC     8C4: 4E71           'Nq'             NOP          8C6: 48E7 0084      'H...'           MOVEM.L A0/A5,-(A7)     8CA: 2A7A F774          $40          MOVEA.L A5wrld,A5     8CE: 206D 0012      ' m..'           MOVEA.L 18(A5),A0 ; == 54_cmd_5.3     8D2: 4E90           'N.'             JSR     (A0) ; thats $58 in this code     8D4$ 4E7A 1002      'Nz..'           MOVEC   CACR,D1     8D8: 0C81 8000 8000 '......'         CMPI.L  #$80008000,D1  ; a common CACR line for 68040 (both caches enabled), mhh     8DE: 6706              $8E6          BEQ.S   lab_53     8E0: 206D 001A      ' m..'           MOVEA.L 26(A5),A0 ; == 53_cmd_5.1     8E4: 4E90           'N.'             JSR     (A0)     8E6: 4CDF 2100      'L.!.'   lab_53  MOVEM.L (A7)+,A0/A5     8EA: 4E75           'Nu'             RTS     	 data 8EC: 8E4D           '.M'             OR      A5,D7     8EE¥ 7943           'yC'             ILL*         8F0¥ 6C65           'le'             BGE.S   $957     8F2: 6172           'ar'             BSR.S   proc7     8F4¥ 4361           'Ca'             ILL*         8F6: 6368           'ch'             BLS.S   lab_60     8F8: 6500 0000      'e.'             BLO     lab_54; --- END MyClearCache	 	     8FC: 48E7 FFFC      'H...'   myShutdown  MOVEM.L D0-D7/A0-A5,-(A7)     900: 2A7A F73E          $40          MOVEA.L A5wrld,A5     904: 0C55 0040      '.U.@'           CMPI    #64,(A5) ; '@'     908: 6604              $90E          BNE.S   lab_55     90A: 6100 042A         $D36          BSR     Switchto030 ; WILL REPLACE DEBUGGER!     90E: 4CDF 3FFF      'L.?.'   lab_55  MOVEM.L (A7)+,D0-D7/A0-A5     912: 4E75           'Nu'             RTS     	      914: 8C4D           '.M'             OR      A5,D6     916¥ 7953           'yS'             ILL*         918¥ 6875           'hu'             BVC.S   $98F     91A: 7444           'tD'             MOVEQ   #68,D2     91C¥ 6F77           'ow'             BLE.S   $995     91E: 6E00 0000      'n.'          BGT     lab_57	; --- END MyShutDown 		     922: 594F           'YO'   mySCSIdispatch  SUBQ    #4,A7     924: 2F0D           '/.'             PUSH.L  A5     926: 2A7A F718          $40          MOVEA.L A5wrld,A5     92A: 0C6F 0009 000C '.o....'         CMPI    #9,12(A7)     930: 6606              $938          BNE.S   lab_58     932: 3F7C 0006 000C '?|....'         MOVE    #6,12(A7)     938: 2F6D 0290 0004 '/m....'         MOVE.L  $290(A5),4(A7)     93E: 2A5F           '*_'             POP.L   A5     940: 4E75           'Nu'             RTS     data 942: 904D           '.M'             SUB     A5,D0     944¥ 7953           'yS'             ILL*         946¥ 4353           'CS'             ILL*         948¥ 4944           'ID'             ILL*         94A¥ 6973           'is'             BVS.S   $9BF     94C: 7061           'pa'             MOVEQ   #97,D0     94E: 7463           'tc'             MOVEQ   #99,D2     950: 6800 0000      'h.'          BVC     lab_59; --- End My SCSI Displatch ---	 /*--- If this is a driver as "by the book" (p. 1-28, http://mirror.informatimago.com/next/developer.apple.com/documentation/mac/pdf/Devices/Device_Manager.pdf)it could be the head which would look like thisDHeaderDFlags	DC.W 0 ;set by MyDriverOpenDDelay	DC.W 0 ;noneDEMask	DC.W 0 ;DA event maskDMenu	DC.W 0 ;no menu		DC.W DOpen - DHeader ;offset to Open		DC.W DPrime - DHeader ;offset to Prime		DC.W DControl - DHeader ;offset to Control		DC.W DStatus - DHeader ;offset to Status		DC.W DClose - DHeader ;offset to CloseName 	DC.B '.MYDRIVER' ;driver name		ALIGN 2 ;word alignment		DFlags	DC.W 4F00 ;set by MyDriverOpenDDelay	DC.W 0000 ;noneDEMask	DC.W 0000 ;DA event maskDMenu	DC.W 0000 ;no menu		DC.W 0018 DOpen - DHeader ;offset to Open		DC.W 001C DPrime - DHeader ;offset to Prime		DC.W 0020 DControl - DHeader ;offset to Control		DC.W 0024 DStatus - DHeader ;offset to Status		DC.W 0028 DClose - DHeader ;offset to CloseName 	DC.B '.Sony' ;driver name		*/     954: 4F00           'O.' myFloppyDrvr  CHK.L   D0,D7     956: 0000 0000      '....'           ORI.B   #0,D0     95A: 0000 0018      '....'           ORI.B   #$18,D0     95E: 001C 0020      '... '           ORI.B   #$20,(A4)+     962: 0024 0028      '.$.('           ORI.B   #$28,-(A4)     966: 052E 536F      '..So'           BTST    D2,$536F(A6)  ; these 2 lines are the string     96A¥ 6E79           'ny'             BGT.S   $9E5          ; ".Sony" hinting towards floppy	      96C: 7208           'r.'             MOVEQ   #8,D1         ; If I'm correct with the header     96E: 600E              $97E          BRA.S   lab_61        ; these would be the offsets     970: 720A           'r.'             MOVEQ   #10,D1     972: 600A              $97E          BRA.S   lab_61     974: 720C           'r.'             MOVEQ   #12,D1     976: 6006              $97E          BRA.S   lab_61     978: 720E           'r.'             MOVEQ   #14,D1     97A: 6002              $97E          BRA.S   lab_61     97C: 7210           'r.'             MOVEQ   #16,D1     97E: 227A F6C0          $40   lab_61 MOVEA.L A5wrld,A1     982: 2029 0078      ' ).x'           MOVE.L  $78(A1),D0     986: 2340 024C      '#@.L'           MOVE.L  D0,$24C(A1)     98A: 0280 0000 8000 '......'         ANDI.L  #$8000,D0     990: 2340 0078      '#@.x'           MOVE.L  D0,$78(A1)     994: 0C51 0040      '.Q.@'           CMPI    #64,(A1) ; '@'     998: 6612              $9AC          BNE.S   lab_62     99A$ F4F8           '..'             CPUSHA  BC     99C$ 4E7B 0002      'N{..'           MOVEC   D0,CACR     9A0: 48E7 E0C0      'H...'           MOVEM.L D0-D2/A0-A1,-(A7)     9A4: 6100 FF00         $8A6          BSR     myClearCache      ; <-- This is most likely the reason for     9A8: 4CDF 0307      'L...'           MOVEM.L (A7)+,D0-D2/A0-A1 ;     having an own driver. Caches!     9AC: 4A69 024A      'Ji.J'   lab_62  TST     $24A(A1)     9B0: 2269 0246      '"i.F'           MOVEA.L $246(A1),A1     9B4: 6704              $9BA          BEQ.S   lab_63     9B6: A029           '.)'             _HLock  ; (A0/h:Handle)      9B8: 2251           '"Q'             MOVEA.L (A1),A1     9BA: 2009           ' .'             MOVE.L  A1,D0     9BC: A055           '.U'             _StripAddress ; (D0/theAddress:HLongInt):D0\HLongInt      9BE: 2240           '"@'             MOVEA.L D0,A1     9C0: 3231 1000      '21..'           MOVE    0(A1,D1.W),D1     9C4: 43F1 1000      'C...'           LEA     0(A1,D1.W),A1     9C8: 4E91           'N.'             JSR     (A1)     9CA: 4A40           'J@'             TST     D0     9CC: 4E75           'Nu'             RTS     	 data 9CE: 904D           '.M'             SUB     A5,D0     9D0¥ 7946           'yF'             ILL*         9D2¥ 6C6F           'lo'             BGE.S   $A43     9D4: 7070           'pp'             MOVEQ   #$70,D0     9D6¥ 7944           'yD'             ILL*         9D8: 7269           'ri'             MOVEQ   #$69,D1     9DA: 7665           've'             MOVEQ   #$65,D3     9DC: 7200           'r.'             MOVEQ   #0,D1     9DE: 0000           '..'             DC.W   0	 ; --- END My Floppy Driver ---     9E0: 594F           'YO'     data29  SUBQ    #4,A7     9E2: 48E7 8080      'H...'           MOVEM.L D0/A0,-(A7)     9E6: 207A F658          $40          MOVEA.L A5wrld,A0     9EA: 0C69 FFFB 0018 '.i....'         CMPI    #-5,24(A1)     9F0: 661E              $A10          BNE.S   lab_64     9F2: 2028 024C      ' (.L'           MOVE.L  $24C(A0),D0     9F6: 2140 0078      '!@.x'           MOVE.L  D0,$78(A0)     9FA: 0C50 0040      '.P.@'           CMPI    #64,(A0) ; '@'     9FE: 6610              $A10          BNE.S   lab_64     A00$ 4E7B 0002      'N{..'           MOVEC   D0,CACR     A04: 48E7 E0C0      'H...'           MOVEM.L D0-D2/A0-A1,-(A7)     A08: 6100 FE9C         $8A6          BSR     myClearCache     A0C: 4CDF 0307      'L...'           MOVEM.L (A7)+,D0-D2/A0-A1     A10: 2F68 0250 0008 '/h.P..'         MOVE.L  $250(A0),8(A7)     A16: 4CDF 0101      'L...'           MOVEM.L (A7)+,D0/A0     A1A: 4E75           'Nu'             RTS     	 ; -- My Floppy Driver (again?) ---	 data A1C: 904D           '.M'             SUB     A5,D0     A1E¥ 7946           'yF'             ILL*         A20¥ 6C6F           'lo'             BGE.S   $A91     A22: 7070           'pp'             MOVEQ   #$70,D0     A24¥ 7944           'yD'             ILL*         A26: 7269           'ri'             MOVEQ   #$69,D1     A28: 7665           've'             MOVEQ   #$65,D3     A2A: 7200           'r.'             MOVEQ   #0,D1     A2C: 0000           '..'             DC.W   0	 	 ; --- start My Draw MB (menu bar) ----	      A2E: 207A F610          $40 myDrawMB MOVEA.L A5wrld,A0     A32: 4A68 0080      'Jh..'           TST     $80(A0)     A36: 6606              $A3E          BNE.S   lab_65     A38: 2068 025C      ' h.\'           MOVEA.L $25C(A0),A0     A3C: 4ED0           'N.'             JMP     (A0)     A3E: 2068 025C      ' h.\'           MOVEA.L $25C(A0),A0     A42: 4E90           'N.'             JSR     (A0)     A44: 4E56 FFE6      'NV..'           LINK    A6,#-$1A     A48: 48E7 FFF8      'H...'           MOVEM.L D0-D7/A0-A4,-(A7)     A4C: 287A F5F2          $40          MOVEA.L A5wrld,A4     A50: 2078 0A1C         $A1C          MOVEA.L MenuList,A0     A54: 4A88           'J.'             TST.L   A0     A56: 6700 0100         $B58          BEQ     lab_69     A5A: 2050           ' P'             MOVEA.L (A0),A0     A5C: 4A88           'J.'             TST.L   A0     A5E: 6700 00F8         $B58          BEQ     lab_69     A62: 4A50           'JP'             TST     (A0)     A64: 6700 00F2         $B58          BEQ     lab_69     A68: 486E FFFC      'Hn..'           PEA     -4(A6)     A6C: A874           '.t'             _GetPort ; (VAR port:GrafPtr)      A6E: 2F38 09DE         $9DE          PUSH.L  WMgrPort     A72: A873           '.s'             _SetPort ; (port:GrafPtr)      A74: 2078 09DE         $9DE          MOVEA.L WMgrPort,A0     A78: 3028 0016      '0(..'           MOVE    portRect+right(A0),D0     A7C: 3D40 FFFA      '=@..'           MOVE    D0,-6(A6)     A80: 0440 0010      '.@..'           SUBI    #16,D0     A84: 3D40 FFF6      '=@..'           MOVE    D0,-10(A6)     A88: 3038 0BAA         $BAA          MOVE    MBarHeight,D0     A8C: 48C0           'H.'             EXT.L   D0     A8E: 7202           'r.'             MOVEQ   #2,D1     A90: 80C1           '..'             DIVU    D1,D0     A92: 5040           'P@'             ADDQ    #8,D0     A94: 3D40 FFF8      '=@..'           MOVE    D0,-8(A6)     A98: 0440 0010      '.@..'           SUBI    #16,D0     A9C: 3D40 FFF4      '=@..'           MOVE    D0,-12(A6)     AA0: 0C78 3FFF 028E    $28E          CMPI    #$3FFF,Rom85     AA6: 6632              $ADA          BNE.S   lab_66     AA8$ 2070 81E1 08A4    $8A4          MOVEA.L ([MainDevice]),A0     AAE$ 2070 8161 0016 ' p.a..'         MOVEA.L ([22,A0]),A0     AB4: 0C68 0004 0020 '.h... '         CMPI    #4,32(A0)     ABA: 6D1E              $ADA          BLT.S   lab_66     ABC: 42A7           'B.'             CLR.L   -(A7)     ABE: 42A7           'B.'             CLR.L   -(A7)     AC0: AA64           '.d'             _GetMCEntry ; (menuID,menuItem:INTEGER):MCEntryPtr      AC2: 201F           ' .'             POP.L   D0     AC4: 6714              $ADA          BEQ.S   lab_66     AC6: 2040           ' @'             MOVEA.L D0,A0     AC8: 4868 0004      'Hh..'           PEA     4(A0)     ACC: 4868 0016      'Hh..'           PEA     22(A0)     AD0: 2F38 0D2C         $D2C          PUSH.L  WMgrCPort     AD4: A873           '.s'             _SetPort ; (port:GrafPtr)      AD6: AA15           '..'             _RGBBackColor ; (color:RGBColor)      AD8: AA14           '..'             _RGBForeColor ; (color:RGBColor)      ADA: 206C 020C      ' l..'           MOVEA.L $20C(A4),A0     ADE: 4A88           'J.'             TST.L   A0     AE0: 6776              $B58          BEQ.S   lab_69     AE2: A029           '.)'             _HLock  ; (A0/h:Handle)      AE4: 2050           ' P'             MOVEA.L (A0),A0     AE6: 0C54 0030      '.T.0'           CMPI    #48,(A4) ; '0'     AEA: 6712              $AFE          BEQ.S   lab_67     AEC: 41E8 0020      'A.. '           LEA     32(A0),A0     AF0: 0CAC 0000 0000 '......'         CMPI.L  #0,$74(A4)     AF8: 6704              $AFE          BEQ.S   lab_67     AFA: 41E8 0020      'A.. '           LEA     32(A0),A0     AFE: 2D48 FFE6      '-H..'           MOVE.L  A0,-26(A6)     B02: 3D7C 0002 FFEA '=|....'         MOVE    #2,-22(A6)     B08: 426E FFEC      'Bn..'           CLR     -20(A6)     B0C: 426E FFEE      'Bn..'           CLR     -18(A6)     B10: 3D7C 0010 FFF0 '=|....'         MOVE    #16,-16(A6)     B16: 3D7C 0010 FFF2 '=|....'         MOVE    #16,-14(A6)     B1C: 486E FFE6      'Hn..'           PEA     -26(A6)     B20: 2078 09DE         $9DE          MOVEA.L WMgrPort,A0     B24: 4868 0002      'Hh..'           PEA     portBits(A0)     B28: 486E FFEC      'Hn..'           PEA     -20(A6)     B2C: 486E FFF4      'Hn..'           PEA     -12(A6)     B30: 3F3C 0001      '?<..'           PUSH    #1     B34: 42A7           'B.'             CLR.L   -(A7)     B36: A8EC           '..'             _CopyBits ; (srcBits,dstBits:BitMap; srcRect,dstRect:Rect; mode:INTEGER{|XferMode}; maskRgn:RgnHandle)      B38: 0C78 3FFF 028E    $28E          CMPI    #$3FFF,Rom85     B3E: 660C              $B4C          BNE.S   lab_68     B40: 4878 0C16      'Hx..'           PEA     $C16     B44: AA15           '..'             _RGBBackColor ; (color:RGBColor)      B46: 4878 0C10      'Hx..'           PEA     $C10     B4A: AA14           '..'             _RGBForeColor ; (color:RGBColor)      B4C: 206C 020C      ' l..'           MOVEA.L $20C(A4),A0     B50: A02A           '.*'             _HUnLock ; (A0/h:Handle)      B52: 2F2E FFFC      '/...'           PUSH.L  -4(A6)     B56: A873           '.s'             _SetPort ; (port:GrafPtr)      B58: 4CDF 1FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A4     B5C: 4E5E           'N^'             UNLK    A6     B5E: 4E75           'Nu'             RTS          B60: 8A4D           '.M'             OR      A5,D5     B62¥ 7944           'yD'             ILL*         B64: 7261           'ra'             MOVEQ   #97,D1     B66¥ 774D           'wM'             ILL*         B68: 4200           'B.'             CLR.B   D0     B6A: 0000           '..'             DC.W   0; ---- end My Draw MB (menu bar) ----		 	      B6C: 48E7 E0C0      'H...' data31 MOVEM.L D0-D2/A0-A1,-(A7)     B70: 302F 0018      '0/..'           MOVE    24(A7),D0     B74: 6170              $BE6          BSR.S   proc8     B76: 6768              $BE0          BEQ.S   lab_75     B78: A069           '.i'             _HGetState ; (A0/h:Handle):D0\Byte      B7A: 0800 0007      '....'           BTST    #7,D0     B7E: 660A              $B8A          BNE.S   lab_71     B80: 4A38 0BB2         $BB2          TST.B   SegHiEnable     B84: 6702              $B88          BEQ.S   lab_70     B86: A064           '.d'             _MoveHHi ; (A0/h:Handle)      B88: A029           '.)'             _HLock  ; (A0/h:Handle)      B8A: 2010           ' .'             MOVE.L  (A0),D0     B8C: A055           '.U'             _StripAddress ; (D0/theAddress:HLongInt):D0\HLongInt      B8E: 2040           ' @'             MOVEA.L D0,A0     B90: 224D           '"M'             MOVEA.L A5,A1     B92: D2F8 0934         $934          ADDA.W  CurJtOffset,A1     B96: D2D0           '..'             ADDA.W  (A0),A1     B98: 0C69 4EF9 0002 '.iN...'         CMPI    #$4EF9,2(A1)     B9E: 6720              $BC0          BEQ.S   lab_73     BA0: 3028 0002      '0(..'           MOVE    2(A0),D0     BA4: 671A              $BC0          BEQ.S   lab_73     BA6: 322F 0018      '2/..'           MOVE    24(A7),D1     BAA: 7400           't.'             MOVEQ   #0,D2     BAC: 3419           '4.'             MOVE    (A1)+,D2     BAE: 3341 FFFE      '3A..'           MOVE    D1,-2(A1)     BB2: 32FC 4EF9      '2.N.'           MOVE    #$4EF9,(A1)+     BB6: 4870 2804      'Hp(.'           PEA     4(A0,D2.L)     BBA: 22DF           '".'             POP.L   (A1)+     BBC: 5340           'S@'             SUBQ    #1,D0     BBE: 66EC              $BAC          BNE     lab_72     BC0: 226F 0014      '"o..'           MOVEA.L 20(A7),A1     BC4: 5D89           '].'             SUBQ.L  #6,A1     BC6: 2F49 0016      '/I..'           MOVE.L  A1,22(A7)     BCA$ 4EB0 81E1 06F4    $6F4          JSR     ([jCacheFlush])     BD0: 4CDF 0307      'L...'           MOVEM.L (A7)+,D0-D2/A0-A1     BD4: 544F           'TO'             ADDQ    #2,A7     BD6: 4A38 012D         $12D          TST.B   LoadTrap     BDA: 6702              $BDE          BEQ.S   lab_74     BDC: A9FF           '..'             _Debugger       BDE: 4E75           'Nu'             RTS     	      BE0: 700F           'p.'             MOVEQ   #15,D0      ;Err = dsLoadErr     BE2: A9C9           '..'             _SysError ; (D0/errorCode:OSErr)      BE4: A9FF           '..'             _Debugger       BE6: 50F8 0A5E         $A5E          ST      ResLoad     BEA: 594F           'YO'             SUBQ    #4,A7     BEC: 2F3C 434F 4445 '/<CODE'         PUSH.L  #'CODE'     BF2: 3F00           '?.'             PUSH    D0     BF4: A9A0           '..'             _GetResource ; (theType:ResType; ID:INTEGER):Handle      BF6: 205F           ' _'             POP.L   A0     BF8: 2008           ' .'             MOVE.L  A0,D0     BFA: 4E75           'Nu'             RTS    	      BFC: 206F 0004      ' o..'  data32   MOVEA.L 4(A7),A0     C00: 0C50 4EF9      '.PN.'           CMPI    #$4EF9,(A0)     C04: 663C              $C42          BNE.S   lab_78     C06: 3028 FFFE      '0(..'           MOVE    -2(A0),D0     C0A: 61DA              $BE6          BSR     proc8     C0C: A02A           '.*'             _HUnLock ; (A0/h:Handle)      C0E: 2050           ' P'             MOVEA.L (A0),A0     C10: 224D           '"M'             MOVEA.L A5,A1     C12: D2F8 0934         $934          ADDA.W  CurJtOffset,A1     C16: D2D0           '..'             ADDA.W  (A0),A1     C18: 3028 0002      '0(..'           MOVE    2(A0),D0     C1C: 671A              $C38          BEQ.S   lab_77     C1E: 3211           '2.'             MOVE    (A1),D1     C20: 2429 0004      '$)..'           MOVE.L  4(A1),D2     C24: 9488           '..'             SUB.L   A0,D2     C26: 5982           'Y.'             SUBQ.L  #4,D2     C28: 32C2           '2.'             MOVE    D2,(A1)+     C2A: 32FC 3F3C      '2.?<'           MOVE    #$3F3C,(A1)+     C2E: 32C1           '2.'             MOVE    D1,(A1)+     C30: 32FC A9F0      '2...'           MOVE    #$A9F0,(A1)+ ; LoadSeg     C34: 5340           'S@'             SUBQ    #1,D0     C36: 66E6              $C1E          BNE     lab_76     C38: 2F01           '/.'             PUSH.L  D1     C3A$ 4EB0 81E1 06F4    $6F4          JSR     ([jCacheFlush])     C40: 221F           '".'             POP.L   D1     C42: 2E9F           '..'             POP.L   (A7)     C44: 4E75           'Nu'             RTS     	 	 ; My_HWPriv	 	      C46: 0C38 0004 012F    $12F  data33  CMPI.B  #4,CPUFlag     C4C: 666C              $CBA          BNE.S   lab_84 ; if not 68040 -SE/30 branch!     C4E: 0C40 0000      '.@..'           CMPI    #0,D0     C52: 6624              $C78          BNE.S   lab_80     C54$ 4E7A 0002      'Nz..'           MOVEC   CACR,D0     C58$ E9C0 1401      '....'           BFEXTU  D0{16:1},D1     C5C: 0880 000F      '....'           BCLR    #$F,D0     C60: 2408           '$.'             MOVE.L  A0,D2     C62: 6704              $C68          BEQ.S   lab_79     C64: 08C0 000F      '....'           BSET    #$F,D0     C68: 2041           ' A'     lab_79  MOVEA.L D1,A0     C6A$ F4F8           '..'             CPUSHA  BC     C6C$ 4E7B 0002      'N{..'           MOVEC   D0,CACR     C70: 7000           'p.'             MOVEQ   #0,D0     C72: 6100 FC32         $8A6          BSR     myClearCache     C76: 4E75           'Nu'             RTS          C78: 0C40 0009      '.@..'   lab_80  CMPI    #9,D0     C7C: 6706              $C84          BEQ.S   lab_81     C7E: 0C40 0001      '.@..'           CMPI    #1,D0     C82: 6608              $C8C          BNE.S   lab_82     C84: 6100 FC20         $8A6  lab_81  BSR     myClearCache     C88: 7000           'p.'             MOVEQ   #0,D0     C8A: 4E75           'Nu'             RTS          C8C: 0C40 0002      '.@..'   lab_82  CMPI    #2,D0     C90: 661A              $CAC          BNE.S   lab_83     C92$ 4E7A 0002      'Nz..'           MOVEC   CACR,D0     C96$ E9C0 1001      '....'           BFEXTU  D0{0:1},D1     C9A: 0880 001F      '....'           BCLR    #$1F,D0     C9E: 2408           '$.'             MOVE.L  A0,D2     CA0: 67C6              $C68          BEQ     lab_79     CA2: 6100 FC02         $8A6          BSR     myClearCache     CA6: 08C0 001F      '....'           BSET    #$1F,D0     CAA: 60BC              $C68          BRA     lab_79     CAC: 0C40 0003      '.@..'   lab_83  CMPI    #3,D0     CB0: 6608              $CBA          BNE.S   lab_84     CB2: 6100 FBF2         $8A6          BSR     myClearCache     CB6: 7000           'p.'             MOVEQ   #0,D0     CB8: 4E75           'Nu'             RTS          CBA: 594F           'YO'     lab_84  SUBQ    #4,A7     CBC: 2F08           '/.'             PUSH.L  A0     CBE: 207A F380          $40          MOVEA.L A5wrld,A0     CC2: 2F68 0288 0004 '/h....'         MOVE.L  $288(A0),4(A7)     CC8: 205F           ' _'             POP.L   A0     CCA: 4E75           'Nu'             RTS     	 	 ; End My_HWPriv	 	 ; ??? 	      CCC: 2F01           '/.'    data34   PUSH.L  D1     CCE$ 4EB0 81E1 06F4    $6F4          JSR     ([jCacheFlush])     CD4: 221F           '".'             POP.L   D1     CD6: 594F           'YO'             SUBQ    #4,A7     CD8: 2F08           '/.'             PUSH.L  A0     CDA: 207A F364          $40          MOVEA.L A5wrld,A0     CDE: 2F68 028C 0004 '/h....'         MOVE.L  $28C(A0),4(A7)     CE4: 205F           ' _'             POP.L   A0     CE6: 4E75           'Nu'             RTS     	 	      CE8: 206F 0004      ' o..'   data35  MOVEA.L 4(A7),A0     CEC: 43FA 029A         $F88          LEA     SpeedProc,A1     CF0: 2089           ' .'             MOVE.L  A1,(A0)     CF2: 205F           ' _'             POP.L   A0     CF4: 504F           'PO'             ADDQ    #8,A7     CF6: 4257           'BW'             CLR     (A7)     CF8: 4ED0           'N.'             JMP     (A0)     CFA: 206F 0004      ' o..'           MOVEA.L 4(A7),A0     CFE: 227A F340          $40          MOVEA.L A5wrld,A1     D02: 20A9 0302      ' ...'           MOVE.L  $302(A1),(A0)     D06: 205F           ' _'             POP.L   A0     D08: 504F           'PO'             ADDQ    #8,A7     D0A: 4257           'BW'             CLR     (A7)     D0C: 4ED0           'N.'             JMP     (A0)     D0E: 206F 0004      ' o..'           MOVEA.L 4(A7),A0     D12: 227A F32C          $40          MOVEA.L A5wrld,A1     D16: 20A9 031A      ' ...'           MOVE.L  $31A(A1),(A0)     D1A: 205F           ' _'             POP.L   A0     D1C: 504F           'PO'             ADDQ    #8,A7     D1E: 4257           'BW'             CLR     (A7)     D20: 4ED0           'N.'             JMP     (A0)     D22: 206F 0004      ' o..'           MOVEA.L 4(A7),A0     D26: 227A F318          $40          MOVEA.L A5wrld,A1     D2A: 20A9 030E      ' ...'           MOVE.L  $30E(A1),(A0)     D2E: 205F           ' _'             POP.L   A0     D30: 504F           'PO'             ADDQ    #8,A7     D32: 4257           'BW'             CLR     (A7)     D34: 4ED0           'N.'             JMP     (A0)     D36: 48E7 E0C0      'H...'Switchto030  MOVEM.L D0-D2/A0-A1,-(A7)     D3A: 40E7           '@.'             MOVE    SR,-(A7)     D3C: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)     D40: 7001           'p.'             MOVEQ   #1,D0     D42: A05D           '.]'             _SwapMMUMode       D44: 1F00           '..'             PUSH.B  D0     D46: 21ED 02A4 0120    $120          MOVE.L  $2A4(A5),MacJmp     D4C: 11ED 02B4 0BFF    $BFF          MOVE.B  $2B4(A5),MacJmpFlag     D52: 21ED 02AC 00FC '!.....'         MOVE.L  $2AC(A5),$FC     D58: 303C A9FF      '0<..'           MOVE    #$A9FF,D0   ; Debugger     D5C: 206D 0294      ' m..'           MOVEA.L $294(A5),A0     D60: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word)      D62: 303C ABFF      '0<..'           MOVE    #$ABFF,D0   ; DebugStr     D66: 206D 0298      ' m..'           MOVEA.L $298(A5),A0     D6A: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word)      D6C: 202D 0024      ' -.$'           MOVE.L  36(A5),D0     D70: 670E              $D80          BEQ.S   lab_85     D72: 2040           ' @'             MOVEA.L D0,A0     D74: 48E7 FFFE      'H...'           MOVEM.L D0-D7/A0-A6,-(A7)     D78: 7000           'p.'             MOVEQ   #0,D0     D7A: 4E90           'N.'             JSR     (A0)     D7C: 4CDF 7FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A6     D80: 202D 0254      ' -.T'           MOVE.L  $254(A5),D0     D84: 21C0 002C      '!..,'           MOVE.L  D0,$2C     D88: 41FA FA38         $7C2          LEA     data25,A0     D8C: 20AD 0260      ' ..`'           MOVE.L  $260(A5),(A0)     D90: 41FA F9F0         $782          LEA     data21,A0     D94: 20AD 0268      ' ..h'           MOVE.L  $268(A5),(A0)     D98: 43FA F5C8         $362          LEA     data13,A1     D9C: 22AD 0278      '"..x'           MOVE.L  $278(A5),(A1)     DA0: 43FA F5BC         $35E          LEA     data12,A1     DA4: 22AD 0280      '"...'           MOVE.L  $280(A5),(A1)     DA8: 43FA 03EE        $1198          LEA     data41,A1     DAC: 22AD 0270      '"..p'           MOVE.L  $270(A5),(A1)   ; own BlockMove     DB0: 2B6D 02FA 0302 '+m....'         MOVE.L  $2FA(A5),$302(A5)     DB6: 2B6D 0306 030E '+m....'         MOVE.L  $306(A5),$30E(A5)     DBC: 2B6D 0312 031A '+m....'         MOVE.L  $312(A5),$31A(A5)     DC2: 11ED 02B6 012F    $12F          MOVE.B  $2B6(A5),CPUFlag     DC8: 11ED 02B8 0CB1    $CB1          MOVE.B  $2B8(A5),MMUType     DCE: 31ED 02BA 0B22    $B22          MOVE    $2BA(A5),HWCfgFlags     DD4: 31ED 02BE 0D00    $D00          MOVE    $2BE(A5),TimeDBRA     DDA: 31ED 02C2 0D02    $D02          MOVE    $2C2(A5),TimeSCCDB     DE0: 0CAD 0000 0008 '......'         CMPI.L  #8,2(A5)  ; needs to be patched!     DE8: 6720              $E0A          BEQ.S   lab_86     DEA: 0CAD 0000 0007 '......'         CMPI.L  #7,2(A5)     DF2: 6716              $E0A          BEQ.S   lab_86     DF4: 0CAD 0000 0006 '......'         CMPI.L  #6,2(A5)     DFC: 670C              $E0A          BEQ.S   lab_86     DFE: 31ED 02C6 0CEA    $CEA          MOVE    $2C6(A5),TimeVIADB     E04: 31ED 02CA 0B24    $B24          MOVE    $2CA(A5),TimeSCSIDB     E0A: 31ED 02CA 0DA6    $DA6   lab_86 MOVE    $2CA(A5),OldTimeSCSIDB     E10: 202D 02CE      ' -..'           MOVE.L  $2CE(A5),D0     E14: 671A              $E30          BEQ.S   lab_88     E16: 2078 02B6         $2B6          MOVEA.L ExpandMem,A0     E1A: 2228 0070      '"(.p'           MOVE.L  emLAPGlobals(A0),D1     E1E: 6710              $E30          BEQ.S   lab_88     E20: 2241           '"A'             MOVEA.L D1,A1     E22: D3C0           '..'             ADDA.L  D0,A1     E24: 41ED 02D2      'A...'           LEA     $2D2(A5),A0     E28: 7013           'p.'             MOVEQ   #19,D0     E2A: 12D8           '..'             MOVE.B  (A0)+,(A1)+     E2C: 51C8 FFFC         $E2A          DBRA    D0,lab_87     E30: 206D 0006      ' m..'           MOVEA.L 6(A5),A0   ; contains 53_cmd_5.0     E34: 4E90           'N.'             JSR     (A0)     E36: 101F           '..'             POP.B   D0     E38: A05D           '.]'             _SwapMMUMode       E3A: 7000           'p.'             MOVEQ   #0,D0     E3C: 307C 0001      '0|..'           MOVEA   #1,A0     E40: A198           '..'             _HWPriv       E42: 7002           'p.'             MOVEQ   #2,D0     E44: 2040           ' @'             MOVEA.L D0,A0     E46: A198           '..'             _HWPriv       E48: 46DF           'F.'             MOVE    (A7)+,SR     E4A: 4CDF 0307      'L...'           MOVEM.L (A7)+,D0-D2/A0-A1     E4E: 4E75           'Nu'             RTS    	  data E50: 8D53           '.S'             OR      D6,(A3)     E52¥ 7769           'wi'             ILL*         E54: 7463           'tc'             MOVEQ   #99,D2     E56: 6854           'hT'          BVC.S   lab_90     E58: 6F30           'o0'          BLE.S   lab_89     E5A: 3330 0000      '30..'           MOVE    0(A0,D0.W),-(A1)    ; --- SWITCH TO 030 end ----	      E5E: 48E7 E0C0      'H...' switchto040  MOVEM.L D0-D2/A0-A1,-(A7)     E62: 40E7           '@.'             MOVE    SR,-(A7)     E64: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)     E68: 7000           'p.'             MOVEQ   #0,D0     E6A: 2040           ' @'             MOVEA.L D0,A0 ; =0     E6C: A198           '..'             _HWPriv       E6E: 7002           'p.'             MOVEQ   #2,D0     E70: 91C8           '..'             SUBA.L  A0,A0 ; =0     E72: A198           '..'             _HWPriv       E74: 7001           'p.'             MOVEQ   #1,D0     E76: A05D           '.]'             _SwapMMUMode       E78: 1F00           '..'             PUSH.B  D0             ---- this kills the debugger overwriting its hooks -----                  E7A: 21ED 02A8 0120    $120          MOVE.L  $2A8(A5),MacJmp      ; copy 0000 0000 over 04FCA2F0 -> BOMBS ERROR 8     E80: 11ED 02B5 0BFF    $BFF          MOVE.B  $2B5(A5),MacJmpFlag  ; so skip these with pc=pc+$c     E86: 21ED 02B0 00FC '!.....'         MOVE.L  $2B0(A5),$FC          ; $fc pointed to 40802704, replaced by 0...     E8C: 303C A9FF      '0<..'           MOVE    #$A9FF,D0   ; Debugger     E90: 206D 029C      ' m..'           MOVEA.L $29C(A5),A0     E94: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word)      E96: 303C ABFF      '0<..'           MOVE    #$ABFF,D0   ; DebugStr     E9A: 206D 02A0      ' m..'           MOVEA.L $2A0(A5),A0     E9E: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word)      EA0: 202D 0258      ' -.X'           MOVE.L  $258(A5),D0     EA4: 21C0 002C      '!..,'           MOVE.L  D0,$2C     EA8: 202D 0024      ' -.$'           MOVE.L  36(A5),D0  ; probably pointer to FPSP code     EAC: 670E              $EBC          BEQ.S   lab_91 ; no branch     EAE: 2040           ' @'             MOVEA.L D0,A0      ;      EB0: 48E7 FFFE      'H...'           MOVEM.L D0-D7/A0-A6,-(A7)     EB4: 7001           'p.'             MOVEQ   #1,D0     EB6: 4E90           'N.'             JSR     (A0)     EB8: 4CDF 7FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A6     EBC: 41FA F904         $7C2   lab_91 LEA     data25,A0     EC0: 20AD 0264      ' ..d'           MOVE.L  $264(A5),(A0)     EC4: 41FA F8BC         $782          LEA     data21,A0   ; SwapMMUMode     EC8: 20AD 026C      ' ..l'           MOVE.L  $26C(A5),(A0)     ECC: 43FA F494         $362          LEA     data13,A1   ; PACK4 FP Math     ED0: 22AD 027C      '"..|'           MOVE.L  $27C(A5),(A1)     ED4: 43FA F488         $35E          LEA     data12,A1   ; Pack5 - TRANSCENDENTAL FUNCTION     ED8: 22AD 0284      '"...'           MOVE.L  $284(A5),(A1)     EDC: 43FA 02BA        $1198          LEA     data41,A1   ; Pointer to OldBlockmove? - IIci dies here!     EE0: 22AD 0274      '"..t'           MOVE.L  $274(A5),(A1)     EE4: 2B6D 02FE 0302 '+m....'         MOVE.L  $2FE(A5),$302(A5)     EEA: 2B6D 030A 030E '+m....'         MOVE.L  $30A(A5),$30E(A5)     EF0: 2B6D 0316 031A '+m....'         MOVE.L  $316(A5),$31A(A5)     EF6: 11ED 02B7 012F    $12F          MOVE.B  $2B7(A5),CPUFlag     EFC: 11ED 02B9 0CB1    $CB1          MOVE.B  $2B9(A5),MMUType     F02: 31ED 02BC 0B22    $B22          MOVE    $2BC(A5),HWCfgFlags     F08: 31ED 02C0 0D00    $D00          MOVE    $2C0(A5),TimeDBRA     F0E: 31ED 02C4 0D02    $D02          MOVE    $2C4(A5),TimeSCCDB     F14: 0CAD 0000 0008 '......'         CMPI.L  #8,2(A5)  ; myabe to be patched     F1C: 6720              $F3E          BEQ.S   lab_92     F1E: 0CAD 0000 0007 '......'         CMPI.L  #7,2(A5)     F26: 6716              $F3E          BEQ.S   lab_92     F28: 0CAD 0000 0006 '......'         CMPI.L  #6,2(A5)     F30: 670C              $F3E          BEQ.S   lab_92     F32: 31ED 02C8 0CEA    $CEA          MOVE    $2C8(A5),TimeVIADB     F38: 31ED 02CC 0B24    $B24          MOVE    $2CC(A5),TimeSCSIDB     F3E: 31ED 02CC 0DA6    $DA6   lab_92 MOVE    $2CC(A5),OldTimeSCSIDB     F44: 202D 02CE      ' -..'           MOVE.L  $2CE(A5),D0     F48: 671A              $F64          BEQ.S   lab_94     F4A: 2078 02B6         $2B6          MOVEA.L ExpandMem,A0     F4E: 2228 0070      '"(.p'           MOVE.L  emLAPGlobals(A0),D1     F52: 6710              $F64          BEQ.S   lab_94     F54: 2241           '"A'             MOVEA.L D1,A1     F56: D3C0           '..'             ADDA.L  D0,A1     F58: 41ED 02E6      'A...'           LEA     $2E6(A5),A0     F5C: 7013           'p.'             MOVEQ   #19,D0     F5E: 12D8           '..'      lab_93 MOVE.B  (A0)+,(A1)+     F60: 51C8 FFFC         $F5E          DBRA    D0,lab_93     F64: 206D 000A      ' m..'    lab_94 MOVEA.L 10(A5),A0     F68: 4E90           'N.'             JSR     (A0)     F6A: 6100 F93A         $8A6          BSR     myClearCache     F6E: 101F           '..'             POP.B   D0     F70: A05D           '.]'             _SwapMMUMode       F72: 46DF           'F.'             MOVE    (A7)+,SR     F74: 4CDF 0307      'L...'           MOVEM.L (A7)+,D0-D2/A0-A1     F78: 4E75           'Nu'             RTS    	 	  data F7A: 8D53           '.S'             OR      D6,(A3)     F7C¥ 7769           'wi'             ILL*         F7E: 7463           'tc'             MOVEQ   #99,D2     F80: 6854           'hT'             BVC.S   lab_97     F82: 6F30           'o0'             BLE.S   lab_96     F84: 3430 0000      '40..'           MOVE    0(A0,D0.W),D2;	 --- SWITCH TO 040 end ---	     ; "SpeedsterProc" seems to take these 7 parameters from the stack:	 		code				   value    on stack  	comment	; CLR.L   -(A7)       ;PUSH.L 00000000  32(A6) 		(bottom); CLR.L   -(A7)       ;PUSH.L 00000000  28(A6); CLR.L   -(A7)       ;PUSH.L 00000000  24(A6); PUSH.L  #$80008000  ;       80008000  20(A6)		CACR line for 68040? (both caches enabled); CLR.L   -(A7)       ;PUSH.L 00000000  16(A6); PUSH.L  #64         ;       00000040  12(A6)		CPU Mode. Either 0x40 or 0x30; PUSH.L  #1          ;       00000001	8(A6) 		On/Off? (top)	 ; Comments like "Branch" and "no branch" describe the SE/30 behaviour 	 ; while stepping through the code	      F88: 4E56 0000      'NV..'   SpeedProc  LINK    A6,#0        F8C: 48E7 1F3C      'H..<'           MOVEM.L D3-D7/A2-A5,-(A7)     F90: 2A7A F0AE          $40          MOVEA.L A5wrld,A5     F94: 40E7           '@.'             MOVE    SR,-(A7)     F96: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)     F9A: 202E 0008      ' ...'           MOVE.L  8(A6),D0 ; Get "on/off" parameter from the "top" of the stack =1       F9E: 670A              $FAA          BEQ.S   lab_95   ; if 0 branch      FA0: 5340           'S@'             SUBQ    #1,D0  ; -1     FA2: 673E              $FE2          BEQ.S   lab_98 ; Now we're 0, Branch!     FA4: 70FF           'p.'             MOVEQ   #-1,D0     FA6: 6000 0106        $10AE          BRA     lab_105	                              ; if 1st parameter =  0     FAA: 7000           'p.'     lab_95  MOVEQ   #0,D0       FAC: 3015           '0.'             MOVE    (A5),D0     FAE: 206E 000C      ' n..'           MOVEA.L 12(A6),A0  ; 2nd parameter on stack     FB2: 2080           ' .'             MOVE.L  D0,(A0)     FB4: 206E 0010      ' n..'           MOVEA.L 16(A6),A0  ; 3rd     FB8: 20AD 0074      ' ..t'           MOVE.L  $74(A5),(A0)     FBC: 206E 0014      ' n..'           MOVEA.L 20(A6),A0  ; 4th     FC0: 20AD 0078      ' ..x'           MOVE.L  $78(A5),(A0)     FC4: 7000           'p.'             MOVEQ   #0,D0     FC6: 302D 0080      '0-..'           MOVE    $80(A5),D0     FCA: 206E 0018      ' n..'           MOVEA.L 24(A6),A0  ; 5th     FCE: 2080           ' .'             MOVE.L  D0,(A0)     FD0: 7000           'p.'             MOVEQ   #0,D0     FD2: 302D 0082      '0-..'           MOVE    $82(A5),D0     FD6: 206E 001C      ' n..'           MOVEA.L 28(A6),A0  ; 6th     FDA: 2080           ' .'             MOVE.L  D0,(A0)     FDC: 7000           'p.'             MOVEQ   #0,D0     FDE: 6000 00CE        $10AE          BRA     lab_105	                              ; if 1st parameter = 1     FE2: 262E 0010      '&...'   lab_98  MOVE.L  16(A6),D3 ; 3rd parameter from stack (SE30=0, IIci=sometimes 0x20 else 0)     FE6: 0C03 00FF      '....'           CMPI.B  #$FF,D3       ; if lowest byte = 255     FEA: 676E             $105A          BEQ.S   lab_101       ;      FEC: 6100 F378         $366          BSR     GetAutoMode   ; (works)     FF0: 4A82           'J.'             TST.L   D2            ; =0?     FF2: 6766             $105A          BEQ.S   lab_101       ; branch!     FF4: 0C40 0030      '.@.0'           CMPI    #48,D0        ; equals 0x30     FF8: 6728             $1022          BEQ.S   lab_99     FFA: 202E 000C      ' ...'           MOVE.L  12(A6),D0     ; get 2nd highest parameter from stack (=CPU 0x30 or 0x40)     FFE: 0C40 0030      '.@.0'           CMPI    #48,D0        ; equals 0x30      1002: 6656             $105A          BNE.S   lab_101    1004: 0C2D 0000 0023 '.-...#'         CMPI.B  #0,35(A5)     ; The FPU_flag? (0 = noFPU?, 2 = FPU, 3 =FPU)    100A: 674E             $105A          BEQ.S   lab_101           100C: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    1012: 6746             $105A          BEQ.S   lab_101    1014: 0C2D 0002 0023 '.-...#'         CMPI.B  #2,35(A5)    101A: 673E             $105A          BEQ.S   lab_101    101C: 262D 0242      '&-.B'           MOVE.L  $242(A5),D3    1020: 600E             $1030          BRA.S   lab_100    1022: 202E 000C      ' ...'    lab_99 MOVE.L  12(A6),D0; 2nd parameter on stack    1026: 0C40 0040      '.@.@'           CMPI    #64,D0   ; equals 0x40    102A: 662E             $105A          BNE.S   lab_101    102C: 262D 023E      '&-.>'           MOVE.L  $23E(A5),D3    1030: 41ED 0212      'A...'   lab_100 LEA     $212(A5),A0    1034: 317C 0008 0004 '1|....'         MOVE    #8,4(A0)    103A: 4268 000E      'Bh..'           CLR     14(A0)    103E: 42A8 0010      'B...'           CLR.L   16(A0)    1042: 42A8 0014      'B...'           CLR.L   20(A0)    1046: 2243           '"C'             MOVEA.L D3,A1    1048: 2151 0018      '!Q..'           MOVE.L  (A1),24(A0)    104C: 217C FFFF FFFF '!|....'         MOVE.L  #-1,28(A0)    1054: A05E           '.^'             _NMInstall ; (A0/theNMRec:NMRecPtr):D0\OSErr     1056: 70FF           'p.'             MOVEQ   #-1,D0    1058: 6054             $10AE          BRA.S   lab_105    105A: 202E 0018      ' ...'   lab_101 MOVE.L  24(A6),D0  ; 5th param, SE30=0 / IIci = 1 or 0    105E: 3B40 0080      ';@..'           MOVE    D0,$80(A5)    1062: 202E 001C      ' ...'           MOVE.L  28(A6),D0  ; 6th param, SE30=0 / IIci = 0    1066: 3B40 0082      ';@..'           MOVE    D0,$82(A5)    106A: 222E 0020      '".. '           MOVE.L  32(A6),D1  ; 7th param, SE30=0 / IIci = 0x43f0 or 0    106E: 6710             $1080          BEQ.S   lab_102    ; if 0/Empty, se30 branch / IIci no-branch     1070: 206D 0084      ' m..'           MOVEA.L $84(A5),A0 ; IIci = 0    1074: 2B41 0084      '+A..'           MOVE.L  D1,$84(A5) ; 0x43f0    1078: 4A88           'J.'             TST.L   A0    107A: 6704             $1080          BEQ.S   lab_102 ; IIci branch     107C: 2040           ' @'             MOVEA.L D0,A0    107E: A023           '.#'             _DisposHandle ; (A0/h:Handle)     1080: 2B6E 0014 0078 '+n...x' lab_102 MOVE.L  20(A6),$78(A5) ;4th param, = $80008000    1086: 222E 0010      '"...'           MOVE.L  16(A6),D1      ;3rd,  SE/30=0  IIci=sometimes 0x20 else 00    108A: 0C01 00FF      '....'           CMPI.B  #$FF,D1    108E: 660A             $109A          BNE.S   lab_103  ;(not 255, so branch)    1090: 6100 F2D4         $366          BSR     GetAutoMode    1094: 50ED 0210      'P...'           ST      $210(A5)    1098: 600E             $10A8          BRA.S   lab_104    109A: 426D 0210      'Bm..'   lab_103 CLR     $210(A5)     109E: 0281 0000 0060 '.....`'         ANDI.L  #$60,D1    10A4: 202E 000C      ' ...'           MOVE.L  12(A6),D0 ; 2nd param, = $40     10A8: 6100 001E        $10C8  lab_104 BSR     SetCPUmode ; (jumps)    10AC: 7000           'p.'             MOVEQ   #0,D0    10AE: 46DF           'F.'     lab_105 MOVE    (A7)+,SR    10B0: 4CDF 3CF8      'L.<.'           MOVEM.L (A7)+,D3-D7/A2-A5    10B4: 4E5E           'N^'             UNLK    A6    10B6: 4E75           'Nu'             RTS   	  data 10B8: 8F53           '.S'            OR      D7,(A3)    10BA: 7065           'pe'             MOVEQ   #$65,D0    10BC: 6564           'ed'             BLO.S   lab_109    10BE¥ 7374           'st'             ILL*        10C0: 6572           'er'             BLO.S   lab_110    10C2$ 5072 6F63 0000 'Proc..'         ADDQ    #8,([0,A2],$48E71F3C)    ; --- Speedster Proc End ----    ; --- SET CPU and CacheMode 	; --- D0 contains the desired mode (0x40 or 0x30)    10C8: 48E7 1F3C      'H..<' SetCPUmode MOVEM.L D3-D7/A2-A5,-(A7)    10CC: 2A7A EF72          $40          MOVEA.L A5wrld,A5    10D0: 40E7           '@.'             MOVE    SR,-(A7)    10D2: 007C 0700      '.|..'           ORI     #$700,SR   ; Set bit 9-11 of SR (disable Interrupts)    10D6: 2B41 0074      '+A.t'           MOVE.L  D1,$74(A5) ; =0    10DA: 0C40 0030      '.@.0'           CMPI    #48,D0     ; is D0 (function param) 0x40?    10DE: 660E             $10EE          BNE.S   lab_106    ; no, then Branch     10E0: 0C55 0030      '.U.0'           CMPI    #48,(A5)   ; is 0(A5) 0x30    10E4: 6714             $10FA          BEQ.S   lab_107    ; if yes, then branch    10E6: 3A80           ':.'             MOVE    D0,(A5)    ; else set 0(A5) to given parameter    10E8: 6100 FC4C         $D36          BSR     Switchto030    ; WILL REPLACE DEBUGGER!    10EC: 600C             $10FA          BRA.S   lab_107    10EE: 0C55 0040      '.U.@'   lab_106 CMPI    #64,(A5)   ; cmp $40 with (A5) (=0000)    10F2: 6706             $10FA          BEQ.S   lab_107    ; no Branch    10F4: 3A80           ':.'             MOVE    D0,(A5)    ; so copy $40 to (A5)    10F6: 6100 FD66         $E5E          BSR     switchto040      10FA: 0C55 0040      '.U.@'   lab_107 CMPI    #64,(A5)   ; is 0(A5) 0x40    10FE: 6612             $1112          BNE.S   lab_108    ; nope so branch    1100: 6100 F7A4         $8A6          BSR     myClearCache    1104$ F518           '..'             PFLUSHA     1106: 7000           'p.'             MOVEQ   #0,D0    1108$ F4F8           '..'             CPUSHA  BC    110A$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    110E: 4E71           'Nq'             NOP         1110$ F4D8           '..'             CINVA   BC    1112: 203C 0000 2000 ' <.. .' lab_108 MOVE.L  #$2000,D0    1118: 222D 0074      '"-.t'           MOVE.L  $74(A5),D1    111C: 242D 0050      '$-.P'           MOVE.L  80(A5),D2   ; RAM size in bytes    1120: 0482 0000 2000 '.... .'         SUBI.L  #$2000,D2   ; minus 8kb    1126: 262D 0058      '&-.X'           MOVE.L  88(A5),D3    112A: 789F           'x.'             MOVEQ   #-97,D4    112C: 206D 005C      ' m.\'           MOVEA.L 92(A5),A0    1130: 6100 046C        $159E          BSR     proc14    1134: 4AAD 0038      'J..8'           TST.L   56(A5)    1138: 6722             $115C          BEQ.S   lab_111     ; branch on IIci    113A: 203C 0000 8192 ' <....'         MOVE.L  #$8192,D0    1140: 222D 0074      '"-.t'           MOVE.L  $74(A5),D1    1144: 242D 002C      '$-.,'           MOVE.L  44(A5),D2    1148: 0482 0000 8192 '......'         SUBI.L  #$8192,D2    114E: 262D 0034      '&-.4'           MOVE.L  52(A5),D3    1152: 789F           'x.'             MOVEQ   #-97,D4    1154: 206D 0038      ' m.8'           MOVEA.L 56(A5),A0    1158: 6100 0444        $159E          BSR     proc14    115C: 0C55 0040      '.U.@'   lab_111 CMPI    #64,(A5)    ; 0x40?    1160: 6612             $1174          BNE.S   lab_112     ; branch on IIci    1162: 4E71           'Nq'             NOP         1164$ F518           '..'             PFLUSHA     1166: 222D 0078      '"-.x'           MOVE.L  $78(A5),D1    116A$ F4F8           '..'             CPUSHA  BC    116C$ 4E7B 1002      'N{..'           MOVEC   D1,CACR    1170: 6100 F734         $8A6          BSR     myClearCache    1174: 46DF           'F.'     lab_112 MOVE    (A7)+,SR    1176: 4CDF 3CF8      'L.<.'           MOVEM.L (A7)+,D3-D7/A2-A5    117A: 4E75           'Nu'             RTS     	    117C: 9453           '.S'             SUB     (A3),D2    117E: 6574           'et'             BLO.S   lab_119    1180¥ 4350           'CP'             ILL*        1182: 5561           'Ua'             SUBQ    #2,-(A1)    1184: 6E64           'nd'             BGT.S   lab_116    1186¥ 4361           'Ca'             ILL*        1188: 6368           'ch'             BLS.S   lab_118    118A¥ 654D           'eM'             BLO.S   $11D9    118C: 6F64           'od'             BLE.S   lab_118    118E: 6500 0000      'e.'             BLO     lab_113; --- SET CPU and CacheMode	- end     ; --- Very likely to be a "myBlockMove" routine	(takes D0, A1, A2 just like the original)        1192: 2F3A 0004        $1198  data40  PUSH.L  data41    1196: 4E75           'Nu'             RTS     	    1198: 0000 0000      '....'   data41  DC.L $00000000        119C: 4A80           'J.'     data42  TST.L   D0   ; If D0=0 ; This is the "entry" for 32 clean machines    119E: 6F00 00E4        $1284          BLE     lab_129  ; quit     11A2: 2208           '".'             MOVE.L  A0,D1    11A4: 2409           '$.'             MOVE.L  A1,D2    11A6: 6012             $11BA          BRA.S   lab_114    11A8: 4A80           'J.'     data43  TST.L   D0   ; This is the "entry" for 32 dirty machines    11AA: 6F00 00D8        $1284          BLE     lab_129  ; quit    11AE: 2208           '".'             MOVE.L  A0,D1    11B0: 2409           '$.'             MOVE.L  A1,D2    11B2: C2B8 031A         $31A          AND.L   Lo3Bytes,D1 ; loMem Gbl "holds the constant $00FFFFFF"    11B6: C4B8 031A         $31A          AND.L   Lo3Bytes,D2 ; removing the Highest Byte turning it into 24bit    11BA: 0C80 0000 0040 '.....@' lab_114 CMPI.L  #64,D0     11C0: 6500 00C6        $1288          BLO     lab_130 ; less than 64 bytes to copy?    11C4: B481           '..'             CMP.L   D1,D2   ;    11C6: 625C             $1224          BHI.S   lab_123 ; if D2 (destination) is higher    11C8: 2200           '".'             MOVE.L  D0,D1    11CA: 6020             $11EC          BRA.S   lab_117     ; skip over     11CC: 22D8           '".'             MOVE.L  (A0)+,(A1)+ ; copy 16 longs (512 bit)    11CE: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11D0: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11D2: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11D4: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11D6: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11D8: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11DA: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11DC: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11DE: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11E0: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11E2: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11E4: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11E6: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11E8: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11EA: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11EC: 0480 0000 0040 '.....@' lab_117 SUBI.L  #64,D0    11F2: 64D8             $11CC          BHS     lab_115    11F4: 0640 0040      '.@.@'           ADDI    #64,D0    11F8: 6004             $11FE          BRA.S   lab_121    11FA: 22D8           '".'    lab_120  MOVE.L  (A0)+,(A1)+    11FC: 22D8           '".'             MOVE.L  (A0)+,(A1)+    11FE: 5140           'Q@'             SUBQ    #8,D0    1200: 64F8             $11FA          BHS     lab_120    1202: 4440           'D@'             NEG     D0    1204: 6716             $121C          BEQ.S   lab_122    1206$ 4EFB 0320 0004   $120C          JMP     (data43,D0.W*2)	    120C: 12D8           '..'             MOVE.B  (A0)+,(A1)+ ; copy 8 longs (256 bit)    120E: 12D8           '..'             MOVE.B  (A0)+,(A1)+    1210: 12D8           '..'             MOVE.B  (A0)+,(A1)+    1212: 12D8           '..'             MOVE.B  (A0)+,(A1)+    1214: 12D8           '..'             MOVE.B  (A0)+,(A1)+    1216: 12D8           '..'             MOVE.B  (A0)+,(A1)+    1218: 12D8           '..'             MOVE.B  (A0)+,(A1)+    121A: 12D8           '..'             MOVE.B  (A0)+,(A1)+	    121C: 4E71           'Nq'    lab_122  NOP         121E$ F4F8           '..'             CPUSHA  BC    1220: 7000           'p.'             MOVEQ   #0,D0    1222: 4E75           'Nu'             RTS         1224: D1C0           '..'    lab_123  ADDA.L  D0,A0    1226: D3C0           '..'             ADDA.L  D0,A1    1228: 2200           '".'             MOVE.L  D0,D1    122A: 6020             $124C          BRA.S   lab_125	    122C: 2320           '# '             MOVE.L  -(A0),-(A1)    122E: 2320           '# '             MOVE.L  -(A0),-(A1)    1230: 2320           '# '             MOVE.L  -(A0),-(A1)    1232: 2320           '# '             MOVE.L  -(A0),-(A1)    1234: 2320           '# '             MOVE.L  -(A0),-(A1)    1236: 2320           '# '             MOVE.L  -(A0),-(A1)    1238: 2320           '# '             MOVE.L  -(A0),-(A1)    123A: 2320           '# '             MOVE.L  -(A0),-(A1)    123C: 2320           '# '             MOVE.L  -(A0),-(A1)    123E: 2320           '# '             MOVE.L  -(A0),-(A1)    1240: 2320           '# '             MOVE.L  -(A0),-(A1)    1242: 2320           '# '             MOVE.L  -(A0),-(A1)    1244: 2320           '# '             MOVE.L  -(A0),-(A1)    1246: 2320           '# '             MOVE.L  -(A0),-(A1)    1248: 2320           '# '             MOVE.L  -(A0),-(A1)    124A: 2320           '# '             MOVE.L  -(A0),-(A1)	    124C: 0480 0000 0040 '.....@' lab_125 SUBI.L  #64,D0    1252: 64D8             $122C          BHS     lab_124    1254: 0640 0040      '.@.@'           ADDI    #64,D0    1258: 6004             $125E          BRA.S   lab_127    125A: 2320           '# '    lab_126  MOVE.L  -(A0),-(A1)    125C: 2320           '# '             MOVE.L  -(A0),-(A1)    125E: 5140           'Q@'             SUBQ    #8,D0    1260: 64F8             $125A          BHS     lab_126    1262: 4440           'D@'             NEG     D0    1264: 6716             $127C          BEQ.S   lab_128    1266$ 4EFB 0320 0004   $126C          JMP     (data44,D0.W*2)	    126C: 1320           '. '             MOVE.B  -(A0),-(A1)    126E: 1320           '. '             MOVE.B  -(A0),-(A1)    1270: 1320           '. '             MOVE.B  -(A0),-(A1)    1272: 1320           '. '             MOVE.B  -(A0),-(A1)    1274: 1320           '. '             MOVE.B  -(A0),-(A1)    1276: 1320           '. '             MOVE.B  -(A0),-(A1)    1278: 1320           '. '             MOVE.B  -(A0),-(A1)    127A: 1320           '. '             MOVE.B  -(A0),-(A1)	    127C: 4E71           'Nq'    lab_128  NOP         127E$ F4F8           '..'             CPUSHA  BC    1280: 7000           'p.'             MOVEQ   #0,D0    1282: 4E75           'Nu'             RTS         1284: 7000           'p.'   lab_129:  MOVEQ   #0,D0    1286: 4E75           'Nu'             RTS         1288: B481           '..'    lab_130: CMP.L   D1,D2    128A: 6200 008A        $1316          BHI     lab_131    128E: 323B 0206        $1296          MOVE    data45(D0.W*2),D1    1292: 4EFB 1002        $1296          JMP     data45(D1.W)    1296¥ 0226 014C      '.&.L'           ANDI.B  #$14C,-(A6)    129A$ 0170 0194      '.p..'           BCHG    D0,(0,ZA0],D0.W)    129E: 0128 014A      '.(.J'           BTST    D0,$14A(A0)    12A2: 016E 0192      '.n..'           BCHG    D0,$192(A6)    12A6: 0126           '.&'             BTST    D0,-(A6)    12A8: 0148 016C      '.H.l'           MOVEP.L $16C(A0),D0    12AC: 0190           '..'             BCLR    D0,(A0)    12AE: 0124           '.$'             BTST    D0,-(A4)    12B0: 0146           '.F'             BCHG    D0,D6    12B2: 016A 018E      '.j..'           BCHG    D0,$18E(A2)    12B6: 0122           '."'             BTST    D0,-(A2)    12B8: 0144           '.D'             BCHG    D0,D4    12BA: 0168 018C      '.h..'           BCHG    D0,$18C(A0)    12BE: 0120           '. '             BTST    D0,-(A0)    12C0: 0142           '.B'             BCHG    D0,D2    12C2: 0166           '.f'             BCHG    D0,-(A6)    12C4: 018A 011E      '....'           MOVEP   D0,$11E(A2)    12C8: 0140           '.@'             BCHG    D0,D0    12CA: 0164           '.d'             BCHG    D0,-(A4)    12CC: 0188 011C      '....'           MOVEP   D0,$11C(A0)    12D0¥ 013E           '.>'             BTST    D0,    12D2: 0162           '.b'             BCHG    D0,-(A2)    12D4: 0186           '..'             BCLR    D0,D6    12D6: 011A           '..'             BTST    D0,(A2)+    12D8: 013C 0160      '.<.`'           BTST    D0,#$160    12DC: 0184           '..'             BCLR    D0,D4    12DE: 0118           '..'             BTST    D0,(A0)+    12E0: 013A 015E        $1440          BTST    D0,data47    12E4: 0182           '..'             BCLR    D0,D2    12E6: 0116           '..'             BTST    D0,(A6)    12E8: 0138 015C         $15C          BTST    D0,SEvtEnb    12EC: 0180           '..'             BCLR    D0,D0    12EE: 0114           '..'             BTST    D0,(A4)    12F0$ 0136 015A 017E '.6.Z.~'         BTST    D0,([0,A6],$17E)    12F6: 0112           '..'             BTST    D0,(A2)    12F8$ 0134 0158      '.4.X'           BTST    D0,(0,A4)    12FC: 017C 0110      '.|..'           BCHG    D0,#$110    1300$ 0132 0156 017A '.2.V.z'         BTST    D0,([0,A2],$17A)    1306: 010E 0130      '...0'           MOVEP   $130(A6),D0    130A: 0154           '.T'             BCHG    D0,(A4)    130C: 0178 010C         $10C          BCHG    D0,BufPtr    1310: 012E 0152      '...R'           BTST    D0,$152(A6)    1314$ 0176 D1C0      '.v..'           BCHG    D0,(0)    1318: D3C0           '..'             ADDA.L  D0,A1    131A: 323B 0206        $1322          MOVE    data46(D0.W*2),D1    131E: 4EFB 1002        $1322          JMP     data46(D1.W)    1322: 019A           '..'             BCLR    D0,(A2)+    1324: 014E 0170      '.N.p'           MOVEP.L $170(A6),D0    1328: 0192           '..'             BCLR    D0,(A2)    132A: 012C 014C      '.,.L'           BTST    D0,$14C(A4)    132E: 016E 0190      '.n..'           BCHG    D0,$190(A6)    1332: 012A 014A      '.*.J'           BTST    D0,$14A(A2)    1336: 016C 018E      '.l..'           BCHG    D0,$18E(A4)    133A: 0128 0148      '.(.H'           BTST    D0,$148(A0)    133E: 016A 018C      '.j..'           BCHG    D0,$18C(A2)    1342: 0126           '.&'             BTST    D0,-(A6)    1344: 0146           '.F'             BCHG    D0,D6    1346: 0168 018A      '.h..'           BCHG    D0,$18A(A0)    134A: 0124           '.$'             BTST    D0,-(A4)    134C: 0144           '.D'             BCHG    D0,D4    134E: 0166           '.f'             BCHG    D0,-(A6)    1350: 0188 0122      '..."'           MOVEP   D0,$122(A0)    1354: 0142           '.B'             BCHG    D0,D2    1356: 0164           '.d'             BCHG    D0,-(A4)    1358: 0186           '..'             BCLR    D0,D6    135A: 0120           '. '             BTST    D0,-(A0)    135C: 0140           '.@'             BCHG    D0,D0    135E: 0162           '.b'             BCHG    D0,-(A2)    1360: 0184           '..'             BCLR    D0,D4    1362: 011E           '..'             BTST    D0,(A6)+    1364¥ 013E           '.>'             BTST    D0,    1366: 0160           '.`'             BCHG    D0,-(A0)    1368: 0182           '..'             BCLR    D0,D2    136A: 011C           '..'             BTST    D0,(A4)+    136C: 013C 015E      '.<.^'           BTST    D0,#$15E    1370: 0180           '..'             BCLR    D0,D0    1372: 011A           '..'             BTST    D0,(A2)+    1374: 013A 015C        $14D2          BTST    D0,data49    1378¥ 017E           '.~'             BCHG    D0,    137A: 0118           '..'             BTST    D0,(A0)+    137C: 0138 015A         $15A          BTST    D0,SysVersion    1380: 017C 0116      '.|..'           BCHG    D0,#$116    1384$ 0136 0158      '.6.X'           BTST    D0,(0,A6)    1388: 017A 0114        $149E          BCHG    D0,data48    138C$ 0134 0156 0178 '.4.V.x'         BTST    D0,([0,A4],$178)    1392: 0112           '..'             BTST    D0,(A2)    1394$ 0132 0154      '.2.T'           BTST    D0,(0,A2])    1398$ 0176 0110      '.v..'           BCHG    D0,(0,A6,D0.W)    139C$ 0130 0152 0174 '.0.R.t'         BTST    D0,([0,A0],$174)        13A2: 22D8           '".'             MOVE.L  (A0)+,(A1)+ ; copy 16 longs (512 bit)    13A4: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13A6: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13A8: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13AA: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13AC: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13AE: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13B0: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13B2: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13B4: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13B6: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13B8: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13BA: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13BC: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13BE: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13C0: 6000 00F6        $14B8          BRA     lab_132        13C4: 22D8           '".'             MOVE.L  (A0)+,(A1)+ ; copy 16 longs (512 bit)    13C6: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13C8: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13CA: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13CC: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13CE: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13D0: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13D2: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13D4: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13D6: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13D8: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13DA: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13DC: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13DE: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13E0: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13E2: 12D8           '..'             MOVE.B  (A0)+,(A1)+    13E4: 6000 00D2        $14B8          BRA     lab_132        13E8: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13EA: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13EC: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13EE: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13F0: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13F2: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13F4: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13F6: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13F8: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13FA: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13FC: 22D8           '".'             MOVE.L  (A0)+,(A1)+    13FE: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1400: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1402: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1404: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1406: 32D8           '2.'             MOVE    (A0)+,(A1)+    1408: 6000 00AE        $14B8          BRA     lab_132    140C: 22D8           '".'             MOVE.L  (A0)+,(A1)+    140E: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1410: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1412: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1414: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1416: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1418: 22D8           '".'             MOVE.L  (A0)+,(A1)+    141A: 22D8           '".'             MOVE.L  (A0)+,(A1)+    141C: 22D8           '".'             MOVE.L  (A0)+,(A1)+    141E: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1420: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1422: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1424: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1426: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1428: 22D8           '".'             MOVE.L  (A0)+,(A1)+    142A: 32D8           '2.'             MOVE    (A0)+,(A1)+    142C: 12D8           '..'             MOVE.B  (A0)+,(A1)+    142E: 6000 0088        $14B8          BRA     lab_132    1432: 2320           '# '             MOVE.L  -(A0),-(A1)    1434: 2320           '# '             MOVE.L  -(A0),-(A1)    1436: 2320           '# '             MOVE.L  -(A0),-(A1)    1438: 2320           '# '             MOVE.L  -(A0),-(A1)    143A: 2320           '# '             MOVE.L  -(A0),-(A1)    143C: 2320           '# '             MOVE.L  -(A0),-(A1)    143E: 2320           '# '             MOVE.L  -(A0),-(A1)    1440: 2320           '# '             MOVE.L  -(A0),-(A1)    1442: 2320           '# '             MOVE.L  -(A0),-(A1)    1444: 2320           '# '             MOVE.L  -(A0),-(A1)    1446: 2320           '# '             MOVE.L  -(A0),-(A1)    1448: 2320           '# '             MOVE.L  -(A0),-(A1)    144A: 2320           '# '             MOVE.L  -(A0),-(A1)    144C: 2320           '# '             MOVE.L  -(A0),-(A1)    144E: 2320           '# '             MOVE.L  -(A0),-(A1)    1450: 6066             $14B8          BRA.S   lab_132    1452: 2320           '# '             MOVE.L  -(A0),-(A1)    1454: 2320           '# '             MOVE.L  -(A0),-(A1)    1456: 2320           '# '             MOVE.L  -(A0),-(A1)    1458: 2320           '# '             MOVE.L  -(A0),-(A1)    145A: 2320           '# '             MOVE.L  -(A0),-(A1)    145C: 2320           '# '             MOVE.L  -(A0),-(A1)    145E: 2320           '# '             MOVE.L  -(A0),-(A1)    1460: 2320           '# '             MOVE.L  -(A0),-(A1)    1462: 2320           '# '             MOVE.L  -(A0),-(A1)    1464: 2320           '# '             MOVE.L  -(A0),-(A1)    1466: 2320           '# '             MOVE.L  -(A0),-(A1)    1468: 2320           '# '             MOVE.L  -(A0),-(A1)    146A: 2320           '# '             MOVE.L  -(A0),-(A1)    146C: 2320           '# '             MOVE.L  -(A0),-(A1)    146E: 2320           '# '             MOVE.L  -(A0),-(A1)    1470: 1320           '. '             MOVE.B  -(A0),-(A1)    1472: 6044             $14B8          BRA.S   lab_132    1474: 2320           '# '             MOVE.L  -(A0),-(A1)    1476: 2320           '# '             MOVE.L  -(A0),-(A1)    1478: 2320           '# '             MOVE.L  -(A0),-(A1)    147A: 2320           '# '             MOVE.L  -(A0),-(A1)    147C: 2320           '# '             MOVE.L  -(A0),-(A1)    147E: 2320           '# '             MOVE.L  -(A0),-(A1)    1480: 2320           '# '             MOVE.L  -(A0),-(A1)    1482: 2320           '# '             MOVE.L  -(A0),-(A1)    1484: 2320           '# '             MOVE.L  -(A0),-(A1)    1486: 2320           '# '             MOVE.L  -(A0),-(A1)    1488: 2320           '# '             MOVE.L  -(A0),-(A1)    148A: 2320           '# '             MOVE.L  -(A0),-(A1)    148C: 2320           '# '             MOVE.L  -(A0),-(A1)    148E: 2320           '# '             MOVE.L  -(A0),-(A1)    1490: 2320           '# '             MOVE.L  -(A0),-(A1)    1492: 3320           '3 '             MOVE    -(A0),-(A1)    1494: 6022             $14B8          BRA.S   lab_132    1496: 2320           '# '             MOVE.L  -(A0),-(A1)    1498: 2320           '# '             MOVE.L  -(A0),-(A1)    149A: 2320           '# '             MOVE.L  -(A0),-(A1)    149C: 2320           '# '             MOVE.L  -(A0),-(A1)    149E: 2320           '# '             MOVE.L  -(A0),-(A1)    14A0: 2320           '# '             MOVE.L  -(A0),-(A1)    14A2: 2320           '# '             MOVE.L  -(A0),-(A1)    14A4: 2320           '# '             MOVE.L  -(A0),-(A1)    14A6: 2320           '# '             MOVE.L  -(A0),-(A1)    14A8: 2320           '# '             MOVE.L  -(A0),-(A1)    14AA: 2320           '# '             MOVE.L  -(A0),-(A1)    14AC: 2320           '# '             MOVE.L  -(A0),-(A1)    14AE: 2320           '# '             MOVE.L  -(A0),-(A1)    14B0: 2320           '# '             MOVE.L  -(A0),-(A1)    14B2: 2320           '# '             MOVE.L  -(A0),-(A1)    14B4: 3320           '3 '             MOVE    -(A0),-(A1)    14B6: 1320           '. '             MOVE.B  -(A0),-(A1)    14B8: 4E71           'Nq'    lab_132  NOP         14BA$ F4F8           '..'             CPUSHA  BC    14BC: 7000           'p.'             MOVEQ   #0,D0    14BE: 4E75           'Nu'             RTS              ; end myBlockMove		    14C0: 48E7 0F00      'H...'   proc13: MOVEM.L D4-D7,-(A7)    14C4: 4A88           'J.'             TST.L   A0    14C6: 661E             $14E6          BNE.S   lab_134    14C8: 280C           '(.'             MOVE.L  A4,D4    14CA: 0684 0000 01FF '......'         ADDI.L  #$1FF,D4    14D0: 0284 FFFF FE00 '......'         ANDI.L  #-$200,D4    14D6: 2844           '(D'             MOVEA.L D4,A4    14D8: 204C           ' L'             MOVEA.L A4,A0    14DA: 383C 007F      '8<..'           MOVE    #$7F,D4    14DE: 7A00           'z.'             MOVEQ   #0,D5    14E0: 28C5           '(.'             MOVE.L  D5,(A4)+    14E2: 51CC FFFC        $14E0          DBRA    D4,lab_133    14E6: 4A82           'J.'             TST.L   D2    14E8: 6700 00AE        $1598          BEQ     lab_140    14EC: 2E00           '..'             MOVE.L  D0,D7    14EE: EF9F           '..'             ROL.L   #7,D7    14F0: E59F           '..'             ROL.L   #2,D7    14F2: 0247 01FC      '.G..'           ANDI    #$1FC,D7    14F6: 4AB0 7000      'J.p.'           TST.L   0(A0,D7.W)    14FA: 6626             $1522          BNE.S   lab_137    14FC: 280C           '(.'             MOVE.L  A4,D4    14FE: 0684 0000 01FF '......'         ADDI.L  #$1FF,D4    1504: 0284 FFFF FE00 '......'         ANDI.L  #-$200,D4    150A: 2844           '(D'             MOVEA.L D4,A4    150C: 0004 0002      '....'           ORI.B   #2,D4    1510: D883           '..'             ADD.L   D3,D4    1512: 2184 7000      '!.p.'           MOVE.L  D4,0(A0,D7.W)    1516: 383C 007F      '8<..'           MOVE    #$7F,D4    151A: 7A00           'z.'             MOVEQ   #0,D5    151C: 28C5           '(.'             MOVE.L  D5,(A4)+    151E: 51CC FFFC        $151C          DBRA    D4,lab_136    1522: 2E30 7000      '.0p.'           MOVE.L  0(A0,D7.W),D7    1526: 0287 FFFF FF80 '......'         ANDI.L  #-$80,D7    152C: 9E83           '..'             SUB.L   D3,D7    152E: 2247           '"G'             MOVEA.L D7,A1    1530: 2E00           '..'             MOVE.L  D0,D7    1532: 4847           'HG'             SWAP    D7    1534: 0247 01FC      '.G..'           ANDI    #$1FC,D7    1538: 4AB1 7000      'J.p.'           TST.L   0(A1,D7.W)    153C: 6626             $1564          BNE.S   lab_139    153E: 280C           '(.'             MOVE.L  A4,D4    1540: 0684 0000 001F '......'         ADDI.L  #31,D4    1546: 0284 FFFF FFE0 '......'         ANDI.L  #-$20,D4    154C: 2844           '(D'             MOVEA.L D4,A4    154E: 0004 0002      '....'           ORI.B   #2,D4    1552: D883           '..'             ADD.L   D3,D4    1554: 2384 7000      '#.p.'           MOVE.L  D4,0(A1,D7.W)    1558: 383C 001F      '8<..'           MOVE    #31,D4    155C: 7A00           'z.'             MOVEQ   #0,D5    155E: 28C5           '(.'             MOVE.L  D5,(A4)+    1560: 51CC FFFC        $155E          DBRA    D4,lab_138    1564: 2E31 7000      '.1p.'           MOVE.L  0(A1,D7.W),D7    1568: 0287 FFFF FF80 '......'         ANDI.L  #-$80,D7    156E: 9E83           '..'             SUB.L   D3,D7    1570: 2447           '$G'             MOVEA.L D7,A2    1572: 2E00           '..'             MOVE.L  D0,D7    1574: E08F           '..'             LSR.L   #8,D7    1576: E68F           '..'             LSR.L   #3,D7    1578: 0287 0000 007C '.....|'         ANDI.L  #$7C,D7    157E: 2581 7000      '%.p.'           MOVE.L  D1,0(A2,D7.W)    1582: 0680 0000 2000 '.... .'         ADDI.L  #$2000,D0    1588: 0681 0000 2000 '.... .'         ADDI.L  #$2000,D1    158E: 0482 0000 2000 '.... .'         SUBI.L  #$2000,D2    1594: 6600 FF56        $14EC          BNE     lab_135    1598: 4CDF 00F0      'L...'           MOVEM.L (A7)+,D4-D7    159C: 4E75           'Nu'             RTS     	        ; "PROC14" takes parameters in D0, D1, D2, D3, D4        159E: 48E7 0300      'H...'  proc14:  MOVEM.L D6-D7,-(A7)    15A2: 4A82           'J.'             TST.L   D2          ; if D2 == 0    15A4: 6768             $160E          BEQ.S   proc14_exit ; exit sub    15A6: 2E00           '..'    lab_141: MOVE.L  D0,D7     ; copy D0 to D7 to work with it    15A8: EF9F           '..'             ROL.L   #7,D7     ; Rotate-left the top 9 long-word bits     15AA: E59F           '..'             ROL.L   #2,D7     ; into the lower 9 bits and    15AC: 0247 01FC      '.G..'           ANDI    #$1FC,D7  ; mask out everything above. Why?    15B0: 4AB0 7000      'J.p.'           TST.L   0(A0,D7.W) ; -- What's in A0 (added to D7)?      15B4: 6604             $15BA          BNE.S   lab_142   ; if 0     15B6: 7000           'p.'             MOVEQ   #0,D0     ; return 0 and    15B8: 6054             $160E          BRA.S   proc14_exit   ; exit sub    15BA: 2E30 7000      '.0p.'  lab_142: MOVE.L  0(A0,D7.W),D7 ; else copy to D7    15BE: 0287 FFFF FF80 '......'         ANDI.L  #-$80,D7  ; make sure it's positive    15C4: 9E83           '..'             SUB.L   D3,D7     ; subtract D3 (function parameter)    15C6: 2247           '"G'             MOVEA.L D7,A1     ; and copy to A1 (as summand for $15D0/$15DA)    15C8: 2E00           '..'             MOVE.L  D0,D7     ; get D0 into D7 again    15CA: 4847           'HG'             SWAP    D7		; swap High/Low word    15CC: 0247 01FC      '.G..'           ANDI    #$1FC,D7  ; and mask everything but the low-byte    15D0: 4AB1 7000      'J.p.'           TST.L   0(A1,D7.W)     15D4: 6604             $15DA          BNE.S   lab_143    15D6: 7000           'p.'             MOVEQ   #0,D0   ; return 0 and    15D8: 6034             $160E          BRA.S   proc14_exit ; exit sub    15DA: 2E31 7000      '.1p.'  lab_143: MOVE.L  0(A1,D7.W),D7     15DE: 0287 FFFF FF80 '......'         ANDI.L  #-$80,D7    15E4: 9E83           '..'             SUB.L   D3,D7    15E6: 2447           '$G'             MOVEA.L D7,A2    15E8: 2E00           '..'             MOVE.L  D0,D7    15EA: E08F           '..'             LSR.L   #8,D7    15EC: E68F           '..'             LSR.L   #3,D7    15EE: 0287 0000 007C '.....|'         ANDI.L  #$7C,D7    15F4: 2C32 7000      ',2p.'           MOVE.L  0(A2,D7.W),D6    15F8: CC84           '..'             AND.L   D4,D6    15FA: 8C81           '..'             OR.L    D1,D6    15FC: 2586 7000      '%.p.'           MOVE.L  D6,0(A2,D7.W)    1600: 0680 0000 2000 '.... .'         ADDI.L  #$2000,D0    1606: 0482 0000 2000 '.... .'         SUBI.L  #$2000,D2    160C: 6698             $15A6          BNE     lab_141    160E: 4CDF 00C0      'L...' proc14_exit: MOVEM.L (A7)+,D6-D7    1612: 4E75           'Nu'             RTS             1614: 48E7 7FFE      'H...'  proc15:  MOVEM.L D1-D7/A0-A6,-(A7)    1618: 203C 0000 0400 ' <....'         MOVE.L  #$400,D0    161E: 7600           'v.'             MOVEQ   #0,D3    1620: 2229 0008      '")..'  lab_145  MOVE.L  8(A1),D1    1624: 672C             $1652          BEQ.S   lab_146    1626: 2601           '&.'             MOVE.L  D1,D3    1628: 0283 FE00 0000 '......'         ANDI.L  #$FE000000,D3    162E: EF9B           '..'             ROL.L   #7,D3    1630: 5283           'R.'             ADDQ.L  #1,D3    1632: 243C 0000 0380 '$<....'         MOVE.L  #$380,D2    1638: C6C2           '..'             MULU    D2,D3    163A: D083           '..'             ADD.L   D3,D0    163C: D681           '..'             ADD.L   D1,D3    163E: E199           '..'             ROL.L   #8,D1    1640: E999           '..'             ROL.L   #4,D1    1642: 5241           'RA'             ADDQ    #1,D1    1644: 343C 0200      '4<..'           MOVE    #$200,D2    1648: C2C2           '..'             MULU    D2,D1    164A: D081           '..'             ADD.L   D1,D0    164C: 43E9 000C      'C...'           LEA     12(A1),A1    1650: 60CE             $1620          BRA     lab_145    1652: 4CDF 7FFE      'L...'   lab_146 MOVEM.L (A7)+,D1-D7/A0-A6    1656: 4E75           'Nu'             RTS             1658: 48E7 FF7E      'H..~'   proc16: MOVEM.L D0-D7/A1-A6,-(A7)    165C: 2848           '(H'             MOVEA.L A0,A4    165E: 2649           '&I'             MOVEA.L A1,A3    1660: 91C8           '..'             SUBA.L  A0,A0    1662: 201B           ' .'    lab_147: MOVE.L  (A3)+,D0    1664: 221B           '".'             MOVE.L  (A3)+,D1    1666: 241B           '$.'             MOVE.L  (A3)+,D2    1668: 6706             $1670          BEQ.S   lab_148    166A: 6100 FE54        $14C0          BSR     proc13    166E: 60F2             $1662          BRA     lab_147    1670: 4CDF 7EFF      'L.~.'  lab_148: MOVEM.L (A7)+,D0-D7/A1-A6    1674: 4E75           'Nu'             RTS     	    1676: 48E7 FFFE      'H...'   proc17: MOVEM.L D0-D7/A0-A6,-(A7)    167A: 7000           'p.'             MOVEQ   #0,D0    167C: 7200           'r.'             MOVEQ   #0,D1    167E: 243C 0000 2000 '$<.. .'         MOVE.L  #$2000,D2    1684: 78FF           'x.'             MOVEQ   #-1,D4    1686: 6100 FF16        $159E          BSR     proc14    168A: 7E3F           '~?'             MOVEQ   #63,D7    168C: 2351 0100      '#Q..'  lab_149: MOVE.L  (A1),$100(A1)    1690: 5849           'XI'             ADDQ    #4,A1    1692: 51CF FFF8        $168C          DBRA    D7,lab_149    1696: 3E3C 007F      '><..'           MOVE    #$7F,D7    169A: 2248           '"H'             MOVEA.L A0,A1    169C: 22D0           '".'             MOVE.L  (A0),(A1)+    169E: 51CF FFFC        $169C          DBRA    D7,lab_150    16A2: 4CDF 7FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A6    16A6: 4E75           'Nu'             RTS             ; Most likely these are commands for the Carrera    16A8: 40E7           '@.'     53_cmd_1: MOVE    SR,-(A7)   ; save the status register    16AA: 007C 0700      '.|..'           ORI     #$700,SR   ; Set bit 9-11 of SR (diable Interrupts)    16AE: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)  ; compare 3 with ??? in A5-World (probably FPU available)    16B4: 6614             $16CA          BNE.S   p18_noFPU    ; if no FPU?    16B6$ F280 0000      '....'           FNOP                 ; save all FPU registers'n'stuff    16BA$ F227 E0FF      '.'..'           FMOVEM  FP0-FP7,-(A7)    16BE$ F227 B000      '.'..'           FMOVE   FPCR,-(A7)    16C2$ F227 A800      '.'..'           FMOVE   FPSR,-(A7)    16C6$ F227 A400      '.'..'           FMOVE   FPIAR,-(A7)    16CA: 082D 0001 0023 '.-...#' p18_noFPU: BTST    #1,35(A5) ; check A5-World again (maybe "is040"?)    16D0: 6708             $16DA          BEQ.S   lab_152 ; No?     16D2$ F280 0000      '....'           FNOP    16D6: 42A7           'B.'             CLR.L   -(A7)    16D8$ F35F           '._'             FRESTORE (A7)+  ;     16DA: 48E7 FFFE      'H...'  lab_152: MOVEM.L D0-D7/A0-A6,-(A7)    16DE$ 4E7A 0801      'Nz..'           MOVEC   VBR,D0    16E2: 2F00           '/.'             PUSH.L  D0    16E4$ 4E7A 0800      'Nz..'           MOVEC   USP,D0    16E8: 2F00           '/.'             PUSH.L  D0    16EA: 2B4F 001E      '+O..'           MOVE.L  A7,30(A5)    16EE$ 4E7A 0002      'Nz..'           MOVEC   CACR,D0   ; Modify CAche Control Register    16F2: 0080 0000 0808 '......'         ORI.L   #$808,D0  ; by setting 4th and 12th bit: Clear I- and D-Cache    16F8$ 4E7B 0002      'N{..'           MOVEC   D0,CACR   ; and write it back...    16FC: 4E71           'Nq'             NOP     ; If bursting is enabled, remember that the processor reads 4 longwords    16FE: 4E71           'Nq'             NOP     ; of data in each burst. -> 4 NOPs    1700: 4E71           'Nq'             NOP         1702: 4E71           'Nq'             NOP         1704: 23FC 0000 0001 '#.....'         MOVE.L  #1,$53000000 ; Set 1st bit in C040 register(?)    170E: 4E71           'Nq'             NOP         1710: 4E71           'Nq'             NOP         1712: 4E71           'Nq'             NOP         1714: 4E71           'Nq'             NOP         1716$ 4E7A 0002      'Nz..'           MOVEC   CACR,D0  ; And enable caches again    171A: 0080 0000 0808 '......'         ORI.L   #$808,D0    1720$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    1724: 2A7A E91A          $40          MOVEA.L A5wrld,A5    1728: 2E6D 001E      '.m..'           MOVEA.L 30(A5),A7    172C: 201F           ' .'             POP.L   D0    172E$ 4E7B 0800      'N{..'           MOVEC   D0,USP    1732: 201F           ' .'             POP.L   D0    1734$ 4E7B 0801      'N{..'           MOVEC   D0,VBR    1738: 4CDF 7FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A6    173C: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5) ; check FPU    1742: 6610             $1754          BNE.S   lab_153 ; if N/A goto     1744$ F21F 8400      '....'           FMOVE   (A7)+,FPIAR    1748$ F21F 8800      '....'           FMOVE   (A7)+,FPSR    174C$ F21F 9000      '....'           FMOVE   (A7)+,FPCR    1750$ F21F D0FF      '....'           FMOVEM  (A7)+,FP0-FP7    1754: 082D 0001 0023 '.-...#' lab_153 BTST    #1,35(A5)    175A: 6708             $1764          BEQ.S   lab_154    175C$ F280 0000      '....'           FNOP    1760: 42A7           'B.'             CLR.L   -(A7)    1762$ F35F           '._'             FRESTORE (A7)+    1764: 46DF           'F.'             MOVE    (A7)+,SR ; restore SR    1766: 4E75           'Nu'             RTS  		; This "pokes" a #5 (0x101) into 0x53000000 for a very short time (2x NOPs) and clears it afterwards           1768: 40E7           '@.'     53_cmd_5.0  MOVE    SR,-(A7)    176A: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    176E: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    1774: 6614             $178A          BNE.S   lab_155    1776$ F280 0000      '....'           FNOP    177A$ F227 E0FF      '.'..'           FMOVEM  FP0-FP7,-(A7)    177E$ F227 B000      '.'..'           FMOVE   FPCR,-(A7)    1782$ F227 A800      '.'..'           FMOVE   FPSR,-(A7)    1786$ F227 A400      '.'..'           FMOVE   FPIAR,-(A7)    178A: 082D 0000 0023 '.-...#' lab_155 BTST    #0,35(A5)    1790: 6708             $179A          BEQ.S   lab_156    1792$ F280 0000      '....'           FNOP    1796: 42A7           'B.'             CLR.L   -(A7)    1798$ F35F           '._'             FRESTORE (A7)+    179A: 48E7 FFFE      'H...'   lab_156 MOVEM.L D0-D7/A0-A6,-(A7)    179E$ 4E7A 0801      'Nz..'           MOVEC   VBR,D0    17A2: 2F00           '/.'             PUSH.L  D0    17A4$ 4E7A 0800      'Nz..'           MOVEC   USP,D0    17A8: 2F00           '/.'             PUSH.L  D0    17AA: 2B4F 001E      '+O..'           MOVE.L  A7,30(A5)    17AE: 4E71           'Nq'     data53  NOP         17B0$ F4F8           '..'             CPUSHA  BC    17B2: 4E71           'Nq'             NOP         17B4$ F518           '..'             PFLUSHA  ; invalidate all the 22 entries of cache    17B6: 4E71           'Nq'             NOP         17B8: 4E71           'Nq'             NOP         17BA: 23FC 0000 0005 '#.....'         MOVE.L  #5,$53000000    17C4: 4E71           'Nq'             NOP         17C6: 4E71           'Nq'             NOP         17C8: 42B9 5300 0000 'B.S...'         CLR.L   $53000000    17CE: 4E71           'Nq'             NOP         17D0: 4E71           'Nq'             NOP         17D2: 2A7A E86C          $40          MOVEA.L A5wrld,A5    17D6: 4E71           'Nq'             NOP         17D8$ F4F8           '..'             CPUSHA  BC    17DA: 4E71           'Nq'             NOP         17DC$ F518           '..'             PFLUSHA     17DE: 202D 0078      ' -.x'           MOVE.L  $78(A5),D0    17E2$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    17E6: 2E6D 001E      '.m..'           MOVEA.L 30(A5),A7    17EA: 201F           ' .'             POP.L   D0    17EC$ 4E7B 0800      'N{..'           MOVEC   D0,USP    17F0: 201F           ' .'             POP.L   D0    17F2$ 4E7B 0801      'N{..'           MOVEC   D0,VBR    17F6: 4CDF 7FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A6    17FA: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    1800: 6610             $1812          BNE.S   lab_157    1802$ F21F 8400      '....'           FMOVE   (A7)+,FPIAR    1806$ F21F 8800      '....'           FMOVE   (A7)+,FPSR    180A$ F21F 9000      '....'           FMOVE   (A7)+,FPCR    180E$ F21F D0FF      '....'           FMOVEM  (A7)+,FP0-FP7    1812: 082D 0000 0023 '.-...#'         BTST    #0,35(A5)    1818: 6708             $1822          BEQ.S   lab_158    181A$ F280 0000      '....'           FNOP    181E: 42A7           'B.'             CLR.L   -(A7)    1820$ F35F           '._'             FRESTORE (A7)+    1822: 46DF           'F.'             MOVE    (A7)+,SR    1824: 4E75           'Nu'             RTS     ;; 0x53000000 is the start of the IIci "Expansion I/O and factory test space" ; (Apple Guide to the Macintisch Hardware 2e, p. 142); We switch into 32bit mode, read something from 0x53000000 into D7 and return it's value in D0;         1826: 2F07           '/.' read_5300k  PUSH.L  D7    ; save D7    1828: 7001           'p.'             MOVEQ   #1,D0 ; \    182A: A05D           '.]'             _SwapMMUMode  ; / Swap into 32bit mode (D0=1)    182C: 2E39 5300 0000 '.9S...'         MOVE.L  $53000000,D7 ; get the content of 0x53000000 into D7    1832: A05D           '.]'             _SwapMMUMode  ; switch back to 24b mode    1834: 2007           ' .'             MOVE.L  D7,D0	; move the content of D7 into D0    1836: 2E1F           '..'             POP.L   D7    ; restore D7    1838: 4E75           'Nu'             RTS           ; end of read_5300k;; 0x53000000 is the start of the IIci "Expansion I/O and factory test space" ; Writes #5 and #3 into 0x53000000 - NOPs are used to prevent the MC68030 from overlapping instruction execution;        183A: 2F00           '/.' 53_cmd_5.3  PUSH.L  D0    183C: 7001           'p.'             MOVEQ   #1,D0    183E: A05D           '.]'             _SwapMMUMode      1840: 4E71           'Nq'             NOP         1842: 4E71           'Nq'             NOP         1844: 23FC 0000 0005 '#.....'         MOVE.L  #5,$53000000   ; 0101    184E: 4E71           'Nq'             NOP         1850: 4E71           'Nq'             NOP         1852: 23FC 0000 0003 '#.....'         MOVE.L  #3,$53000000   ; 0011    185C: 4E71           'Nq'             NOP         185E: 4E71           'Nq'             NOP         1860: A05D           '.]'             _SwapMMUMode      1862: 201F           ' .'             POP.L   D0    1864: 4E75           'Nu'             RTS         ;; Same as above - different 2nd value; Writes #5 and #1 into 0x53000000 - NOPs are used to prevent the MC68030 from overlapping instruction execution;           1866: 6000 FFD2    $183A  53_cmd_5.3.5.1  BRA     53_cmd_5.3    186A: 2F00           '/.' 53_cmd_5.1  PUSH.L  D0    186C: 7001           'p.'             MOVEQ   #1,D0    186E: A05D           '.]'             _SwapMMUMode      1870: 4E71           'Nq'             NOP         1872: 4E71           'Nq'             NOP         1874: 23FC 0000 0005 '#.....'         MOVE.L  #5,$53000000   ; 0101    187E: 4E71           'Nq'             NOP         1880: 4E71           'Nq'             NOP         1882: 23FC 0000 0001 '#.....'         MOVE.L  #1,$53000000   ; 0001    188C: 4E71           'Nq'             NOP         188E: 4E71           'Nq'             NOP         1890: A05D           '.]'             _SwapMMUMode      1892: 201F           ' .'             POP.L   D0    1894: 4E75           'Nu'             RTS        ; Nearly same as 53_cmd_1 just 'poking' $FB600000 instead of $53000000             1896: 40E7           '@.'             MOVE    SR,-(A7)    1898: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    189C: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    18A2: 6614             $18B8          BNE.S   lab_160    18A4$ F280 0000      '....'           FNOP    18A8$ F227 E0FF      '.'..'           FMOVEM  FP0-FP7,-(A7)    18AC$ F227 B000      '.'..'           FMOVE   FPCR,-(A7)    18B0$ F227 A800      '.'..'           FMOVE   FPSR,-(A7)    18B4$ F227 A400      '.'..'           FMOVE   FPIAR,-(A7)    18B8: 082D 0001 0023 '.-...#'         BTST    #1,35(A5)    18BE: 6708             $18C8          BEQ.S   lab_161    18C0$ F280 0000      '....'           FNOP    18C4: 42A7           'B.'             CLR.L   -(A7)    18C6$ F35F           '._'             FRESTORE (A7)+    18C8: 48E7 FFFE      'H...'           MOVEM.L D0-D7/A0-A6,-(A7)    18CC$ 4E7A 0801      'Nz..'           MOVEC   VBR,D0    18D0: 2F00           '/.'             PUSH.L  D0    18D2$ 4E7A 0800      'Nz..'           MOVEC   USP,D0    18D6: 2F00           '/.'             PUSH.L  D0    18D8: 2B4F 001E      '+O..'           MOVE.L  A7,30(A5)    18DC$ 4E7A 0002      'Nz..'           MOVEC   CACR,D0    18E0: 0080 0000 0808 '......'         ORI.L   #$808,D0    18E6$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    18EA: 4E71           'Nq'             NOP         18EC: 4E71           'Nq'             NOP         18EE: 4E71           'Nq'             NOP         18F0: 4E71           'Nq'             NOP         18F2: 23FC 0000 0001 '#.....'         MOVE.L  #1,$FB600000    18FC: 4E71           'Nq'             NOP         18FE: 4E71           'Nq'             NOP         1900: 4E71           'Nq'             NOP         1902: 4E71           'Nq'             NOP         1904$ 4E7A 0002      'Nz..'           MOVEC   CACR,D0    1908: 0080 0000 0808 '......'         ORI.L   #$808,D0    190E$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    1912: 2A7A E72C          $40          MOVEA.L A5wrld,A5    1916: 2E6D 001E      '.m..'           MOVEA.L 30(A5),A7    191A: 201F           ' .'             POP.L   D0    191C$ 4E7B 0800      'N{..'           MOVEC   D0,USP    1920: 201F           ' .'             POP.L   D0    1922$ 4E7B 0801      'N{..'           MOVEC   D0,VBR    1926: 4CDF 7FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A6    192A: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    1930: 6610             $1942          BNE.S   lab_162    1932$ F21F 8400      '....'           FMOVE   (A7)+,FPIAR    1936$ F21F 8800      '....'           FMOVE   (A7)+,FPSR    193A$ F21F 9000      '....'           FMOVE   (A7)+,FPCR    193E$ F21F D0FF      '....'           FMOVEM  (A7)+,FP0-FP7    1942: 082D 0001 0023 '.-...#'         BTST    #1,35(A5)    1948: 6708             $1952          BEQ.S   lab_163    194A$ F280 0000      '....'           FNOP    194E: 42A7           'B.'             CLR.L   -(A7)    1950$ F35F           '._'             FRESTORE (A7)+    1952: 46DF           'F.'             MOVE    (A7)+,SR    1954: 4E75           'Nu'             RTS             1956: 40E7           '@.'             MOVE    SR,-(A7)    1958: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    195C: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    1962: 6614             $1978          BNE.S   lab_164    1964$ F280 0000      '....'           FNOP    1968$ F227 E0FF      '.'..'           FMOVEM  FP0-FP7,-(A7)    196C$ F227 B000      '.'..'           FMOVE   FPCR,-(A7)    1970$ F227 A800      '.'..'           FMOVE   FPSR,-(A7)    1974$ F227 A400      '.'..'           FMOVE   FPIAR,-(A7)    1978: 082D 0000 0023 '.-...#'         BTST    #0,35(A5)    197E: 6708             $1988          BEQ.S   lab_165    1980$ F280 0000      '....'           FNOP    1984: 42A7           'B.'             CLR.L   -(A7)    1986$ F35F           '._'             FRESTORE (A7)+    1988: 48E7 FFFE      'H...'           MOVEM.L D0-D7/A0-A6,-(A7)    198C$ 4E7A 0801      'Nz..'           MOVEC   VBR,D0    1990: 2F00           '/.'             PUSH.L  D0    1992$ 4E7A 0800      'Nz..'           MOVEC   USP,D0    1996: 2F00           '/.'             PUSH.L  D0    1998: 2B4F 001E      '+O..'           MOVE.L  A7,30(A5)    199C: 4E71           'Nq'             NOP         199E$ F4F8           '..'             CPUSHA  BC    19A0: 4E71           'Nq'             NOP         19A2$ F518           '..'             PFLUSHA     19A4: 4E71           'Nq'             NOP         19A6: 4E71           'Nq'             NOP         19A8: 4E71           'Nq'             NOP         19AA: 4E71           'Nq'             NOP         19AC: 42B9 FB60 0000 'B..`..'         CLR.L   $FB600000    19B2: 4E71           'Nq'             NOP         19B4: 4E71           'Nq'             NOP         19B6: 4E71           'Nq'             NOP         19B8: 4E71           'Nq'             NOP         19BA: 2A7A E684          $40          MOVEA.L A5wrld,A5    19BE: 4E71           'Nq'             NOP         19C0$ F4F8           '..'             CPUSHA  BC    19C2: 4E71           'Nq'             NOP         19C4$ F518           '..'             PFLUSHA     19C6: 202D 0078      ' -.x'           MOVE.L  $78(A5),D0    19CA$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    19CE: 2E6D 001E      '.m..'           MOVEA.L 30(A5),A7    19D2: 201F           ' .'             POP.L   D0    19D4$ 4E7B 0800      'N{..'           MOVEC   D0,USP    19D8: 201F           ' .'             POP.L   D0    19DA$ 4E7B 0801      'N{..'           MOVEC   D0,VBR    19DE: 4CDF 7FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A6    19E2: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    19E8: 6610             $19FA          BNE.S   lab_166    19EA$ F21F 8400      '....'           FMOVE   (A7)+,FPIAR    19EE$ F21F 8800      '....'           FMOVE   (A7)+,FPSR    19F2$ F21F 9000      '....'           FMOVE   (A7)+,FPCR    19F6$ F21F D0FF      '....'           FMOVEM  (A7)+,FP0-FP7    19FA: 082D 0000 0023 '.-...#'         BTST    #0,35(A5)    1A00: 6708             $1A0A          BEQ.S   lab_167    1A02$ F280 0000      '....'           FNOP    1A06: 42A7           'B.'             CLR.L   -(A7)    1A08$ F35F           '._'             FRESTORE (A7)+    1A0A: 46DF           'F.'             MOVE    (A7)+,SR    1A0C: 4E75           'Nu'             RTS                 1A0E: 2F07           '/.'   read_FB60k:   PUSH.L  D7    1A10: 7001           'p.'             MOVEQ   #1,D0    1A12: A05D           '.]'             _SwapMMUMode      1A14: 2E39 FB60 0000 '.9.`..'         MOVE.L  $FB600000,D7    1A1A: A05D           '.]'             _SwapMMUMode      1A1C: 0247 0007      '.G..'           ANDI    #7,D7  ; we only need the low 3 bits    1A20: 41FA 000C        $1A2E          LEA     data59,A0    1A24: 7000           'p.'             MOVEQ   #0,D0    1A26: 1030 7000      '.0p.'           MOVE.B  0(A0,D7.W),D0    1A2A: 2E1F           '..'             POP.L   D7    1A2C: 4E75           'Nu'             RTS     	    1A2E¥ 0004 0206      '....'   data59  ORI.B   #$206,D4    1A32: 0105           '..'             BTST    D0,D5    1A34: 0307           '..'             BTST    D1,D7	    1A36: 2F00           '/.'     data61  PUSH.L  D0    1A38: 701F           'p.'             MOVEQ   #31,D0    1A3A: C06F 0008      '.o..'           AND     8(A7),D0    1A3E: 0C00 000B      '....'           CMPI.B  #11,D0    1A42: 4CDF 0001      'L...'           MOVEM.L (A7)+,D0    1A46: 6706             $1A4E          BEQ.S   lab_168    1A48$ 4EFB 8161 0048   $1A92          JMP     ([data62])    1A4E: 4E56 FFE4      'NV..'           LINK    A6,#-$1C    1A52: 48E7 80C0      'H...'           MOVEM.L D0/A0-A1,-(A7)    1A56: 41EE FFE4      'A...'           LEA     -28(A6),A0    1A5A: 2F2E 0012      '/...'           PUSH.L  18(A6)     1A5E: 2F2E 000E      '/...'           PUSH.L  14(A6)    1A62: 2F08           '/.'             PUSH.L  A0    1A64: 3F2E 0008      '?...'           PUSH    8(A6)    1A68$ 4EBB 8161 0028   $1A92          JSR     ([data62])    1A6E: 226E 000A      '"n..'           MOVEA.L 10(A6),A1    1A72: 22D8           '".'             MOVE.L  (A0)+,(A1)+    1A74: 4240           'B@'             CLR     D0    1A76: 1018           '..'             MOVE.B  (A0)+,D0    1A78: 12C0           '..'             MOVE.B  D0,(A1)+    1A7A: 5340           'S@'             SUBQ    #1,D0    1A7C: 12D8           '..'     lab_169 MOVE.B  (A0)+,(A1)+    1A7E: 51C8 FFFC        $1A7C          DBRA    D0,lab_169    1A82: 4CDF 0301      'L...'           MOVEM.L (A7)+,D0/A0-A1    1A86: 4E5E           'N^'             UNLK    A6    1A88: 2F57 000E      '/W..'           MOVE.L  (A7),14(A7)    1A8C: 4FEF 000E      'O...'           LEA     14(A7),A7    1A90: 4E75           'Nu'             RTS           1A92: 0000 0000      '....'    data62 dc.l 0000 0000 ; might be FPSP handle	    1A96: 207A E5A8          $40   data63 MOVEA.L A5wrld,A0  ; called by 4th call of LC handler    1A9A: 1200           '..'             MOVE.B  D0,D1    1A9C: 6760             $1AFE          BEQ.S   lab_172    1A9E: 1038 0CB2         $CB2          MOVE.B  MMU32bit,D0    1AA2: 6654             $1AF8          BNE.S   lab_171    1AA4: 40E7           '@.'             MOVE    SR,-(A7)    1AA6: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    1AAA: 11C1 0CB2         $CB2          MOVE.B  D1,MMU32bit    1AAE: 2228 0060      '"(.`'           MOVE.L  96(A0),D1    1AB2$ 4E7B 1807      'N{..'           MOVEC   D1,SRP    1AB6$ 4E7B 1806      'N{..'           MOVEC   D1,URP    1ABA: 2228 0064      '"(.d'           MOVE.L  $64(A0),D1    1ABE$ 4E7B 1004      'N{..'           MOVEC   D1,ITT0    1AC2: 2228 006C      '"(.l'           MOVE.L  $6C(A0),D1    1AC6$ 4E7B 1006      'N{..'           MOVEC   D1,DTT0    1ACA: 2228 0068      '"(.h'           MOVE.L  $68(A0),D1    1ACE$ 4E7B 1005      'N{..'           MOVEC   D1,ITT1    1AD2: 2228 0070      '"(.p'           MOVE.L  $70(A0),D1    1AD6$ 4E7B 1007      'N{..'           MOVEC   D1,DTT1    1ADA: 4E71           'Nq'             NOP         1ADC$ F518           '..'             PFLUSHA     1ADE: 2078 0CEC         $CEC          MOVEA.L VIA2orRBVorOSs,A0    1AE2: 08D0 0003      '....'           BSET    #3,(A0)    1AE6: 2078 0CC0         $CC0          MOVEA.L ASCBase,A0    1AEA: 41E8 0804      'A...'           LEA     $804(A0),A0    1AEE: 1210           '..'             MOVE.B  (A0),D1    1AF0: 6702             $1AF4          BEQ.S   lab_170    1AF2: 8310           '..'             OR.B    D1,(A0)    1AF4: 46DF           'F.'             MOVE    (A7)+,SR    1AF6: 4E75           'Nu'             RTS         1AF8: 11C0 0CB2         $CB2  lab_171 MOVE.B  D0,MMU32bit    1AFC: 4E75           'Nu'             RTS         1AFE: 1038 0CB2         $CB2  lab_172 MOVE.B  MMU32bit,D0    1B02: 67F4             $1AF8          BEQ     lab_171    1B04: 40E7           '@.'             MOVE    SR,-(A7)    1B06: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    1B0A: 11C1 0CB2         $CB2          MOVE.B  D1,MMU32bit    1B0E: 2228 003C      '"(.<'           MOVE.L  60(A0),D1    1B12$ 4E7B 1807      'N{..'           MOVEC   D1,SRP    1B16$ 4E7B 1806      'N{..'           MOVEC   D1,URP    1B1A: 2228 0040      '"(.@'           MOVE.L  64(A0),D1    1B1E$ 4E7B 1004      'N{..'           MOVEC   D1,ITT0    1B22: 2228 0048      '"(.H'           MOVE.L  72(A0),D1    1B26$ 4E7B 1006      'N{..'           MOVEC   D1,DTT0    1B2A: 2228 0044      '"(.D'           MOVE.L  68(A0),D1    1B2E$ 4E7B 1005      'N{..'           MOVEC   D1,ITT1    1B32: 2228 004C      '"(.L'           MOVE.L  76(A0),D1    1B36$ 4E7B 1007      'N{..'           MOVEC   D1,DTT1    1B3A: 4E71           'Nq'             NOP         1B3C$ F518           '..'             PFLUSHA     1B3E: 2078 0CEC         $CEC          MOVEA.L VIA2orRBVorOSs,A0 ; Get the VIA2 Base adress    1B42: 0890 0003      '....'           BCLR    #3,(A0)   ;     1B46: 2078 0CC0         $CC0          MOVEA.L ASCBase,A0   ; Pointer to Sound Chip     1B4A: 41E8 0804      'A...'           LEA     $804(A0),A0    1B4E: 1210           '..'             MOVE.B  (A0),D1    1B50: 6702             $1B54          BEQ.S   lab_173    1B52: 8310           '..'             OR.B    D1,(A0)    1B54: 46DF           'F.'    lab_173  MOVE    (A7)+,SR    1B56: 4E75           'Nu'             RTS    		     1B58: 40E7           '@.'     53_cmd_1.LC  MOVE    SR,-(A7)    1B5A: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    1B5E: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    1B64: 6614             $1B7A          BNE.S   lab_174    1B66$ F280 0000      '....'           FNOP    1B6A$ F227 E0FF      '.'..'           FMOVEM  FP0-FP7,-(A7)    1B6E$ F227 B000      '.'..'           FMOVE   FPCR,-(A7)    1B72$ F227 A800      '.'..'           FMOVE   FPSR,-(A7)    1B76$ F227 A400      '.'..'           FMOVE   FPIAR,-(A7)    1B7A: 082D 0001 0023 '.-...#'         BTST    #1,35(A5)    1B80: 6708             $1B8A          BEQ.S   lab_175    1B82$ F280 0000      '....'           FNOP    1B86: 42A7           'B.'             CLR.L   -(A7)    1B88$ F35F           '._'             FRESTORE (A7)+    1B8A: 48E7 FFFE      'H...'           MOVEM.L D0-D7/A0-A6,-(A7)    1B8E$ 4E7A 0801      'Nz..'           MOVEC   VBR,D0    1B92: 2F00           '/.'             PUSH.L  D0    1B94$ 4E7A 0800      'Nz..'           MOVEC   USP,D0    1B98: 2F00           '/.'             PUSH.L  D0    1B9A: 2B4F 001E      '+O..'           MOVE.L  A7,30(A5)    1B9E$ 4E7A 0002      'Nz..'           MOVEC   CACR,D0    1BA2: 0080 0000 0808 '......'         ORI.L   #$808,D0    1BA8$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    1BAC: 4E71           'Nq'             NOP         1BAE: 4E71           'Nq'             NOP         1BB0: 4E71           'Nq'             NOP         1BB2: 4E71           'Nq'             NOP         1BB4: 23FC 0000 0001 '#.....'         MOVE.L  #1,$53000000    1BBE: 4E71           'Nq'             NOP         1BC0: 4E71           'Nq'             NOP         1BC2: 4E71           'Nq'             NOP         1BC4: 4E71           'Nq'             NOP         1BC6$ 4E7A 0002      'Nz..'           MOVEC   CACR,D0    1BCA: 0080 0000 0808 '......'         ORI.L   #$808,D0    1BD0$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    1BD4: 2A7A E46A          $40          MOVEA.L A5wrld,A5    1BD8: 2E6D 001E      '.m..'           MOVEA.L 30(A5),A7    1BDC: 201F           ' .'             POP.L   D0    1BDE$ 4E7B 0800      'N{..'           MOVEC   D0,USP    1BE2: 201F           ' .'             POP.L   D0    1BE4$ 4E7B 0801      'N{..'           MOVEC   D0,VBR    1BE8: 4CDF 7FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A6    1BEC: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    1BF2: 6610             $1C04          BNE.S   lab_176    1BF4$ F21F 8400      '....'           FMOVE   (A7)+,FPIAR    1BF8$ F21F 8800      '....'           FMOVE   (A7)+,FPSR    1BFC$ F21F 9000      '....'           FMOVE   (A7)+,FPCR    1C00$ F21F D0FF      '....'           FMOVEM  (A7)+,FP0-FP7    1C04: 082D 0001 0023 '.-...#'         BTST    #1,35(A5)    1C0A: 6708             $1C14          BEQ.S   lab_177    1C0C$ F280 0000      '....'           FNOP    1C10: 42A7           'B.'             CLR.L   -(A7)    1C12$ F35F           '._'             FRESTORE (A7)+    1C14: 46DF           'F.'             MOVE    (A7)+,SR    1C16: 4E75           'Nu'             RTS    		     1C18: 40E7           '@.'     53_cmd_0.LC  MOVE    SR,-(A7)    1C1A: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    1C1E: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    1C24: 6614             $1C3A          BNE.S   lab_178    1C26$ F280 0000      '....'           FNOP    1C2A$ F227 E0FF      '.'..'           FMOVEM  FP0-FP7,-(A7)    1C2E$ F227 B000      '.'..'           FMOVE   FPCR,-(A7)    1C32$ F227 A800      '.'..'           FMOVE   FPSR,-(A7)    1C36$ F227 A400      '.'..'           FMOVE   FPIAR,-(A7)    1C3A: 082D 0000 0023 '.-...#'         BTST    #0,35(A5)    1C40: 6708             $1C4A          BEQ.S   lab_179    1C42$ F280 0000      '....'           FNOP    1C46: 42A7           'B.'             CLR.L   -(A7)    1C48$ F35F           '._'             FRESTORE (A7)+    1C4A: 48E7 FFFE      'H...'           MOVEM.L D0-D7/A0-A6,-(A7)    1C4E$ 4E7A 0801      'Nz..'           MOVEC   VBR,D0    1C52: 2F00           '/.'             PUSH.L  D0    1C54$ 4E7A 0800      'Nz..'           MOVEC   USP,D0    1C58: 2F00           '/.'             PUSH.L  D0    1C5A: 2B4F 001E      '+O..'           MOVE.L  A7,30(A5)    1C5E: 4E71           'Nq'             NOP         1C60$ F4F8           '..'             CPUSHA  BC    1C62: 4E71           'Nq'             NOP         1C64$ F518           '..'             PFLUSHA     1C66: 4E71           'Nq'             NOP         1C68: 4E71           'Nq'             NOP         1C6A: 4E71           'Nq'             NOP         1C6C: 4E71           'Nq'             NOP         1C6E: 42B9 5300 0000 'B.S...'         CLR.L   $53000000    1C74: 4E71           'Nq'             NOP         1C76: 4E71           'Nq'             NOP         1C78: 4E71           'Nq'             NOP         1C7A: 4E71           'Nq'             NOP         1C7C: 2A7A E3C2          $40          MOVEA.L A5wrld,A5    1C80: 4E71           'Nq'             NOP         1C82$ F4F8           '..'             CPUSHA  BC    1C84: 4E71           'Nq'             NOP         1C86$ F518           '..'             PFLUSHA     1C88: 202D 0078      ' -.x'           MOVE.L  $78(A5),D0    1C8C$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    1C90: 2E6D 001E      '.m..'           MOVEA.L 30(A5),A7    1C94: 201F           ' .'             POP.L   D0    1C96$ 4E7B 0800      'N{..'           MOVEC   D0,USP    1C9A: 201F           ' .'             POP.L   D0    1C9C$ 4E7B 0801      'N{..'           MOVEC   D0,VBR    1CA0: 4CDF 7FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A6    1CA4: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    1CAA: 6610             $1CBC          BNE.S   lab_180    1CAC$ F21F 8400      '....'           FMOVE   (A7)+,FPIAR    1CB0$ F21F 8800      '....'           FMOVE   (A7)+,FPSR    1CB4$ F21F 9000      '....'           FMOVE   (A7)+,FPCR    1CB8$ F21F D0FF      '....'           FMOVEM  (A7)+,FP0-FP7    1CBC: 082D 0000 0023 '.-...#'         BTST    #0,35(A5)    1CC2: 6708             $1CCC          BEQ.S   lab_181    1CC4$ F280 0000      '....'           FNOP    1CC8: 42A7           'B.'             CLR.L   -(A7)    1CCA$ F35F           '._'             FRESTORE (A7)+    1CCC: 46DF           'F.'             MOVE    (A7)+,SR    1CCE: 4E75           'Nu'             RTS    		     1CD0: 2F07           '/.'     proc23  PUSH.L  D7   ; Called by the LC_handler - same as read_53k    1CD2: 7001           'p.'             MOVEQ   #1,D0    1CD4: A05D           '.]'             _SwapMMUMode      1CD6: 2E39 5300 0000 '.9S...'         MOVE.L  $53000000,D7    1CDC: A05D           '.]'             _SwapMMUMode      1CDE: 2007           ' .'             MOVE.L  D7,D0    1CE0: 2E1F           '..'             POP.L   D7    1CE2: 4E75           'Nu'             RTS     		    1CE4: 40E7           '@.'     53_cmd_1x  MOVE    SR,-(A7)    1CE6: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    1CEA: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    1CF0: 6614             $1D06          BNE.S   lab_182    1CF2$ F280 0000      '....'           FNOP    1CF6$ F227 E0FF      '.'..'           FMOVEM  FP0-FP7,-(A7)    1CFA$ F227 B000      '.'..'           FMOVE   FPCR,-(A7)    1CFE$ F227 A800      '.'..'           FMOVE   FPSR,-(A7)    1D02$ F227 A400      '.'..'           FMOVE   FPIAR,-(A7)    1D06: 082D 0001 0023 '.-...#' lab_182 BTST    #1,35(A5)    1D0C: 6708             $1D16          BEQ.S   lab_183    1D0E$ F280 0000      '....'           FNOP    1D12: 42A7           'B.'             CLR.L   -(A7)    1D14$ F35F           '._'             FRESTORE (A7)+    1D16: 48E7 FFFE      'H...'   lab_183 MOVEM.L D0-D7/A0-A6,-(A7)    1D1A$ 4E7A 0801      'Nz..'           MOVEC   VBR,D0    1D1E: 2F00           '/.'             PUSH.L  D0    1D20$ 4E7A 0800      'Nz..'           MOVEC   USP,D0    1D24: 2F00           '/.'             PUSH.L  D0    1D26: 2B4F 001E      '+O..'           MOVE.L  A7,30(A5)    1D2A$ 4E7A 0002      'Nz..'           MOVEC   CACR,D0    1D2E: 0080 0000 0808 '......'         ORI.L   #$808,D0  ; Clear Instruction & Data Cache    1D34$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    1D38: 4E71           'Nq'             NOP         1D3A: 4E71           'Nq'             NOP         1D3C: 4E71           'Nq'             NOP         1D3E: 4E71           'Nq'             NOP         1D40: 23FC 0000 0001 '#.....'         MOVE.L  #1,$53000000    1D4A: 4E71           'Nq'             NOP         1D4C: 4E71           'Nq'             NOP         1D4E: 4E71           'Nq'             NOP         1D50: 4E71           'Nq'             NOP         1D52$ 4E7A 0002      'Nz..'           MOVEC   CACR,D0    1D56: 0080 0000 0808 '......'         ORI.L   #$808,D0    1D5C$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    1D60: 2A7A E2DE          $40          MOVEA.L A5wrld,A5    1D64: 2E6D 001E      '.m..'           MOVEA.L 30(A5),A7    1D68: 201F           ' .'             POP.L   D0    1D6A$ 4E7B 0800      'N{..'           MOVEC   D0,USP    1D6E: 201F           ' .'             POP.L   D0    1D70$ 4E7B 0801      'N{..'           MOVEC   D0,VBR    1D74: 4CDF 7FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A6    1D78: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    1D7E: 6610             $1D90          BNE.S   lab_184    1D80$ F21F 8400      '....'           FMOVE   (A7)+,FPIAR    1D84$ F21F 8800      '....'           FMOVE   (A7)+,FPSR    1D88$ F21F 9000      '....'           FMOVE   (A7)+,FPCR    1D8C$ F21F D0FF      '....'           FMOVEM  (A7)+,FP0-FP7    1D90: 082D 0001 0023 '.-...#'         BTST    #1,35(A5)    1D96: 6708             $1DA0          BEQ.S   lab_185    1D98$ F280 0000      '....'           FNOP    1D9C: 42A7           'B.'             CLR.L   -(A7)    1D9E$ F35F           '._'             FRESTORE (A7)+    1DA0: 46DF           'F.'             MOVE    (A7)+,SR    1DA2: 4E75           'Nu'             RTS                 1DA4: 40E7           '@.'   53_cmd_0:   MOVE    SR,-(A7)    1DA6: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    1DAA: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    1DB0: 6614             $1DC6          BNE.S   lab_186    1DB2$ F280 0000      '....'           FNOP    1DB6$ F227 E0FF      '.'..'           FMOVEM  FP0-FP7,-(A7)    1DBA$ F227 B000      '.'..'           FMOVE   FPCR,-(A7)    1DBE$ F227 A800      '.'..'           FMOVE   FPSR,-(A7)    1DC2$ F227 A400      '.'..'           FMOVE   FPIAR,-(A7)    1DC6: 082D 0000 0023 '.-...#'lab_186: BTST    #0,35(A5)    1DCC: 6708             $1DD6          BEQ.S   lab_187    1DCE$ F280 0000      '....'           FNOP    1DD2: 42A7           'B.'             CLR.L   -(A7)    1DD4$ F35F           '._'             FRESTORE (A7)+    1DD6: 48E7 FFFE      'H...'  lab_187: MOVEM.L D0-D7/A0-A6,-(A7)    1DDA$ 4E7A 0801      'Nz..'           MOVEC   VBR,D0    1DDE: 2F00           '/.'             PUSH.L  D0    1DE0$ 4E7A 0800      'Nz..'           MOVEC   USP,D0    1DE4: 2F00           '/.'             PUSH.L  D0    1DE6: 2B4F 001E      '+O..'           MOVE.L  A7,30(A5)    1DEA: 4E71           'Nq'     data69  NOP         1DEC$ F4F8           '..'             CPUSHA  BC    1DEE: 4E71           'Nq'             NOP         1DF0$ F518           '..'             PFLUSHA     1DF2: 4E71           'Nq'             NOP         1DF4: 4E71           'Nq'             NOP         1DF6: 4E71           'Nq'             NOP         1DF8: 4E71           'Nq'             NOP         1DFA: 42B9 5300 0000 'B.S...'         CLR.L   $53000000    1E00: 4E71           'Nq'             NOP         1E02: 4E71           'Nq'             NOP         1E04: 4E71           'Nq'             NOP         1E06: 4E71           'Nq'             NOP         1E08: 2A7A E236          $40          MOVEA.L A5wrld,A5    1E0C: 4E71           'Nq'             NOP         1E0E$ F4F8           '..'             CPUSHA  BC    1E10: 4E71           'Nq'             NOP         1E12$ F518           '..'             PFLUSHA     1E14: 202D 0078      ' -.x'           MOVE.L  $78(A5),D0    1E18$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    1E1C: 2E6D 001E      '.m..'           MOVEA.L 30(A5),A7    1E20: 201F           ' .'             POP.L   D0    1E22$ 4E7B 0800      'N{..'           MOVEC   D0,USP    1E26: 201F           ' .'             POP.L   D0    1E28$ 4E7B 0801      'N{..'           MOVEC   D0,VBR    1E2C: 4CDF 7FFF      'L...'           MOVEM.L (A7)+,D0-D7/A0-A6    1E30: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    1E36: 6610             $1E48          BNE.S   lab_188    1E38$ F21F 8400      '....'           FMOVE   (A7)+,FPIAR    1E3C$ F21F 8800      '....'           FMOVE   (A7)+,FPSR    1E40$ F21F 9000      '....'           FMOVE   (A7)+,FPCR    1E44$ F21F D0FF      '....'           FMOVEM  (A7)+,FP0-FP7    1E48: 082D 0000 0023 '.-...#'lab_188: BTST    #0,35(A5)    1E4E: 6708             $1E58          BEQ.S   lab_189    1E50$ F280 0000      '....'           FNOP    1E54: 42A7           'B.'             CLR.L   -(A7)    1E56$ F35F           '._'             FRESTORE (A7)+    1E58: 46DF           'F.'    lab_189: MOVE    (A7)+,SR    1E5A: 4E75           'Nu'             RTS         **** redundant to read_5300k        1E5C: 2F07           '/.'   read_5300k2    PUSH.L  D7    1E5E: 7001           'p.'             MOVEQ   #1,D0    1E60: A05D           '.]'             _SwapMMUMode      1E62: 2E39 5300 0000 '.9S...'         MOVE.L  $53000000,D7    1E68: A05D           '.]'             _SwapMMUMode      1E6A: 2007           ' .'             MOVE.L  D7,D0    1E6C: 2E1F           '..'             POP.L   D7    1E6E: 4E75           'Nu'             RTS     ****        1E70: 4E75           'Nu'             RTS             1E72: 48E7 6040      'H.`@'   proc26  MOVEM.L D1-D2/A1,-(A7)    1E76$ 4E7A 1002      'Nz..'           MOVEC   CACR,D1    1E7A: 2F01           '/.'             PUSH.L  D1    1E7C: 9EFC 0010      '....'           SUBA.W  #16,A7    1E80: 2E88           '..'             MOVE.L  A0,(A7)    1E82: 2F40 0004      '/@..'           MOVE.L  D0,4(A7)    1E86: 2F00           '/.'             PUSH.L  D0    1E88: 6604             $1E8E          BNE.S   lab_190    1E8A: 52AF 0008      'R...'           ADDQ.L  #1,8(A7)    1E8E: 203C 0000 A05C ' <...\' lab_190 MOVE.L  #$A05C,D0   ; VM_Dispatch    1E94: A346           '.F'             _GetTrapAddress newOS; (D0/trapNum:Word):A0\ProcPtr     1E96: 2408           '$.'             MOVE.L  A0,D2    1E98: 203C 0000 A89F ' <....'         MOVE.L  #$A89F,D0   ; UnimplTrap    1E9E: A746           '.F'             _GetTrapAddress newTool; (D0/trapNum:Word):A0\ProcPtr     1EA0: B488           '..'             CMP.L   A0,D2    1EA2: 6734             $1ED8          BEQ.S   lab_193    1EA4: 201F           ' .'             POP.L   D0    1EA6: 670C             $1EB4          BEQ.S   lab_191    1EA8: 2057           ' W'             MOVEA.L (A7),A0    1EAA: 2240           '"@'             MOVEA.L D0,A1    1EAC: 7004           'p.'             MOVEQ   #4,D0    1EAE: A05C           '.\'             _VM_Dispatch ; (D0/selector:INTEGER)     1EB0: 4A40           'J@'             TST     D0    1EB2: 660E             $1EC2          BNE.S   lab_192    1EB4: 204F           ' O'             MOVEA.L A7,A0    1EB6: 327C 0001      '2|..'           MOVEA   #1,A1    1EBA: 7005           'p.'             MOVEQ   #5,D0    1EBC: A15C           '.\'             _VM_Dispatch ; (D0/selector:INTEGER)     1EBE: 206F 0008      ' o..'           MOVEA.L 8(A7),A0    1EC2: DEFC 0010      '....'  lab_192  ADDA.W  #16,A7    1EC6: 221F           '".'             POP.L   D1    1EC8: 0041 0808      '.A..'           ORI     #$808,D1    1ECC$ 4E7B 1002      'N{..'           MOVEC   D1,CACR    1ED0: 4A40           'J@'             TST     D0    1ED2: 4CDF 0206      'L...'           MOVEM.L (A7)+,D1-D2/A1    1ED6: 4E75           'Nu'             RTS         1ED8: 584F           'XO'    lab_193  ADDQ    #4,A7    1EDA: 2057           ' W'             MOVEA.L (A7),A0    1EDC: 7000           'p.'             MOVEQ   #0,D0    1EDE: 60E2             $1EC2          BRA     lab_192        1EE0: 48E7 6158      'H.aX'  proc27   MOVEM.L D1-D2/D7/A1/A3-A4,-(A7)    1EE4: 2E00           '..'             MOVE.L  D0,D7    1EE6: 97CB           '..'             SUBA.L  A3,A3    1EE8: 2007           ' .'             MOVE.L  D7,D0    1EEA: A71E           '..'             _NewPtr ,CL_SY; (D0/byteCount:Size):A0\Ptr     1EEC: 2848           '(H'             MOVEA.L A0,A4    1EEE: 4A40           'J@'             TST     D0    1EF0: 6610             $1F02          BNE.S   lab_195    1EF2: 2007           ' .'             MOVE.L  D7,D0    1EF4: 6100 FF7C        $1E72          BSR     proc26    1EF8: 6708             $1F02          BEQ.S   lab_195    1EFA: 4A8B           'J.'             TST.L   A3    1EFC: 6604             $1F02          BNE.S   lab_195    1EFE: 264C           '&L'             MOVEA.L A4,A3    1F00: 60E6             $1EE8          BRA     lab_194    1F02: 2608           '&.'             MOVE.L  A0,D3    1F04: 968C           '..'             SUB.L   A4,D3    1F06: 4A8B           'J.'             TST.L   A3    1F08: 6708             $1F12          BEQ.S   lab_196    1F0A: 2F00           '/.'             PUSH.L  D0    1F0C: 204B           ' K'             MOVEA.L A3,A0    1F0E: A01F           '..'             _DisposPtr ; (A0/p:Ptr)     1F10: 201F           ' .'             POP.L   D0    1F12: 204C           ' L'             MOVEA.L A4,A0    1F14: 4CDF 1A86      'L...'           MOVEM.L (A7)+,D1-D2/D7/A1/A3-A4    1F18: 4A40           'J@'             TST     D0    1F1A: 4E75           'Nu'             RTS     	    1F1C: 2F08           '/.'     proc28  PUSH.L  A0    1F1E: 203C 0000 A05C ' <...\'         MOVE.L  #$A05C,D0   ; VM_Dispatch    1F24: A346           '.F'             _GetTrapAddress newOS; (D0/trapNum:Word):A0\ProcPtr     1F26: 2408           '$.'             MOVE.L  A0,D2    1F28: 203C 0000 A89F ' <....'         MOVE.L  #$A89F,D0   ; UnimplTrap    1F2E: A746           '.F'             _GetTrapAddress newTool; (D0/trapNum:Word):A0\ProcPtr     1F30: B488           '..'             CMP.L   A0,D2    1F32: 670A             $1F3E          BEQ.S   lab_197    1F34: A021           '.!'             _GetPtrSize ; (A0/p:Ptr):D0\Size     1F36: 2057           ' W'             MOVEA.L (A7),A0    1F38: 2240           '"@'             MOVEA.L D0,A1    1F3A: 7003           'p.'             MOVEQ   #3,D0    1F3C: A05C           '.\'             _VM_Dispatch ; (D0/selector:INTEGER)     1F3E: 205F           ' _'             POP.L   A0    1F40: A01F           '..'             _DisposPtr ; (A0/p:Ptr)     1F42: 4E75           'Nu'             RTS         1F44: 48E7 1F38      'H..8'           MOVEM.L D3-D7/A2-A4,-(A7)    1F48: 99CC           '..'             SUBA.L  A4,A4    1F4A: 554F           'UO'             SUBQ    #2,A7    1F4C: 2F3C 5350 4444 '/<SPDD'         PUSH.L  #'SPDD'  ; This ressource has the comment "Configuration" in the ressource file    1F52: A80D           '..'             _Count1Resources ; (theType:ResType):INTEGER     1F54: 3E1F           '>.'             POP     D7    1F56: 6742             $1F9A          BEQ.S   lab_200  ; SPDD seems to be optional    1F58: 700A           'p.'             MOVEQ   #10,D0    1F5A: C0C7           '..'             MULU    D7,D0    1F5C: 0680 0000 000A '......'         ADDI.L  #10,D0    1F62: A722           '."'             _NewHandle ,CL_SY; (D0/byteCount:Size):A0\Handle     1F64: 6600 0094        $1FFA          BNE     lab_201    1F68: 2848           '(H'             MOVEA.L A0,A4    1F6A: A029           '.)'             _HLock  ; (A0/h:Handle)  ; Make ist non-relocateable    1F6C: 2654           '&T'             MOVEA.L (A4),A3    1F6E: 7C01           '|.'             MOVEQ   #1,D6    1F70: 5347           'SG'             SUBQ    #1,D7    1F72: 594F           'YO'     lab_198 SUBQ    #4,A7    1F74: 2F3C 5350 4444 '/<SPDD'         PUSH.L  #'SPDD'    1F7A: 3F06           '?.'             PUSH    D6    1F7C: A99D           '..'             _GetIndResource ; (theType:ResType; index:INTEGER):Handle     1F7E: 201F           ' .'             POP.L   D0    1F80: 6712             $1F94          BEQ.S   lab_199    1F82: 2440           '$@'             MOVEA.L D0,A2    1F84: 2052           ' R'             MOVEA.L (A2),A0    1F86: 224B           '"K'             MOVEA.L A3,A1    1F88: 700A           'p.'             MOVEQ   #10,D0 ; 10 bytes are copied to memory    1F8A: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     1F8C: D6FC 000A      '....'           ADDA.W  #10,A3     1F90: 2F0A           '/.'             PUSH.L  A2    1F92: A9A3           '..'             _ReleaseResource ; (theResource:Handle)     1F94: 5246           'RF'     lab_199 ADDQ    #1,D6    1F96: 51CF FFDA        $1F72          DBRA    D7,lab_198    1F9A: 594F           'YO'     lab_200 SUBQ    #4,A7    1F9C: 2F3C 5350 4544 '/<SPED'         PUSH.L  #'SPED' ; String    1FA2: 3F3C FC18      '?<..'           PUSH    #$FC18  ; ID    1FA6: A81F           '..'             _Get1Resource ; (theType:ResType; ID:INTEGER):Handle     1FA8: 203C 0000 1B64 ' <...d'         MOVE.L  #$1B64,D0  ;STR "Carrera040 could not find needed resource. The Carrera040 file may be corrupted."    1FAE: 221F           '".'             POP.L   D1    1FB0: 6748             $1FFA          BEQ.S   lab_201    1FB2: 2641           '&A'             MOVEA.L D1,A3    1FB4: 2053           ' S'             MOVEA.L (A3),A0    1FB6: 7A00           'z.'             MOVEQ   #0,D5    1FB8: 1A28 0001      '.(..'           MOVE.B  1(A0),D5    1FBC: 7C00           '|.'             MOVEQ   #0,D6    1FBE: 1C28 0002      '.(..'           MOVE.B  2(A0),D6    1FC2: 2428 0004      '$(..'           MOVE.L  4(A0),D2    1FC6: 43FA 003A        $2002          LEA     sysDetect,A1    1FCA: 363C 0008      '6<..'           MOVE    #8,D3    1FCE: C4C3           '..'             MULU    D3,D2    1FD0: 2631 2000      '&1 .'           MOVE.L  0(A1,D2.W),D3    1FD4: 2431 2004      '$1 .'           MOVE.L  4(A1,D2.W),D2    1FD8: 2F0C           '/.'             PUSH.L  A4    1FDA: 2F06           '/.'             PUSH.L  D6    1FDC: 2F05           '/.'             PUSH.L  D5    1FDE: 2F3C 8000 8000 '/<....'         PUSH.L  #$80008000    1FE4: 2F02           '/.'             PUSH.L  D2    1FE6: 2F03           '/.'             PUSH.L  D3    1FE8: 2F3C 0000 0001 '/<....'         PUSH.L  #1    1FEE: 2F0B           '/.'             PUSH.L  A3    1FF0: A9A3           '..'             _ReleaseResource ; (theResource:Handle)     1FF2: 6100 EF94         $F88          BSR     SpeedProc    1FF6: 4FEF 001C      'O...'           LEA     28(A7),A7    1FFA: 4CDF 1CF8      'L...'   lab_201 MOVEM.L (A7)+,D3-D7/A2-A4    1FFE: 4A80           'J.'             TST.L   D0    2000: 4E75           'Nu'             RTS     		    2002: 0000 0030      '...0'           ORI.B   #$30,D0    2006: 0000 0000      '....'           ORI.B   #0,D0    200A: 0000 0040      '...@'           ORI.B   #$40,D0    200E: 0000 0000      '....'           ORI.B   #0,D0    2012: 0000 0040      '...@'           ORI.B   #$40,D0    2016: 0000 0020      '... '           ORI.B   #$20,D0    201A: 0000 0040      '...@'           ORI.B   #$40,D0    201E: 0000 00FF      '....'           ORI.B   #$FF,D0    	;    ; ---------  system detection ---------    ; called from $2224    ;    	2022: 203C 0000 A0AD ' <....' sysDetect: MOVE.L  #$A0AD,D0   ; Gestalt    2028: A346           '.F'             _GetTrapAddress newOS; (D0/trapNum:Word):A0\ProcPtr     202A: 2408           '$.'             MOVE.L  A0,D2    202C: 203C 0000 A89F ' <....'         MOVE.L  #$A89F,D0   ; UnimplTrap    2032: A746           '.F'             _GetTrapAddress newTool; (D0/trapNum:Word):A0\ProcPtr     2034: B488           '..'             CMP.L   A0,D2    2036: 6700 0094        $20CC          BEQ     OS_bad    203A: 203C 6D61 6368 ' <mach'         MOVE.L  #'mach',D0    2040: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     2042: 6600 00CC        $2110          BNE     bad_conf      ; If we can't read it, fire general Error Msg    2046: 2008           ' .'             MOVE.L  A0,D0    2048: 2B40 0002      '+@..'           MOVE.L  D0,2(A5)        ; Check for several Mac models which are grouped into 3, each having its own handler routine.     ; 1) Mac II/IIx/IIcx  -- "dirty Macs", not 32bit clean, no PDS    ; -- "Expansion I/O Space" @ 0x51000000, like the SE/30 and the docs also claim	;     "Undecoded address space (No DSACKx)" for everything above it but:	;     -> the C040 installs with an adapter right into the CPU socket in the II/IIx/IIcx (???)    ; -- SE/30 is also "dirty", need mode32 or IIsi ROM in slot	; -- these machines also use the GLUE chip to emulate the VIA2 like the SE/30	        ; 2) IIvx, IIvi, IIvm -- special kind of PDS slot	; -- there's no mentioning of support on the MicroMac page        ; 3) IIsi, IIci           ; -- INTERESTING because the si has the same PDS slot like the SE/30	; -- Uses the RBV (Ram Based Video) controller which also emulates the VIA2        ; 4) LC, LCII, Color Classic    ; -- These share the same LC-PDS slot            204C: 4DFA 2100        $414E          LEA     MacII_handler,A6   ; -- The dirty gang    2050: 0C80 0000 0006 '......'         CMPI.L  #6,D0        ; MacII     2056: 6762             $20BA          BEQ.S   sys_check    2058: 0C80 0000 0007 '......'         CMPI.L  #7,D0        ; MacIIx - we replace this by the SE/30 #9    205E: 675A             $20BA          BEQ.S   sys_check    2060: 0C80 0000 0008 '......'         CMPI.L  #8,D0        ; IIcx    2066: 6752             $20BA          BEQ.S   sys_check        2068: 4DFA 1C9A        $3D04          LEA     V_handler,A6   ; -- The "V" Macs.    206C: 0C80 0000 0030 '.....0'         CMPI.L  #48,D0       ; IIvx    2072: 6746             $20BA          BEQ.S   sys_check    2074: 0C80 0000 002C '.....,'         CMPI.L  #44,D0       ; IIvi    207A: 673E             $20BA          BEQ.S   sys_check    207C: 0C80 0000 002D '.....-'         CMPI.L  #45,D0       ; IIvm    2082: 6736             $20BA          BEQ.S   sys_check        2084: 4DFA 137E        $3404          LEA     IIci_handler,A6   ; -- IIci and IIsi                                                               ; BOTH share the same "Expansion I/O Space" (0x5300 0000)    2088: 0C80 0000 000B '......'         CMPI.L  #11,D0       ; IIci    208E: 672A             $20BA          BEQ.S   sys_check    2090: 0C80 0000 0012 '......'         CMPI.L  #18,D0       ; IIsi     2096: 6722             $20BA          BEQ.S   sys_check        2098: 4DFA 17CA        $3864          LEA     LC_handler,A6    ; -- The LC-PDS family    209C: 0C80 0000 0013 '......'         CMPI.L  #19,D0       ; LC    20A2: 6716             $20BA          BEQ.S   sys_check    20A4: 0C80 0000 0025 '.....%'         CMPI.L  #37,D0       ; LCII    20AA: 670E             $20BA          BEQ.S   sys_check    20AC: 0C80 0000 0031 '.....1'         CMPI.L  #49,D0       ; Color Classic    20B2: 6706             $20BA          BEQ.S   sys_check        ; Any other Model/Gestalt will bring up an error alert-box         20B4: 303C 1B5B      '0<.['           MOVE    #$1B5B,D0    ; "Carrera040 does not support this Macintosh model."    20B8: 6052             $210C          BRA.S   RET_err      ; -> "TST     D0 & RTS"        ; We found a supported model, so keep on going checking for the OS version...        20BA: 203C 7379 7376 ' <sysv' sys_check: MOVE.L  #'sysv',D0    ; Check OS version    20C0: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     20C2: 664C             $2110          BNE.S   bad_conf      ; If we can't read it, fire general Error Msg    20C4: 2008           ' .'             MOVE.L  A0,D0    20C6: 0C40 0605      '.@..'           CMPI    #$605,D0     ; System 6.0.5    20CA: 6C06             $20D2          BGE.S   OS_ok        ; or greater    20CC: 303C 1B5C      '0<.\'   OS_bad: MOVE    #$1B5C,D0    ; "Carrera040 does not work with this version of the operating system."    20D0: 603A             $210C          BRA.S   RET_err      ;    20D2: 203C 766D 2020 ' <vm  ' OS_ok:  MOVE.L  #'vm  ',D0   ; Check for enabled Virtual Memory    20D8: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     20DA: 6634             $2110          BNE.S   bad_conf     ; If we can't read it, fire general Error Msg    20DC: 2008           ' .'             MOVE.L  A0,D0    20DE: 0800 0000      '....'           BTST    #0,D0    20E2: 6706             $20EA          BEQ.S   VM_ok    20E4: 303C 1B5D      '0<.]'           MOVE    #$1B5D,D0    ; "Carrera040 does not work with Virtual Memory turned on.                                                                ; Please turn off Virtual Memory in the Memory control panel and restart your Mac."    20E8: 6022             $210C          BRA.S   RET_err    20EA: 4E96           'N.'    VM_ok:   JSR     (A6)         ; This is the actual HANDLER CALL, been set in $204C-$2098    20EC: 661E             $210C          BNE.S   RET_err    20EE: 102D 0022      '.-."'           MOVE.B  34(A5),D0    ; 34(A5) seems to contanin the Jumper settings at the lowest 3 bits and only three of them are valid:    20F2: 0C00 0007      '....'           CMPI.B  #7,D0        ; 7 -> 111    20F6: 6712             $210A          BEQ.S   RET_ok    20F8: 0C00 0006      '....'           CMPI.B  #6,D0        ; 6 -> 110    20FC: 670C             $210A          BEQ.S   RET_ok    20FE: 0C00 0005      '....'           CMPI.B  #5,D0        ; and 5 -> 101     2102: 6706             $210A          BEQ.S   RET_ok    2104: 303C 1B5E      '0<.^'           MOVE    #$1B5E,D0    ; "Carrera040 does not recognize the jumper settings on the Speedster card.                                                                ; Please check the settings against the manual.    2108: 6002             $210C          BRA.S   RET_err    210A: 7000           'p.'    RET_ok:  MOVEQ   #0,D0        ; clear D0 (no errors)    210C: 4A40           'J@'    RET_err: TST     D0           ; Set the Z-Flag (D0 contains Err-Code) and    210E: 4E75           'Nu'             RTS                  ; return from Subroutine    2110: 303C 1B5A      '0<.Z'  bad_conf:MOVE    #$1B5A,D0    ; "Carrera040 does not support your system configuration."    2114: 60F6             $210C          BRA     RET_err        ; ------ end system detection ---------    ; I'm pretty sure this installes the Motorola FPSP	    2116: 48E7 7FFE      'H...' instFPSP  MOVEM.L D1-D7/A0-A6,-(A7)     211A: 7A02           'z.'             MOVEQ   #2,D5    211C: 203C 6670 7520 ' <fpu '         MOVE.L  #'fpu ',D0    2122: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr 	   ; enum {   ; gestaltFPUType 'fpu ' /* FPU Type */   ; gestaltNoFPU    = 0,  /* no FPU */   ; gestalt68881    = 1,  /* 68881 FPU */   ; gestalt68882    = 2,  /* 68882 FPU */   ; gestalt68040FPU = 3}; /* built-in 68040 FPU &S01 */	    2124: B0FC 0000      '....'           CMPA.W  #0,A0    2128: 6602             $212C          BNE.S   lae_1    212A: 7A00           'z.'             MOVEQ   #0,D5 ; noFPU-flag in D5    212C: 102D 0022      '.-."'    lae_1  MOVE.B  34(A5),D0 ; Jumper-setting    2130: 0C00 0006      '....'           CMPI.B  #6,D0     ; 110  (68040)    2134: 6706             $213C          BEQ.S   lae_2    2136: 0C00 0007      '....'           CMPI.B  #7,D0     ; 111  (68LC040)    213A: 6636             $2172          BNE.S   lae_3		; The FPU in the 68040 was thus made incapable of IEEE transcendental functions, 	; which had been supported by both the 68881 and 68882 and were used by the popular 	; fractal generating software of the time and little else. 	; The Motorola floating point support package (FPSP) emulated these instructions 	; in software under interrupt. As this was an exception handler, heavy use of 	; the transcendental functions caused severe performance penalties.	    213C: 594F           'YO'      lae_2  SUBQ    #4,A7     ; 	    213E: 2F3C 4650 5350 '/<FPSP'         PUSH.L  #'FPSP'  ; If that isn't the Moto FPSP ;-)    2144: 4267           'Bg'             CLR     -(A7)    2146: A81F           '..'             _Get1Resource ; (theType:ResType; ID:INTEGER):Handle     2148: 203C 0000 1B64 ' <...d'         MOVE.L  #$1B64,D0 ; "Carrera040 could not find needed resource. The Carrera040 file may be corrupted."    214E: 2E1F           '..'             POP.L   D7    2150: 6722             $2174          BEQ.S   lae_4    2152: 2047           ' G'             MOVEA.L D7,A0  ; Get RAM to load FPSP into    2154: A025           '.%'             _GetHandleSize ; (A0/h:Handle):D0\Size     2156: 2C00           ',.'             MOVE.L  D0,D6      2158: A51E           '..'             _NewPtr ,SYS  ; (D0/byteCount:Size):A0\Ptr     215A: 6624             $2180          BNE.S   lae_5    215C: 2B48 0024      '+H.$'           MOVE.L  A0,36(A5) ; Store the pointer into A5 world    2160: 2248           '"H'             MOVEA.L A0,A1    2162: 2047           ' G'             MOVEA.L D7,A0    2164: 2050           ' P'             MOVEA.L (A0),A0    2166: 2006           ' .'             MOVE.L  D6,D0  ; Copy that code into RAM    2168: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     216A: 0005 0001      '....'           ORI.B   #1,D5  ; set bit 0    216E: 2F07           '/.'             PUSH.L  D7    2170: A9A3           '..'             _ReleaseResource ; (theResource:Handle)     2172: 7000           'p.'      lae_3  MOVEQ   #0,D0    2174: 1B45 0023      '.E.#'    lae_4  MOVE.B  D5,35(A5) ; The FPU_flag? (0 = noFPU, 2 = FPU)    2178: 4A40           'J@'             TST     D0    217A: 4CDF 7FFE      'L...'           MOVEM.L (A7)+,D1-D7/A0-A6    217E: 4E75           'Nu'             RTS         2180: 203C 0000 1B59 ' <...Y'  lae_5  MOVE.L  #$1B59,D0 ;  STR "Not enough memory to load Carrera040 software."    2186: 60EC             $2174          BRA     lae_4            2188: A11A           '..'     proc32  _GetZone ; :A0\THz     218A: 2F08           '/.'             PUSH.L  A0    218C: 2078 02A6         $2A6          MOVEA.L SysZone,A0    2190: A01B           '..'             _SetZone ; (A0/hz:THz)     2192: 594F           'YO'             SUBQ    #4,A7    2194: 2F3C 5349 434E '/<SICN'         PUSH.L  #'SICN'    219A: 3F3C 0083      '?<..'           PUSH    #$83  ; These are the Menubar Icons (S/M/F)    219E: A81F           '..'             _Get1Resource ; (theType:ResType; ID:INTEGER):Handle     21A0: 2B57 020C      '+W..'           MOVE.L  (A7),$20C(A5)    21A4: A992           '..'             _DetachResource ; (theResource:Handle)     21A6: 594F           'YO'             SUBQ    #4,A7	; We get some strings off the resource fork here...    21A8: 2F3C 5354 5220 '/<STR '         PUSH.L  #'STR '    21AE: 3F3C 0080      '?<..'           PUSH    #$80   ; "This application must run on the 68030 processor, please quit all other 68040 applications and re-run this application."    21B2: A81F           '..'             _Get1Resource ; (theType:ResType; ID:INTEGER):Handle     21B4: 2B57 0236      '+W.6'           MOVE.L  (A7),$236(A5)    21B8: A992           '..'             _DetachResource ; (theResource:Handle)     21BA: 594F           'YO'             SUBQ    #4,A7	    21BC: 2F3C 5354 5220 '/<STR '         PUSH.L  #'STR '    21C2: 3F3C 0081      '?<..'           PUSH    #$81  ; "This application must run on the 68040 processor, please quit all other 68030 applications and re-run this application."    21C6: A81F           '..'             _Get1Resource ; (theType:ResType; ID:INTEGER):Handle     21C8: 2B57 023A      '+W.:'           MOVE.L  (A7),$23A(A5)    21CC: A992           '..'             _DetachResource ; (theResource:Handle)     21CE: 594F           'YO'             SUBQ    #4,A7	    21D0: 2F3C 5354 5220 '/<STR '         PUSH.L  #'STR '    21D6: 3F3C 0082      '?<..'           PUSH    #$82  ; "Some currently running applications may not run on the 68040, please quit other applications before changing speeds."    21DA: A81F           '..'             _Get1Resource ; (theType:ResType; ID:INTEGER):Handle     21DC: 2B57 023E      '+W.>'           MOVE.L  (A7),$23E(A5)    21E0: A992           '..'             _DetachResource ; (theResource:Handle)     21E2: 594F           'YO'             SUBQ    #4,A7	    21E4: 2F3C 5354 5220 '/<STR '         PUSH.L  #'STR '    21EA: 3F3C 0083      '?<..'           PUSH    #$83  ; "Some currently running applications may not run on the 68030, please quit other applications before changing speeds."    21EE: A81F           '..'             _Get1Resource ; (theType:ResType; ID:INTEGER):Handle     21F0: 2B57 0242      '+W.B'           MOVE.L  (A7),$242(A5)    21F4: A992           '..'             _DetachResource ; (theResource:Handle)     21F6: 205F           ' _'             POP.L   A0    21F8: A01B           '..'             _SetZone ; (A0/hz:THz)     21FA: 4E75           'Nu'             RTS   		; This is the very 1st subroutine called, so I cristened it 'main'	    21FC: 48E7 000E      'H...'    main:  MOVEM.L A4-A6,-(A7)    2200: 2E00           '..'             MOVE.L  D0,D7    2202: 203C 0000 031E ' <....'         MOVE.L  #$31E,D0    2208: A71E           '..'             _NewPtr ,CL_SY; (D0/byteCount:Size):A0\Ptr     220A: 4A40           'J@'             TST     D0    220C: 6654             $2262          BNE.S   lae_6    220E: 43FA DE30          $40          LEA     A5wrld,A1    2212: 2288           '".'             MOVE.L  A0,(A1) ; Init A5 world and save into A5wrld    2214: 2A48           '*H'             MOVEA.L A0,A5    2216: 303C A89F      '0<..'           MOVE    #$A89F,D0   ; UnimplTrap    221A: A146           '.F'             _GetTrapAddress     ; (D0/trapNum:Word):A0\ProcPtr     221C: 2B48 029C      '+H..'           MOVE.L  A0,$29C(A5)    2220: 2B48 02A0      '+H..'           MOVE.L  A0,$2A0(A5)    2224: 6100 FDFC        $2022          BSR     sysDetect   ; Jump to Machine detection routine (works on SE/30)    2228: 6638             $2262          BNE.S   lae_6		  ; Check Z-flag, if NOT-ok jump to lae_6 - does not branch on SE/30    222A: 2007           ' .'             MOVE.L  D7,D0    222C: 4EAE 0004      'N...'           JSR     4(A6)       ; We jmp to the subroutine set in the detection routine                                                              ; for the 2nd time (1st done inside sysDetect) this time offset 4...															  ; i.e. we skip the 1st 'BRA' there    2230: 6630             $2262          BNE.S   lae_6       ; -does not branch on SE/30    2232: 6100 FEE2        $2116          BSR     instFPSP      ; Install Motos FPSP    2236: 662A             $2262          BNE.S   lae_6       ; -does not branch on SE/30    2238: 4EAE 0008      'N...'           JSR     8(A6)       ; That's the 3rd call in the handler call cascade (needs hack for MacsBug!)    223C: 6624             $2262          BNE.S   lae_6       ; -does not branch on SE/30    223E: 6100 FF48        $2188          BSR     proc32      ; works (get some RSC strings)    2242: 6100 0796        $29DA          BSR     proc43      ; install traps    2246: 661A             $2262          BNE.S   lae_6       ; -does not branch on SE/30    2248: 4EAE 000C      'N...'           JSR     12(A6)      ; That's the 4th call in the handler call cascade    224C: 6614             $2262          BNE.S   lae_6       ; -does not branch on SE/30    224E: 6100 064E        $289E          BSR     chkATalkVer ; works (check AppleTalk version, returns some value in D0)    2252: 6100 06A0        $28F4          BSR     proc42      ; VIA stuff and such - BOOM    2256: 6100 FCEC        $1F44          BSR     proc29    225A: 4CDF 7000      'L.p.'           MOVEM.L (A7)+,A4-A6    225E: 7000           'p.'             MOVEQ   #0,D0    2260: 4E75           'Nu'             RTS        	      ; End main    2262: 2F00           '/.'      lae_6  PUSH.L  D0    2264: 41FA DDDA          $40          LEA     A5wrld,A0    2268: 2010           ' .'             MOVE.L  (A0),D0    226A: 6728             $2294          BEQ.S   lae_10    226C: 2A40           '*@'             MOVEA.L D0,A5    226E: 202D 0030      ' -.0'           MOVE.L  48(A5),D0    2272: 6706             $227A          BEQ.S   lae_7    2274: 2040           ' @'             MOVEA.L D0,A0    2276: 6100 FCA4        $1F1C          BSR     proc28    227A: 202D 0054      ' -.T'    lae_7  MOVE.L  84(A5),D0    227E: 6706             $2286          BEQ.S   lae_8    2280: 2040           ' @'             MOVEA.L D0,A0    2282: 6100 FC98        $1F1C          BSR     proc28    2286: 202D 0024      ' -.$'    lae_8  MOVE.L  36(A5),D0    228A: 6704             $2290          BEQ.S   lae_9    228C: 2040           ' @'             MOVEA.L D0,A0    228E: A01F           '..'             _DisposPtr ; (A0/p:Ptr)     2290: 204D           ' M'      lae_9  MOVEA.L A5,A0    2292: A01F           '..'             _DisposPtr ; (A0/p:Ptr)     2294: 7200           'r.'      lae_10 MOVEQ   #0,D1    2296: 201F           ' .'             POP.L   D0    2298: 4CDF 7000      'L.p.'           MOVEM.L (A7)+,A4-A6    229C: 4A40           'J@'             TST     D0    229E: 4E75           'Nu'             RTS     		; MacsBug something...???    22A0: 48E7 FFFC      'H...'    proc34 MOVEM.L D0-D7/A0-A5,-(A7)    22A4: 554F           'UO'             SUBQ    #2,A7    22A6: 4EBA 2058        $4300          JSR     GetSysWDRefNum ; Get system Working Directory ref num    22AA: 321F           '2.'             POP     D1    22AC: 7027           'p'''            MOVEQ   #39,D0    22AE: 4267           'Bg'      lae_11 CLR     -(A7)    22B0: 51C8 FFFC        $22AE          DBRA    D0,lae_11    22B4: 204F           ' O'             MOVEA.L A7,A0    22B6: A014           '..'             _GetVol ; (A0|IOPB:ParamBlockRec):D0\OSErr     22B8: 3E28 0016      '>(..'           MOVE    ioVRefNum(A0),D7    22BC: 3141 0016      '1A..'           MOVE    D1,ioVRefNum(A0)    22C0: A015           '..'             _SetVol ; (A0|IOPB:ParamBlockRec):D0\OSErr     22C2: 4268 0016      'Bh..'           CLR     ioVRefNum(A0)    22C6: 43FA 0088        $2350          LEA     data73,A1    22CA: 2149 0012      '!I..'           MOVE.L  A1,ioNamePtr(A0)    22CE: A000           '..'             _Open   ; (A0|IOPB:ParamBlockRec):D0\OSErr     22D0: 666C             $233E          BNE.S   lae_13    22D2: 48E7 E0C0      'H...'           MOVEM.L D0-D2/A0-A1,-(A7)    22D6: 3F3C 0001      '?<..'           PUSH    #1    22DA: A9C8           '..'             _SysBeep ; (duration:INTEGER)     22DC: 4CDF 0307      'L...'           MOVEM.L (A7)+,D0-D2/A0-A1    22E0: A011           '..'             _GetEOF ; (A0|IOPB:ParamBlockRec):D0\OSErr     22E2: 2428 001C      '$(..'           MOVE.L  ioMisc(A0),D2    22E6: 7240           'r@'             MOVEQ   #64,D1    22E8: E789           '..'             LSL.L   #3,D1    22EA: 9481           '..'             SUB.L   D1,D2    22EC: 2478 010C         $10C          MOVEA.L BufPtr,A2    22F0: 95C2           '..'             SUBA.L  D2,A2    22F2: 214A 0020      '!J. '           MOVE.L  A2,ioBuffer(A0)    22F6: 2142 0024      '!B.$'           MOVE.L  D2,ioReqCount(A0)    22FA: 317C 0001 002C '1|...,'         MOVE    #1,ioPosMode(A0)    2300: 2141 002E      '!A..'           MOVE.L  D1,ioPosOffset(A0)    2304: A002           '..'             _Read   ; (A0|IOPB:ParamBlockRec):D0\OSErr     2306: 3628 0010      '6(..'           MOVE    ioResult(A0),D3    230A: A001           '..'             _Close  ; (A0|IOPB:ParamBlockRec):D0\OSErr     230C: 4A43           'JC'             TST     D3    230E: 662E             $233E          BNE.S   lae_13    2310: 48E7 E0C0      'H...'           MOVEM.L D0-D2/A0-A1,-(A7)    2314: 3F3C 0001      '?<..'           PUSH    #1    2318: A9C8           '..'             _SysBeep ; (duration:INTEGER)     231A: 4CDF 0307      'L...'           MOVEM.L (A7)+,D0-D2/A0-A1    231E: 41F8 0914         $914          LEA     CurApName+4,A0    2322: 600C             $2330          BRA.S   lae_12    2324: 4E71           'Nq'             NOP         2326: 4E71           'Nq'             NOP         2328: 6014             $233E          BRA.S   lae_13    232A: 4E71           'Nq'             NOP         232C: 4E71           'Nq'             NOP         232E: 600E             $233E          BRA.S   lae_13    2330: 48E7 E0C0      'H...'   lae_12  MOVEM.L D0-D2/A0-A1,-(A7)    2334: 3F3C 0001      '?<..'           PUSH    #1    2338: A9C8           '..'             _SysBeep ; (duration:INTEGER)     233A: 4CDF 0307      'L...'           MOVEM.L (A7)+,D0-D2/A0-A1    233E: 204F           ' O'     lae_13  MOVEA.L A7,A0    2340: 3147 0016      '1G..'           MOVE    D7,ioVRefNum(A0)    2344: A015           '..'             _SetVol ; (A0|IOPB:ParamBlockRec):D0\OSErr     2346: 4FEF 0050      'O..P'           LEA     80(A7),A7    234A: 4CDF 3FFF      'L.?.'           MOVEM.L (A7)+,D0-D7/A0-A5    234E: 4E75           'Nu'             RTS         2350: 074D 6163      '.Mac'   data73  DC.B 'Macsbug'    2354¥ 7362           'sb'             ILL*        2356¥ 7567           'ug'             ILL*    		; Wild guess: This is the Sound-issue fixer	    2358: 48E7 1F3E      'H..>'   proc35  MOVEM.L D3-D7/A2-A6,-(A7)    235C: 48E7 E0C0      'H...'           MOVEM.L D0-D2/A0-A1,-(A7)    2360: 487A 0182        $24E4          PEA     data79    2364: 4EBA 1EB6        $421C          JSR     proc46  ; returns an ID for the fitting code from the 'sift' ressource    2368: 584F           'XO'             ADDQ    #4,A7    236A: 4CDF 0307      'L...'           MOVEM.L (A7)+,D0-D2/A0-A1    236E: 594F           'YO'             SUBQ    #4,A7    2370: 203C 000C 0008 ' <....'         MOVE.L  #$C0008,D0    2376: A800           '..'             _SoundDispatch ; (selector:INTEGER)     2378: 0C9F 0300 0000 '......'         CMPI.L  #$3000000,(A7)+    237E: 652C             $23AC          BLO.S   lae_14    2380: 3038 015A         $15A          MOVE    SysVersion,D0    2384: 0C40 0750      '.@.P'           CMPI    #$750,D0    2388: 6C22             $23AC          BGE.S   lae_14    238A: 2F3C 6173 6320 '/<asc '         PUSH.L  #'asc '    2390: 2F3C 7364 6576 '/<sdev'         PUSH.L  #'sdev'    2396: 4EBA 1DC6        $415E          JSR     findthing    239A: 504F           'PO'             ADDQ    #8,A7    239C: 4A80           'J.'             TST.L   D0    239E: 670C             $23AC          BEQ.S   lae_14    23A0: 2F00           '/.'             PUSH.L  D0    23A2: 487A 0140        $24E4          PEA     data79    23A6: 4EBA 009A        $2442          JSR     proc36    23AA: 504F           'PO'             ADDQ    #8,A7    23AC: 303C A81F      '0<..'           MOVE    #$A81F,D0   ; Get1Resource    23B0: A746           '.F'             _GetTrapAddress newTool; (D0/trapNum:Word):A0\ProcPtr     23B2: 43FA 012C        $24E0          LEA     data78,A1    23B6: 2288           '".'             MOVE.L  A0,(A1)    23B8: 41FA 012E        $24E8          LEA     lae_23,A0    23BC: 43FA 0024        $23E2          LEA     data74,A1    23C0: 91C9           '..'             SUBA.L  A1,A0    23C2: 2208           '".'             MOVE.L  A0,D1    23C4: 2001           ' .'             MOVE.L  D1,D0    23C6: A51E           '..'             _NewPtr ,SYS  ; (D0/byteCount:Size):A0\Ptr     23C8: 2008           ' .'             MOVE.L  A0,D0    23CA: 6700 011C        $24E8          BEQ     lae_23    23CE: C149           '.I'             EXG     A1,A0    23D0: 2001           ' .'             MOVE.L  D1,D0    23D2: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     23D4: 2049           ' I'             MOVEA.L A1,A0    23D6: 303C A81F      '0<..'           MOVE    #$A81F,D0   ; Get1Resource    23DA: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word)     23DC: 7001           'p.'             MOVEQ   #1,D0    23DE: 6000 0108        $24E8          BRA     lae_23    23E2: 0CAF 7369 6674 '..sift'         CMPI.L  #'sift',6(A7)    23EA: 664E             $243A          BNE.S   lae_18    23EC: 0C6F BF4D 0004 '.o.M..'         CMPI    #$BF4D,4(A7) ; 48973    23F2: 6708             $23FC          BEQ.S   lae_15    23F4: 0C6F BF50 0004 '.o.P..'         CMPI    #$BF50,4(A7) ; 48976    23FA: 663E             $243A          BNE.S   lae_18    23FC: 2F08           '/.'             PUSH.L  A0    23FE: 41FA 0040        $2440          LEA     data76,A0    2402: 4A10           'J.'             TST.B   (A0)    2404: 6704             $240A          BEQ.S   lae_16    2406: 205F           ' _'             POP.L   A0    2408: 6030             $243A          BRA.S   lae_18    240A: 50D0           'P.'             ST      (A0)    240C: 205F           ' _'             POP.L   A0    240E: 42A7           'B.'             CLR.L   -(A7)    2410: 2F3C 7369 6674 '/<sift'         PUSH.L  #'sift'    2416: 3F3C BF4D      '?<.M'           PUSH    #$BF4D ; 48973    241A: 487A 0008        $2424          PEA     data75    241E: 2F3A 00C0        $24E0          PUSH.L  data78    2422: 4E75           'Nu'             RTS     	    2424: 4A97           'J.'             TST.L   (A7)    2426: 6708             $2430          BEQ.S   lae_17    2428: 487A 00BA        $24E4          PEA     data79    242C: 6114             $2442          BSR.S   proc36    242E: 584F           'XO'             ADDQ    #4,A7    2430: 2E88           '..'             MOVE.L  A0,(A7)    2432: 41FA 000C        $2440          LEA     data76,A0    2436: 51D0           'Q.'             SF      (A0)    2438: 205F           ' _'             POP.L   A0    243A: 2F3A 00A4        $24E0          PUSH.L  data78    243E: 4E75           'Nu'             RTS         2440: 0000           '..'             DC.W   0	    2442: 4E56 FFB8      'NV..'           LINK    A6,#-$48    2446: 48E7 FCF8      'H...'           MOVEM.L D0-D5/A0-A4,-(A7)    244A: 206E 0008      ' n..'           MOVEA.L 8(A6),A0    244E: 2650           '&P'             MOVEA.L (A0),A3    2450: 554F           'UO'             SUBQ    #2,A7    2452: A994           '..'             _CurResFile ; :RefNum     2454: 3617           '6.'             MOVE    (A7),D3    2456: 42A7           'B.'             CLR.L   -(A7)    2458: 2F13           '/.'             PUSH.L  (A3)    245A: 486E FFB8      'Hn..'           PEA     -72(A6)    245E: 486E FFFE      'Hn..'           PEA     -2(A6)    2462: 7003           'p.'             MOVEQ   #3,D0    2464: A823           '.#'             _AliasMgr ; (D0/selector:INTEGER)     2466: 4A5F           'J_'             TST     (A7)+    2468: 666A             $24D4          BNE.S   lae_22    246A: 4227           'B'''            CLR.B   -(A7)    246C: A99B           '..'             _SetResLoad ; (AutoLoad:BOOLEAN)     246E: 554F           'UO'             SUBQ    #2,A7    2470: 486E FFB8      'Hn..'           PEA     -72(A6)    2474: 4227           'B'''            CLR.B   -(A7)    2476: 700D           'p.'             MOVEQ   #13,D0    2478: AA52           '.R'             _HighLvlFSDisptch ; (D0/selector:INTEGER)     247A: 381F           '8.'             POP     D4    247C: 1F3C 0001      '.<..'           PUSH.B  #1    2480: A99B           '..'             _SetResLoad ; (AutoLoad:BOOLEAN)     2482: 0C44 FFFF      '.D..'           CMPI    #-1,D4    2486: 674C             $24D4          BEQ.S   lae_22    2488: 3F04           '?.'             PUSH    D4    248A: A998           '..'             _UseResFile ; (frefNum:RefNum)     248C: 42A7           'B.'             CLR.L   -(A7)    248E: 2F3C 7369 6674 '/<sift'         PUSH.L  #'sift'    2494: 3F2B 0004      '?+..'           PUSH    4(A3)    2498: 487A 0008        $24A2          PEA     data77    249C: 2F3A 0042        $24E0          PUSH.L  data78    24A0: 4E75           'Nu'             RTS         24A2: 285F           '(_'             POP.L   A4    24A4: 200C           ' .'             MOVE.L  A4,D0    24A6: 6728             $24D0          BEQ.S   lae_21    24A8: 204C           ' L'             MOVEA.L A4,A0    24AA: A025           '.%'             _GetHandleSize ; (A0/h:Handle):D0\Size     24AC: 2A00           '*.'             MOVE.L  D0,D5    24AE: 246E 000C      '$n..'           MOVEA.L 12(A6),A2    24B2: 4A92           'J.'             TST.L   (A2)    24B4: 6604             $24BA          BNE.S   lae_19    24B6: 2F0A           '/.'             PUSH.L  A2    24B8: A9A2           '..'             _LoadResource ; (theResource:Handle)     24BA: 204A           ' J'     lae_19: MOVEA.L A2,A0    24BC: A025           '.%'             _GetHandleSize ; (A0/h:Handle):D0\Size     24BE: BA80           '..'             CMP.L   D0,D5    24C0: 6706             $24C8          BEQ.S   lae_20    24C2: 204A           ' J'             MOVEA.L A2,A0    24C4: 2005           ' .'             MOVE.L  D5,D0    24C6: A024           '.$'             _SetHandleSize ; (A0/h:Handle; D0/newSize:Size)     24C8: 2054           ' T'     lae_20: MOVEA.L (A4),A0    24CA: 2252           '"R'             MOVEA.L (A2),A1    24CC: 2005           ' .'             MOVE.L  D5,D0    24CE: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     24D0: 3F04           '?.'     lae_21: PUSH    D4    24D2: A99A           '..'             _CloseResFile ; (refNum:RefNum)     24D4: 3F03           '?.'     lae_22: PUSH    D3    24D6: A998           '..'             _UseResFile ; (frefNum:RefNum)     24D8: 4CDF 1F3F      'L..?'           MOVEM.L (A7)+,D0-D5/A0-A4    24DC: 4E5E           'N^'             UNLK    A6    24DE: 4E75           'Nu'             RTS     		; That's DATA	    24E0: 0000 0000      '....'  data78   DC.L    #$00000000    24E4: 0000 0000      '....'  data79   DC.L    #$00000000	    24E8: 4A80           'J.'     lae_23  TST.L   D0    24EA: 6702             $24EE          BEQ.S   lae_24    24EC: 7000           'p.'             MOVEQ   #0,D0    24EE: 4CDF 7CF8      'L.|.'  lae_24:  MOVEM.L (A7)+,D3-D7/A2-A6    24F2: 4E75           'Nu'             RTS     	    24F4: 48E7 1F38      'H..8'   proc37  MOVEM.L D3-D7/A2-A4,-(A7)    24F8: 40E7           '@.'             MOVE    SR,-(A7)    24FA: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    24FE: 2F38 0064      '/8.d'           PUSH.L  $64    2502: 3F38 0B24         $B24          PUSH    TimeSCSIDB    2506: 3F38 0CEA         $CEA          PUSH    TimeVIADB    250A: 2078 0CEC         $CEC          MOVEA.L VIA2orRBVorOSs,A0    250E: 1F28 1C12      '.(..'           PUSH.B  $1C12(A0)    2512: 117C 007F 1C12 '.|....'         MOVE.B  #$7F,$1C12(A0)    2518: 2278 01D4         $1D4          MOVEA.L VIA,A1    251C: 1F29 1C00      '.)..'           PUSH.B  $1C00(A1)    2520: 137C 007F 1C00 '.|....'         MOVE.B  #$7F,$1C00(A1)    2526: 08A9 0005 1600 '......'         BCLR    #5,$1600(A1)    252C: 137C 00FF 1200 '.|....'         MOVE.B  #$FF,$1200(A1)    2532: 137C 00A0 1C00 '.|....'         MOVE.B  #$A0,$1C00(A1)    2538: 720C           'r.'             MOVEQ   #12,D1    253A: 7403           't.'             MOVEQ   #3,D2    253C: 264F           '&O'             MOVEA.L A7,A3    253E: 41FA 0094        $25D4          LEA     data83,A0    2542: 21C8 0064      '!..d'           MOVE.L  A0,$64    2546: 49FA 0094        $25DC          LEA     data84,A4    254A: 204C           ' L'     lae_25  MOVEA.L A4,A0    254C: D0D4           '..'             ADDA.W  (A4),A0    254E: 7002           'p.'             MOVEQ   #2,D0    2550: 45FA 0004        $2556          LEA     data81,A2    2554: 4ED0           'N.'             JMP     (A0)    2556: 204C           ' L'     data81  MOVEA.L A4,A0    2558: D0DC           '..'             ADDA.W  (A4)+,A0    255A: 70FF           'p.'             MOVEQ   #-1,D0    255C: 45FA 0008        $2566          LEA     data82,A2    2560: 027C F8FF      '.|..'           ANDI    #$F8FF,SR    2564: 4ED0           'N.'             JMP     (A0)    2566: 4640           'F@'     data82  NOT     D0    2568: 305C           '0\'             MOVEA   (A4)+,A0    256A: 3080           '0.'             MOVE    D0,(A0)    256C: 4A54           'JT'             TST     (A4)    256E: 66DA             $254A          BNE     lae_25    2570: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    2574: 2278 01D4         $1D4          MOVEA.L VIA,A1    2578: 101F           '..'             POP.B   D0    257A: 0000 0080      '....'           ORI.B   #$80,D0    257E: 1340 1C00      '.@..'           MOVE.B  D0,$1C00(A1)    2582: 2078 0CEC         $CEC          MOVEA.L VIA2orRBVorOSs,A0    2586: 101F           '..'             POP.B   D0    2588: 321F           '2.'             POP     D1    258A: 341F           '4.'             POP     D2    258C: 0CAD 0000 0008 '......'         CMPI.L  #8,2(A5)    2594: 671A             $25B0          BEQ.S   lae_26    2596: 0CAD 0000 0007 '......'         CMPI.L  #7,2(A5)    259E: 6710             $25B0          BEQ.S   lae_26    25A0: 0CAD 0000 0006 '......'         CMPI.L  #6,2(A5)    25A8: 6706             $25B0          BEQ.S   lae_26    25AA: 0000 007F      '....'           ORI.B   #$7F,D0    25AE: 6010             $25C0          BRA.S   lae_27    25B0: 31C1 0CEA         $CEA  lae_26  MOVE    D1,TimeVIADB    25B4: 3238 0B24         $B24          MOVE    TimeSCSIDB,D1    25B8: 31C1 0DA6         $DA6          MOVE    D1,OldTimeSCSIDB    25BC: 31C2 0B24         $B24          MOVE    D2,TimeSCSIDB    25C0: 0000 0080      '....'   lae_27  ORI.B   #$80,D0    25C4: 1140 1C12      '.@..'           MOVE.B  D0,$1C12(A0)    25C8: 21DF 0064      '!..d'           POP.L   $64    25CC: 46DF           'F.'             MOVE    (A7)+,SR    25CE: 4CDF 1CF8      'L...'           MOVEM.L (A7)+,D3-D7/A2-A4    25D2: 4E75           'Nu'             RTS           25D4: 4A29 1000      'J)..'    data83 TST.B   $1000(A1)    25D8: 2E4B           '.K'             MOVEA.L A3,A7    25DA: 4ED2           'N.'             JMP     (A2)	    25DC: 0012 0D00      '....'    data84 ORI.B   #$D00,(A2)    25E0: 001C 0D02      '....'           ORI.B   #$D02,(A4)+    25E4: 002E 0B24 0042 '...$.B'         ORI.B   #$B24,66(A6)    25EA: 0CEA 0000 1341 '.....A'         CAS     D0,D0,$1341(A2)    25F0: 1000           '..'             MOVE.B  D0,D0    25F2: 1342 1200      '.B..'           MOVE.B  D2,$1200(A1)    25F6: 51C8 FFFE        $25F6          DBRA    D0,lae_28    25FA: 4ED2           'N.'             JMP     (A2)    25FC: 2078 01D8         $1D8          MOVEA.L SccRd,A0    2600: 1341 1000      '.A..'           MOVE.B  D1,$1000(A1)    2604: 1342 1200      '.B..'           MOVE.B  D2,$1200(A1)	2608: 0810 0000      '....'    lae_29 BTST    #0,(A0)    260C: 51C8 FFFA        $2608          DBRA    D0,lae_29    2610: 4ED2           'N.'             JMP     (A2)	2612: 2078 0C00         $C00          MOVEA.L SCSIBase,A0    2616: 1341 1000      '.A..'           MOVE.B  D1,$1000(A1)    261A: 1342 1200      '.B..'           MOVE.B  D2,$1200(A1)	261E: 0828 0000 0040 '.(...@'  lae_30 BTST    #0,64(A0)    2624: 51C8 FFF8        $261E          DBRA    D0,lae_30    2628: 4ED2           'N.'             JMP     (A2)    262A: 41E9 1C00      'A...'           LEA     $1C00(A1),A0    262E: 1341 1000      '.A..'           MOVE.B  D1,$1000(A1)    2632: 1342 1200      '.B..'           MOVE.B  D2,$1200(A1)    2636: 0810 0000      '....'    lae_31 BTST    #0,(A0)    263A: 51C8 FFFA        $2636          DBRA    D0,lae_31    263E: 4ED2           'N.'             JMP     (A2)	    2640: 48E7 1300      'H...'   proc38  MOVEM.L D3/D6-D7,-(A7)    2644: 2F08           '/.'             PUSH.L  A0    2646: 6100 00A6        $26EE          BSR     proc39    264A: 7E00           '~.'             MOVEQ   #0,D7    264C: 3E00           '>.'             MOVE    D0,D7    264E: 6100 016C        $27BC          BSR     proc40    2652: 7C00           '|.'             MOVEQ   #0,D6    2654: 3C00           '<.'             MOVE    D0,D6    2656: 225F           '"_'             POP.L   A1    2658: 40E7           '@.'             MOVE    SR,-(A7)    265A: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    265E: 027C FEFF      '.|..'           ANDI    #$FEFF,SR    2662: 7014           'p.'             MOVEQ   #20,D0    2664: 7200           'r.'             MOVEQ   #0,D1    2666: 3207           '2.'             MOVE    D7,D1    2668: 82FC 0064      '...d'           DIVU    #$64,D1    266C: 41FA 0030        $269E          LEA     data85,A0    2670: 3618           '6.'             MOVE    (A0)+,D3    2672: 7400           't.'             MOVEQ   #0,D2    2674: 1418           '..'             MOVE.B  (A0)+,D2    2676: 84C1           '..'             DIVU    D1,D2    2678: 9642           '.B'             SUB     D2,D3    267A: 4A18           'J.'             TST.B   (A0)+    267C: 6B14             $2692          BMI.S   lae_35    267E: C6C7           '..'             MULU    D7,D3    2680: 86FC 03E8      '....'           DIVU    #$3E8,D3    2684: 5343           'SC'             SUBQ    #1,D3    2686: 6A02             $268A          BPL.S   lae_34    2688: 7600           'v.'             MOVEQ   #0,D3    268A: 32C3           '2.'             MOVE    D3,(A1)+    268C: 5540           'U@'             SUBQ    #2,D0    268E: 66E0             $2670          BNE     lae_32    2690: 6004             $2696          BRA.S   lae_36    2692: C6C6           '..'             MULU    D6,D3    2694: 60EA             $2680          BRA     lae_33    2696: 46DF           'F.'             MOVE    (A7)+,SR    2698: 4CDF 00C8      'L...'           MOVEM.L (A7)+,D3/D6-D7    269C: 4E75           'Nu'             RTS     			; What's that???    269E: 0073 3A00 0064 '.s:..d'  data85 ORI     #$3A00,$64(A3,D0.W)    26A4¥ 00FF 00C8      '....'           CMP2.B  ,D0    26A8¥ 00FF 01F4      '....'           CMP2.B  ,D0    26AC¥ 00FF 0190      '....'           CMP2.B  ,D0    26B0: 72FF           'r.'             MOVEQ   #-1,D1    26B2: 0046 2C00      '.F,.'           ORI     #$2C00,D6    26B6: 001E 0000      '....'           ORI.B   #0,(A6)+    26BA: 0064 5A00      '.dZ.'           ORI     #$5A00,-(A4)    26BE¥ 003C FF00      '.<..'           ORI.B   #$FF00,CCR    26C2¥ 000A 4000      '..@.'           ORI.B   #$4000,A2    26C6: 4A09           'J.'             TST.B   A1    26C8¥ 000A 1000      '....'           ORI.B   #$1000,A2    26CC: 080F 0101      '....'           BTST    #$101,A7    26D0: 0000           '..'             DC.W   0    26D2: 0C41 0016      '.A..'           CMPI    #22,D1    26D6: 6D1C             $26F4          BLT.S   lae_37    26D8: 2009           ' .'             MOVE.L  A1,D0    26DA: 47FA 001C        $26F8          LEA     data86,A3    26DE: 22DB           '".'             MOVE.L  (A3)+,(A1)+    26E0: 22DB           '".'             MOVE.L  (A3)+,(A1)+    26E2: 4299           'B.'             CLR.L   (A1)+    26E4: 32DB           '2.'             MOVE    (A3)+,(A1)+    26E6: 4299           'B.'             CLR.L   (A1)+    26E8: 4219           'B.'             CLR.B   (A1)+    26EA: 12D2           '..'             MOVE.B  (A2),(A1)+    26EC: 32DB           '2.'             MOVE    (A3)+,(A1)+        26EE: 2078 02AE         $2AE   proc39 MOVEA.L RomBase,A0    26F2: 0C28 0075 0009 '.(.u..'         CMPI.B  #$75,9(A0) ; Checks for ROM version lowbyte. 75 is FatMac and Plus. Why??    26F8: 651E             $2718          BLO.S   lae_38    26FA: 9EFC 000E      '....'           SUBA.W  #14,A7    26FE: 204F           ' O'             MOVEA.L A7,A0    2700: 42A8 000A      'B...'           CLR.L   10(A0)    2704: 317C FFFF 0004 '1|....'         MOVE    #$FFFF,4(A0)    270A: A058           '.X'             _InsTime ; (A0/tmTaskPtr:TM_QElemPtr)     270C: 1028 0004      '.(..'           MOVE.B  4(A0),D0    2710: 6A0C             $271E          BPL.S   lae_39    2712: A059           '.Y'             _RmvTime ; (A0/tmTaskPtr:TM_QElemPtr)     2714: 4FEF 000E      'O...'           LEA     14(A7),A7    2718: 3038 0D00         $D00  lae_38  MOVE    TimeDBRA,D0    271C: 4E75           'Nu'             RTS         271E: A059           '.Y'     lae_39  _RmvTime ; (A0/tmTaskPtr:TM_QElemPtr)     2720: 4FEF 000E      'O...'           LEA     14(A7),A7    2724: 48E7 0F00      'H...'           MOVEM.L D4-D7,-(A7)    2728: 7006           'p.'             MOVEQ   #6,D0    272A: 4267           'Bg'     lae_40  CLR     -(A7)    272C: 51C8 FFFC        $272A          DBRA    D0,lae_40    2730: 7809           'x.'             MOVEQ   #9,D4    2732: 2A3C 0000 FFFF '*<....'         MOVE.L  #$FFFF,D5    2738: 2E3C 0393 8700 '.<....' lae_41  MOVE.L  #$3938700,D7    273E: 204F           ' O'             MOVEA.L A7,A0    2740: 40E7           '@.'             MOVE    SR,-(A7)    2742: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    2746: 027C FEFF      '.|..'           ANDI    #$FEFF,SR    274A: A058           '.X'             _InsTime ; (A0/tmTaskPtr:TM_QElemPtr)     274C: 2C07           ',.'             MOVE.L  D7,D6    274E: 2007           ' .'             MOVE.L  D7,D0    2750: 4480           'D.'             NEG.L   D0    2752: A05A           '.Z'             _PrimeTime ; (A0/tmTaskPtr:TM_QElemPtr; D0/count:LongInt)     2754: A059           '.Y'             _RmvTime ; (A0/tmTaskPtr:TM_QElemPtr)     2756: 46DF           'F.'             MOVE    (A7)+,SR    2758: DEA8 000A      '....'           ADD.L   10(A0),D7    275C: 204F           ' O'             MOVEA.L A7,A0    275E: A058           '.X'             _InsTime ; (A0/tmTaskPtr:TM_QElemPtr)     2760: 40E7           '@.'             MOVE    SR,-(A7)    2762: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (enable Interrupts)    2766: 027C FEFF      '.|..'           ANDI    #$FEFF,SR    276A: 2006           ' .'             MOVE.L  D6,D0    276C: 4480           'D.'             NEG.L   D0    276E: A05A           '.Z'             _PrimeTime ; (A0/tmTaskPtr:TM_QElemPtr; D0/count:LongInt)     2770: 2048           ' H'             MOVEA.L A0,A0    2772: 3038 0D00         $D00          MOVE    TimeDBRA,D0  ; Huh? 4 times looping - is this a timing benchmark?    2776: 51C8 FFFE        $2776   lae_42 DBRA    D0,lae_42    277A: 3038 0D00         $D00          MOVE    TimeDBRA,D0    277E: 51C8 FFFE        $277E   lae_43 DBRA    D0,lae_43    2782: 3038 0D00         $D00          MOVE    TimeDBRA,D0    2786: 51C8 FFFE        $2786   lae_44 DBRA    D0,lae_44    278A: 3038 0D00         $D00          MOVE    TimeDBRA,D0    278E: 51C8 FFFE        $278E   lae_45 DBRA    D0,lae_45    2792: A059           '.Y'             _RmvTime ; (A0/tmTaskPtr:TM_QElemPtr)     2794: 46DF           'F.'             MOVE    (A7)+,SR    2796: DCA8 000A      '....'           ADD.L   10(A0),D6    279A: 9C87           '..'             SUB.L   D7,D6    279C: BA86           '..'             CMP.L   D6,D5    279E: 6502             $27A2          BLO.S   lae_46    27A0: 2A06           '*.'             MOVE.L  D6,D5    27A2: 51CC FF94        $2738          DBRA    D4,lae_41    27A6: 3238 0D00         $D00          MOVE    TimeDBRA,D1    27AA: C2FC 0FA0      '....'           MULU    #$FA0,D1    27AE: 82C5           '..'             DIVU    D5,D1    27B0: 3001           '0.'             MOVE    D1,D0    27B2: 4FEF 000E      'O...'           LEA     14(A7),A7    27B6: 4CDF 00F0      'L...'           MOVEM.L (A7)+,D4-D7    27BA: 4E75           'Nu'             RTS                 27BC: 2078 02AE         $2AE   proc40 MOVEA.L RomBase,A0    27C0: 0C28 0075 0009 '.(.u..'         CMPI.B  #$75,9(A0) ; Checks for ROM version lowbyte. 75 is FatMac and Plus. Why??    27C6: 651E             $27E6          BLO.S   lae_47    27C8: 9EFC 000E      '....'           SUBA.W  #14,A7    27CC: 204F           ' O'             MOVEA.L A7,A0    27CE: 42A8 000A      'B...'           CLR.L   10(A0)    27D2: 317C FFFF 0004 '1|....'         MOVE    #$FFFF,4(A0)    27D8: A058           '.X'             _InsTime ; (A0/tmTaskPtr:TM_QElemPtr)     27DA: 1028 0004      '.(..'           MOVE.B  4(A0),D0    27DE: 6A0C             $27EC          BPL.S   lae_48    27E0: A059           '.Y'             _RmvTime ; (A0/tmTaskPtr:TM_QElemPtr)     27E2: 4FEF 000E      'O...'           LEA     14(A7),A7    27E6: 3038 0D02         $D02   lae_47 MOVE    TimeSCCDB,D0    27EA: 4E75           'Nu'             RTS           27EC: A059           '.Y'      lae_48 _RmvTime ; (A0/tmTaskPtr:TM_QElemPtr)     27EE: 4FEF 000E      'O...'           LEA     14(A7),A7    27F2: 48E7 0F00      'H...'           MOVEM.L D4-D7,-(A7)    27F6: 7006           'p.'             MOVEQ   #6,D0    27F8: 4267           'Bg'     lae_49  CLR     -(A7)    27FA: 51C8 FFFC        $27F8          DBRA    D0,lae_49    27FE: 7809           'x.'             MOVEQ   #9,D4    2800: 2A3C 0000 FFFF '*<....'         MOVE.L  #$FFFF,D5    2806: 2E3C 0393 8700 '.<....' lae_50  MOVE.L  #$3938700,D7    280C: 204F           ' O'             MOVEA.L A7,A0    280E: 40E7           '@.'             MOVE    SR,-(A7)    2810: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    2814: 027C FEFF      '.|..'           ANDI    #$FEFF,SR    2818: A058           '.X'             _InsTime ; (A0/tmTaskPtr:TM_QElemPtr)     281A: 2C07           ',.'             MOVE.L  D7,D6    281C: 2007           ' .'             MOVE.L  D7,D0    281E: 4480           'D.'             NEG.L   D0    2820: A05A           '.Z'             _PrimeTime ; (A0/tmTaskPtr:TM_QElemPtr; D0/count:LongInt)     2822: A059           '.Y'             _RmvTime ; (A0/tmTaskPtr:TM_QElemPtr)     2824: 46DF           'F.'             MOVE    (A7)+,SR    2826: DEA8 000A      '....'           ADD.L   10(A0),D7    282A: 204F           ' O'             MOVEA.L A7,A0    282C: A058           '.X'             _InsTime ; (A0/tmTaskPtr:TM_QElemPtr)     282E: 40E7           '@.'             MOVE    SR,-(A7)    2830: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    2834: 027C FEFF      '.|..'           ANDI    #$FEFF,SR    2838: 2006           ' .'             MOVE.L  D6,D0    283A: 4480           'D.'             NEG.L   D0    283C: A05A           '.Z'             _PrimeTime ; (A0/tmTaskPtr:TM_QElemPtr; D0/count:LongInt)     283E: 3038 0D02         $D02          MOVE    TimeSCCDB,D0    2842: 2278 01D8         $1D8          MOVEA.L SccRd,A1    2846: 2048           ' H'             MOVEA.L A0,A0    2848: 0811 0000      '....'           BTST    #0,(A1)    284C: 51C8 FFFA        $2848          DBRA    D0,lae_51    2850: 3038 0D02         $D02          MOVE    TimeSCCDB,D0    2854: 0811 0000      '....'   lae_52  BTST    #0,(A1)    2858: 51C8 FFFA        $2854          DBRA    D0,lae_52    285C: 3038 0D02         $D02          MOVE    TimeSCCDB,D0    2860: 0811 0000      '....'   lae_53  BTST    #0,(A1)    2864: 51C8 FFFA        $2860          DBRA    D0,lae_53    2868: 3038 0D02         $D02          MOVE    TimeSCCDB,D0    286C: 0811 0000      '....'   lae_54  BTST    #0,(A1)    2870: 51C8 FFFA        $286C          DBRA    D0,lae_54    2874: A059           '.Y'             _RmvTime ; (A0/tmTaskPtr:TM_QElemPtr)     2876: 46DF           'F.'             MOVE    (A7)+,SR    2878: DCA8 000A      '....'           ADD.L   10(A0),D6    287C: 9C87           '..'             SUB.L   D7,D6    287E: BA86           '..'             CMP.L   D6,D5    2880: 6502             $2884          BLO.S   lae_55    2882: 2A06           '*.'             MOVE.L  D6,D5    2884: 51CC FF80        $2806          DBRA    D4,lae_50    2888: 3238 0D02         $D02          MOVE    TimeSCCDB,D1    288C: C2FC 0FA0      '....'           MULU    #$FA0,D1    2890: 82C5           '..'             DIVU    D5,D1    2892: 3001           '0.'             MOVE    D1,D0    2894: 4FEF 000E      'O...'           LEA     14(A7),A7    2898: 4CDF 00F0      'L...'           MOVEM.L (A7)+,D4-D7    289C: 4E75           'Nu'             RTS              289E: 203C 6174 6C6B ' <atlk' chkATalkVer  MOVE.L  #'atlk',D0                ; Returns the version of the .MPP driver as INTEGER. Returns zero when AppleTalk is off.    28A4: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     28A6: 664A             $28F2          BNE.S   lae_59 ; no ATalk installed    28A8: 203C 0000 05EC ' <....'         MOVE.L  #$5EC,D0 ; Check for various AT versions    28AE: B0FC 0038      '...8'           CMPA.W  #56,A0    28B2: 633A             $28EE          BLS.S   lae_58    28B4: 203C 0000 0614 ' <....'         MOVE.L  #$614,D0    28BA: B0FC 0039      '...9'           CMPA.W  #57,A0    28BE: 672E             $28EE          BEQ.S   lae_58    28C0: 203C 0000 0648 ' <...H'         MOVE.L  #$648,D0    28C6: B0FC 003A      '...:'           CMPA.W  #58,A0    28CA: 6722             $28EE          BEQ.S   lae_58 ; Below here it's AppleTalk v6 aka OpenTransport    28CC: 2078 02B6         $2B6          MOVEA.L ExpandMem,A0    28D0: 2228 0070      '"(.p'           MOVE.L  emLAPGlobals(A0),D1 ; Expand(ed)Mem LAP Globals?    28D4: 671C             $28F2          BEQ.S   lae_59    28D6: 2041           ' A'             MOVEA.L D1,A0    28D8: A021           '.!'             _GetPtrSize ; (A0/p:Ptr):D0\Size     28DA: E248           '.H'             LSR     #1,D0    28DC: 5340           'S@'             SUBQ    #1,D0    28DE: 0C58 2020      '.X  '    lae_56 CMPI    #$2020,(A0)+    28E2: 6706             $28EA          BEQ.S   lae_57    28E4: 51C8 FFF8        $28DE          DBRA    D0,lae_56    28E8: 6008             $28F2          BRA.S   lae_59    28EA: 5448           'TH'      lae_57 ADDQ    #2,A0    28EC: 2008           ' .'             MOVE.L  A0,D0    28EE: 2B40 02CE      '+@..'    lae_58 MOVE.L  D0,$2CE(A5)    28F2: 4E75           'Nu'      lae_59 RTS     	    28F4: 40E7           '@.'      proc42 MOVE    SR,-(A7)     28F6: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    28FA: 3B78 0D00 02BE    $D00          MOVE    TimeDBRA,$2BE(A5) ; SE30 = 0A33; IIci = 1045    2900: 3B78 0D02 02C2    $D02          MOVE    TimeSCCDB,$2C2(A5) ; SE30 = 01E9; IIci = 056A	; This works around a bug in System 7.1 being fixed in:	; 2/17/92	MH		Corrected value of timeSCSIDB from 0DA6 to 0B24	; I'm not patching this b/c my SE/30 has a IIsi BmoW ROM    2906: 0CAD 0000 0008 '......'         CMPI.L  #8,2(A5) ; IIcx  If it's one of these    290E: 6722             $2932          BEQ.S   lae_60   ;       $2CA(A5) will contain OldTimeSCSIDB ($0DA6)    2910: 0CAD 0000 0007 '......'         CMPI.L  #7,2(A5) ; IIx   instead of TimeSCSIDB ($0B24)    2918: 6718             $2932          BEQ.S   lae_60    291A: 0CAD 0000 0006 '......'         CMPI.L  #6,2(A5) ; II    2922: 670E             $2932          BEQ.S   lae_60    2924: 3B78 0CEA 02C6    $CEA          MOVE    TimeVIADB,$2C6(A5) ; 030d ; IIci = 030d    292A: 3B78 0B24 02CA    $B24          MOVE    TimeSCSIDB,$2CA(A5) ; 03d2 ; " = 05bc    2930: 6006             $2938          BRA.S   lae_61    2932: 3B78 0DA6 02CA    $DA6   lae_60 MOVE    OldTimeSCSIDB,$2CA(A5)  ; $0DA6 is the former TimeSCSIDB on old machines    2938: 41ED 02D2      'A...'    lae_61 LEA     $2D2(A5),A0    293C: 6100 FD02        $2640          BSR     proc38      ; works    2940: 42A7           'B.'             CLR.L   -(A7)       ;PUSH.L 00000000     2942: 42A7           'B.'             CLR.L   -(A7)       ;PUSH.L 00000000     2944: 42A7           'B.'             CLR.L   -(A7)       ;PUSH.L 00000000     2946: 2F3C 8000 8000 '/<....'         PUSH.L  #$80008000  ;       80008000    294C: 42A7           'B.'             CLR.L   -(A7)       ;PUSH.L 00000000     294E: 2F3C 0000 0040 '/<...@'         PUSH.L  #64         ;       00000040 (040 ?)    2954: 2F3C 0000 0001 '/<....'         PUSH.L  #1          ;       00000001    295A: 6100 E62C         $F88          BSR     SpeedProc  ; i.e. switch to 68040    295E: 4FEF 001C      'O...'           LEA     28(A7),A7    2962: 6100 DF42         $8A6          BSR     myClearCache    2966: 6100 FB8C        $24F4          BSR     proc37    296A: 3B78 0D00 02C0    $D00          MOVE    TimeDBRA,$2C0(A5)    2970: 3B78 0D02 02C4    $D02          MOVE    TimeSCCDB,$2C4(A5)    2976: 0CAD 0000 0008 '......'         CMPI.L  #8,2(A5)     ; IIcx  Gestalt needs to be patched!!!    297E: 6722             $29A2          BEQ.S   lae_62    2980: 0CAD 0000 0007 '......'         CMPI.L  #7,2(A5)     ; IIx    2988: 6718             $29A2          BEQ.S   lae_62    298A: 0CAD 0000 0006 '......'         CMPI.L  #6,2(A5)     ; II    2992: 670E             $29A2          BEQ.S   lae_62    2994: 3B78 0CEA 02C8    $CEA          MOVE    TimeVIADB,$2C8(A5)    299A: 3B78 0B24 02CC    $B24          MOVE    TimeSCSIDB,$2CC(A5)    29A0: 6006             $29A8          BRA.S   lae_63    29A2: 3B78 0DA6 02CC    $DA6   lae_62 MOVE    OldTimeSCSIDB,$2CC(A5)    29A8: 41ED 02E6      'A...'    lae_63 LEA     $2E6(A5),A0    29AC: 6100 FC92        $2640          BSR     proc38    29B0: 4EBA F8EE        $22A0          JSR     proc34    29B4: 42A7           'B.'             CLR.L   -(A7)    29B6: 42A7           'B.'             CLR.L   -(A7)    29B8: 42A7           'B.'             CLR.L   -(A7)    29BA: 2F3C 8000 8000 '/<....'         PUSH.L  #$80008000    29C0: 42A7           'B.'             CLR.L   -(A7)    29C2: 2F3C 0000 0030 '/<...0'         PUSH.L  #48  ; that's a 030 in hex    29C8: 2F3C 0000 0001 '/<....'         PUSH.L  #1    29CE: 6100 E5B8         $F88          BSR     SpeedProc ; i.e. switch to 68030    29D2: 4FEF 001C      'O...'           LEA     28(A7),A7    29D6: 46DF           'F.'             MOVE    (A7)+,SR    29D8: 4E75           'Nu'             RTS     	    29DA: 48E7 70C0      'H.p.'    proc43 MOVEM.L D1-D3/A0-A1,-(A7)                                          ; Save "original" Debugger vector - on my SE30 this is 0000, probably                                           ; overwritten by the initial lo-mem globals (3rd call)    29DE: 2B78 0120 02A4    $120          MOVE.L  MacJmp,$2A4(A5)          29E4: 1B78 0BFF 02B4    $BFF          MOVE.B  MacJmpFlag,$2B4(A5)  ; and its flags     29EA: 2B78 00FC 02AC '+x....'         MOVE.L  $FC,$2AC(A5)    29F0: 303C A9FF      '0<..'           MOVE    #$A9FF,D0   ; Debugger    29F4: A746           '.F'             _GetTrapAddress newTool; (D0/trapNum:Word):A0\ProcPtr     29F6: 2B48 0294      '+H..'           MOVE.L  A0,$294(A5)    29FA: 303C ABFF      '0<..'           MOVE    #$ABFF,D0   ; DebugStr    29FE: A746           '.F'             _GetTrapAddress newTool; (D0/trapNum:Word):A0\ProcPtr     2A00: 2B48 0298      '+H..'           MOVE.L  A0,$298(A5)    2A04: 6100 F952        $2358          BSR     proc35    2A08: 2F38 0118         $118          PUSH.L  TheZone    2A0C: 21F8 02A6 0118    $118          MOVE.L  SysZone,TheZone    2A12: 594F           'YO'             SUBQ    #4,A7    2A14: 2F3C 5041 434B '/<PACK'         PUSH.L  #'PACK'    2A1A: 3F3C 0004      '?<..'           PUSH    #4    2A1E: A9A0           '..'             _GetResource ; (theType:ResType; ID:INTEGER):Handle     2A20: 261F           '&.'             POP.L   D3   ; D3 is the handle to PACK4 aka SANE    2A22: 6722             $2A46          BEQ.S   lae_64    2A24: 2043           ' C'             MOVEA.L D3,A0    2A26: A029           '.)'             _HLock  ; (A0/h:Handle)     2A28: 2F03           '/.'             PUSH.L  D3    2A2A: A992           '..'             _DetachResource ; (theResource:Handle)     2A2C: 2043           ' C'             MOVEA.L D3,A0    2A2E: 2010           ' .'             MOVE.L  (A0),D0 ;  converting the pointer to a "clean" 24-bit address    2A30: A055           '.U'             _StripAddress ; (D0/theAddress:HLongInt):D0\HLongInt     2A32: 2B40 0028      '+@.('           MOVE.L  D0,40(A5)    2A36: 082D 0001 0023 '.-...#'         BTST    #1,35(A5) ; (0 = noFPU?, 2 = FPU, 3 =FPU)    2A3C: 6708             $2A46          BEQ.S   lae_64    2A3E: 2050           ' P'             MOVEA.L (A0),A0    2A40: 303C A9EB      '0<..'           MOVE    #$A9EB,D0   ; Pack4    2A44: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word)     2A46: 21DF 0118         $118  lae_64  POP.L   TheZone    2A4A: 2278 002C      '"x.,'           MOVEA.L $2C,A1    2A4E: 41FA D8FE         $34E          LEA     data9,A0    2A52: 2089           ' .'             MOVE.L  A1,(A0)    2A54: 2B49 0254      '+I.T'           MOVE.L  A1,$254(A5)    2A58: 2B49 0258      '+I.X'           MOVE.L  A1,$258(A5)    2A5C: 41FA D886         $2E4          LEA     data8,A0 ; data8 is some sort of exception handler    2A60: 082D 0001 0023 '.-...#'         BTST    #1,35(A5)    2A66: 6604             $2A6C          BNE.S   lae_65    2A68: 2B48 0254      '+H.T'           MOVE.L  A0,$254(A5)    2A6C: 082D 0000 0023 '.-...#' lae_65  BTST    #0,35(A5) ; (0 = noFPU?, 2 = FPU, 3 =FPU)    2A72: 6604             $2A78          BNE.S   lae_66    2A74: 2B48 0258      '+H.X'           MOVE.L  A0,$258(A5)    2A78: 1B78 012F 02B6    $12F  lae_66  MOVE.B  CPUFlag,$2B6(A5)    2A7E: 1B7C 0004 02B7 '.|....'         MOVE.B  #4,$2B7(A5)    2A84: 1B78 0CB1 02B8    $CB1          MOVE.B  MMUType,$2B8(A5)    2A8A: 1B7C 0005 02B9 '.|....'         MOVE.B  #5,$2B9(A5)    2A90: 3038 0B22         $B22          MOVE    HWCfgFlags,D0    2A94: 3B40 02BA      ';@..'           MOVE    D0,$2BA(A5)    2A98: 08C0 000C      '....'           BSET    #$C,D0    2A9C: 082D 0000 0023 '.-...#'         BTST    #0,35(A5)    2AA2: 6604             $2AA8          BNE.S   lae_67    2AA4: 0880 000C      '....'           BCLR    #$C,D0    2AA8: 3B40 02BC      ';@..'   lae_67  MOVE    D0,$2BC(A5)    2AAC: 203C 7072 6F63 ' <proc'         MOVE.L  #'proc',D0    2AB2: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     2AB4: 6600 023C        $2CF2          BNE     p43_resNF   ; ressource not found    2AB8: 2B48 02FA      '+H..'           MOVE.L  A0,$2FA(A5)    2ABC: 2B48 0302      '+H..'           MOVE.L  A0,$302(A5)    2AC0: 2B7C 0000 0005 '+|....'         MOVE.L  #5,$2FE(A5)    2AC8: 203C 6670 7520 ' <fpu '         MOVE.L  #'fpu ',D0    2ACE: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     2AD0: 6600 0220        $2CF2          BNE     p43_resNF    2AD4: 2B48 0306      '+H..'           MOVE.L  A0,$306(A5)    2AD8: 2B48 030E      '+H..'           MOVE.L  A0,$30E(A5)    2ADC: 7003           'p.'             MOVEQ   #3,D0    2ADE: 082D 0000 0023 '.-...#'         BTST    #0,35(A5)    2AE4: 6602             $2AE8          BNE.S   lae_68    2AE6: 7000           'p.'             MOVEQ   #0,D0    2AE8: 2B40 030A      '+@..'           MOVE.L  D0,$30A(A5)    2AEC: 203C 6D6D 7520 ' <mmu '         MOVE.L  #'mmu ',D0    2AF2: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     2AF4: 6600 01FC        $2CF2          BNE     p43_resNF    2AF8: 2B48 0312      '+H..'           MOVE.L  A0,$312(A5)    2AFC: 2B48 031A      '+H..'           MOVE.L  A0,$31A(A5)    2B00: 2B7C 0000 0004 '+|....'         MOVE.L  #4,$316(A5)    2B08: 41FA E1DE         $CE8          LEA     data35,A0    2B0C: 203C 5350 4452 ' <SPDR'         MOVE.L  #'SPDR',D0    2B12: A3AD           '..'             _Gestalt ,CLEAR; (A0/selector:OSType):D0\OSErr     2B14: 6600 01DC        $2CF2          BNE     p43_resNF    2B18: 41FA E1E0         $CFA          LEA     data36,A0    2B1C: 203C 7072 6F63 ' <proc'         MOVE.L  #'proc',D0    2B22: A5AD           '..'             _Gestalt ,SYS  ; (A0/selector:OSType):D0\OSErr     2B24: 6600 01CC        $2CF2          BNE     p43_resNF    2B28: 41FA E1F8         $D22          LEA     data38,A0    2B2C: 203C 6670 7520 ' <fpu '         MOVE.L  #'fpu ',D0    2B32: A5AD           '..'             _Gestalt ,SYS  ; (A0/selector:OSType):D0\OSErr     2B34: 6600 01BC        $2CF2          BNE     p43_resNF    2B38: 41FA E1D4         $D0E          LEA     data37,A0    2B3C: 203C 6D6D 7520 ' <mmu '         MOVE.L  #'mmu ',D0    2B42: A5AD           '..'             _Gestalt ,SYS  ; (A0/selector:OSType):D0\OSErr     2B44: 6600 01AC        $2CF2          BNE     p43_resNF		; ------ install versious own Traps etc ----		    2B48: 303C A05D      '0<.]'           MOVE    #$A05D,D0   ; SwapMMUMode    2B4C: A346           '.F'             _GetTrapAddress newOS; (D0/trapNum:Word):A0\ProcPtr     2B4E: 2B48 0268      '+H.h'           MOVE.L  A0,$268(A5)    2B52: 2B48 026C      '+H.l'           MOVE.L  A0,$26C(A5)    2B56: 4A38 0CB2         $CB2          TST.B   MMU32bit    2B5A: 6620             $2B7C          BNE.S   lae_69    2B5C: 41FA DB8E         $6EC          LEA     data20,A0    2B60: 2B48 026C      '+H.l'           MOVE.L  A0,$26C(A5)    2B64: 41FA DC1C         $782          LEA     data21,A0    2B68: 20AD 0268      ' ..h'           MOVE.L  $268(A5),(A0)    2B6C: 203C 0000 A05D ' <...]'         MOVE.L  #$A05D,D0   ; SwapMMUMode    2B72: 41FA DB72         $6E6          LEA     data19,A0    2B76: 21C8 0DBC         $DBC          MOVE.L  A0,jSwapMMU    2B7A: A247           '.G'             _SetTrapAddress newOS; (A0/trapAddr:ProcPtr; D0/trapNum:Word) 	    2B7C: 303C A05C      '0<.\'           MOVE    #$A05C,D0   ; VM_Dispatch    2B80: A346           '.F'             _GetTrapAddress newOS; (D0/trapNum:Word):A0\ProcPtr     2B82: 2B48 0260      '+H.`'           MOVE.L  A0,$260(A5)    2B86: 41FA DC04         $78C          LEA     data23,A0    2B8A: 2B48 0264      '+H.d'           MOVE.L  A0,$264(A5)    2B8E: 41FA DC32         $7C2          LEA     data25,A0    2B92: 20AD 0260      ' ..`'           MOVE.L  $260(A5),(A0)    2B96: 203C 0000 A05C ' <...\'         MOVE.L  #$A05C,D0   ; VM_Dispatch    2B9C: 41FA DBE8         $786          LEA     data22,A0    2BA0: A247           '.G'             _SetTrapAddress newOS; (A0/trapAddr:ProcPtr; D0/trapNum:Word) 	    2BA2: 303C A9EB      '0<..'           MOVE    #$A9EB,D0   ; Pack4 - FLOATING-POINT MATH    2BA6: A746           '.F'             _GetTrapAddress newTool; (D0/trapNum:Word):A0\ProcPtr     2BA8: 2B48 0278      '+H.x'           MOVE.L  A0,$278(A5)    2BAC: 2B48 027C      '+H.|'           MOVE.L  A0,$27C(A5)    2BB0: 43FA D7B0         $362          LEA     data13,A1    2BB4: 2288           '".'             MOVE.L  A0,(A1)    2BB6: 203C 0000 A9EB ' <....'         MOVE.L  #$A9EB,D0   ; Pack4 - FLOATING-POINT MATH    2BBC: 41FA D794         $352          LEA     data10,A0    2BC0: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word) 	    2BC2: 303C A9EC      '0<..'           MOVE    #$A9EC,D0   ; Pack5 - TRANSCENDENTAL FUNCTION    2BC6: A746           '.F'             _GetTrapAddress newTool; (D0/trapNum:Word):A0\ProcPtr     2BC8: 2B48 0280      '+H..'           MOVE.L  A0,$280(A5)    2BCC: 2B48 0284      '+H..'           MOVE.L  A0,$284(A5)    2BD0: 43FA D78C         $35E          LEA     data12,A1    2BD4: 2288           '".'             MOVE.L  A0,(A1)    2BD6: 203C 0000 A9EC ' <....'         MOVE.L  #$A9EC,D0   ; Pack5 - TRANSCENDENTAL FUNCTION	2BDC: 41FA D77A         $358          LEA     data11,A0    2BE0: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word) 	        2BE2: 303C A02E      '0<..'           MOVE    #$A02E,D0   ; BlockMove    2BE6: A346           '.F'             _GetTrapAddress newOS; (D0/trapNum:Word):A0\ProcPtr     2BE8: 2B48 0270      '+H.p'           MOVE.L  A0,$270(A5) ; oldBlockmove    2BEC: 41FA E5AE        $119C          LEA     data42,A0   ; myBlockMove    2BF0: 4A38 0CB2         $CB2          TST.B   MMU32bit    ; loMem Gbl "current address mode"    2BF4: 6604             $2BFA          BNE.S   lae_70      ; skip if clean machine else    2BF6: 41FA E5B0        $11A8          LEA     data43,A0   ; use a different entry for dirty machines    2BFA: 2B48 0274      '+H.t'    lae_70 MOVE.L  A0,$274(A5) ; save routine pointer to $274(A5)	    2BFE: 41FA E598        $1198          LEA     data41,A0   ; DC.L 0000 0000    2C02: 20AD 0270      ' ..p'           MOVE.L  $270(A5),(A0) ; copy oldBlockmove into there    2C06: 203C 0000 A02E ' <....'         MOVE.L  #$A02E,D0   ; BlockMove    2C0C: 41FA E584        $1192          LEA     data40,A0   ; aaaand replace it by myBlockmove    2C10: A247           '.G'             _SetTrapAddress newOS; (A0/trapAddr:ProcPtr; D0/trapNum:Word) 	    2C12: 303C A0BD      '0<..'           MOVE    #$A0BD,D0   ; jCacheFlush    2C16: 41FA DC8E         $8A6          LEA     myClearCache,A0    2C1A: A247           '.G'             _SetTrapAddress newOS; (A0/trapAddr:ProcPtr; D0/trapNum:Word)     2C1C: 303C A970      '0<.p'           MOVE    #$A970,D0   ; GetNextEvent    2C20: A746           '.F'             _GetTrapAddress newTool; (D0/trapNum:Word):A0\ProcPtr     2C22: 43FA D968         $58C          LEA     data16,A1    2C26: 2288           '".'             MOVE.L  A0,(A1)    2C28: 303C A970      '0<.p'           MOVE    #$A970,D0   ; GetNextEvent    2C2C: 41FA D8CE         $4FC          LEA     myGetNextEvent,A0    2C30: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word)         2C32: 303C A9A0      '0<..'           MOVE    #$A9A0,D0   ; GetResource    2C36: A746           '.F'             _GetTrapAddress newTool; (D0/trapNum:Word):A0\ProcPtr     2C38: 43FA DAA8         $6E2          LEA     data18,A1    2C3C: 2288           '".'             MOVE.L  A0,(A1)    2C3E: 303C A9A0      '0<..'           MOVE    #$A9A0,D0   ; GetResource    2C42: 41FA D94C         $590          LEA     myGetResource,A0    2C46: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word)     2C48: 303C A815      '0<..'           MOVE    #$A815,D0   ; SCSiDispatch    2C4C: A746           '.F'             _GetTrapAddress newTool; (D0/trapNum:Word):A0\ProcPtr     2C4E: 2B48 0290      '+H..'           MOVE.L  A0,$290(A5)    2C52: 303C A815      '0<..'           MOVE    #$A815,D0   ; SCSiDispatch    2C56: 41FA DCCA         $922          LEA     mySCSIdispatch,A0    2C5A: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word)     2C5C: 303C A937      '0<.7'           MOVE    #$A937,D0   ; DrawMenuBar    2C60: A746           '.F'             _GetTrapAddress newTool; (D0/trapNum:Word):A0\ProcPtr     2C62: 2B48 025C      '+H.\'           MOVE.L  A0,$25C(A5)    2C66: 303C A937      '0<.7'           MOVE    #$A937,D0   ; DrawMenuBar    2C6A: 41FA DDC2         $A2E          LEA     myDrawMB,A0    2C6E: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word)     2C70: 303C A9F0      '0<..'           MOVE    #$A9F0,D0   ; LoadSeg    2C74: 41FA DEF6         $B6C          LEA     data31,A0    2C78: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word)     2C7A: 303C A9F1      '0<..'           MOVE    #$A9F1,D0   ; UnLoadSeg    2C7E: 41FA DF7C         $BFC          LEA     data32,A0    2C82: A647           '.G'             _SetTrapAddress newTool; (A0/trapAddr:ProcPtr; D0/trapNum:Word)     2C84: 303C A198      '0<..'           MOVE    #$A198,D0   ; HWPriv    2C88: A346           '.F'             _GetTrapAddress newOS; (D0/trapNum:Word):A0\ProcPtr     2C8A: 2B48 0288      '+H..'           MOVE.L  A0,$288(A5)    2C8E: 303C A198      '0<..'           MOVE    #$A198,D0    2C92: 41FA DFB2         $C46          LEA     data33,A0    2C96: A247           '.G'             _SetTrapAddress newOS; (A0/trapAddr:ProcPtr; D0/trapNum:Word)     2C98: 303C A0A7      '0<..'           MOVE    #$A0A7,D0   ; Myst_A7 (vStdExit)    2C9C: A346           '.F'             _GetTrapAddress newOS; (D0/trapNum:Word):A0\ProcPtr     2C9E: 2B48 028C      '+H..'           MOVE.L  A0,$28C(A5)    2CA2: 303C A0A7      '0<..'           MOVE    #$A0A7,D0   ; Myst_A7 (vStdExit)    2CA6: 41FA E024         $CCC          LEA     data34,A0    2CAA: A247           '.G'             _SetTrapAddress newOS; (A0/trapAddr:ProcPtr; D0/trapNum:Word) 		;---- copying 64 longwords from data6 into data7... not sure, what that might be...    2CAC: 41FA D436          $E4          LEA     data7,A0  ; $E4 does not really exist at a 32bit boundary.    2CB0: 43FA D412          $C4          LEA     data6,A1    2CB4: 703F           'p?'             MOVEQ   #63,D0    2CB6: 20C9           ' .'     lae_71  MOVE.L  A1,(A0)+    2CB8: 51C8 FFFC        $2CB6          DBRA    D0,lae_71    2CBC: 41FA D426          $E4          LEA     data7,A0 ; data7 = ???    2CC0: 43FA D382          $44          LEA     data3,A1 ; data3 = Bus Error handling    2CC4: 2149 0008      '!I..'           MOVE.L  A1,8(A0)    2CC8: 43FA D3EE          $B8          LEA     data4,A1    2CCC: 2149 0028      '!I.('           MOVE.L  A1,40(A0)    2CD0: 43FA D3EC          $BE          LEA     data5,A1    2CD4: 2149 002C      '!I.,'           MOVE.L  A1,44(A0)    2CD8$ 4E7B 8801      'N{..'           MOVEC   A0,VBR    2CDC: 487A DC1E         $8FC          PEA     myShutdown ; This installs an own shutdown-handler before the     2CE0: 3F3C 0002      '?<..'           PUSH    #2         ; the system goes down for good.    2CE4: 3F3C 0003      '?<..'           PUSH    #3          ;Trap = ShutDwnInstall    2CE8: A895           '..'             _ShutDown      2CEA: 7000           'p.'             MOVEQ   #0,D0    2CEC: 4CDF 030E      'L...'   lae_72  MOVEM.L (A7)+,D1-D3/A0-A1    2CF0: 4E75           'Nu'             RTS         2CF2: 203C 0000 1B63 ' <...c' p43_resNF  MOVE.L  #$1B63,D0 ; "Error encountered while installing the Carrera040 software."    2CF8: 60F2             $2CEC          BRA     lae_72  	    2CFA: 48E7 70E2      'H.p.'   IIci_1st  MOVEM.L D1-D3/A0-A2/A6,-(A7) ; 1st call from IIci sub    2CFE: 2F38 0008      '/8..'           PUSH.L  8    2D02: 41FA 0018        $2D1C          LEA     data87,A0    2D06: 21C8 0008      '!...'           MOVE.L  A0,8    2D0A: 363C 1B5F      '6<._'           MOVE    #$1B5F,D3  ; 7007 - nothing with this ID in Ressource    2D0E: 7001           'p.'             MOVEQ   #1,D0    2D10: A05D           '.]'             _SwapMMUMode      2D12: 1F00           '..'             PUSH.B  D0    2D14: 2C4F           ',O'             MOVEA.L A7,A6    2D16: 6100 EB0E        $1826          BSR     read_5300k    2D1A: 7600           'v.'             MOVEQ   #0,D3    2D1C: 2E4E           '.N'     data87  MOVEA.L A6,A7    2D1E: 101F           '..'             POP.B   D0    2D20: A05D           '.]'             _SwapMMUMode      2D22: 21DF 0008      '!...'           POP.L   8    2D26: 7000           'p.'             MOVEQ   #0,D0    2D28: 3003           '0.'             MOVE    D3,D0    2D2A: 663E             $2D6A          BNE.S   exit_74		;6(A5) = 53_cmd_5.0	;10(A5) = 53_cmd_1	;14(A5) = read_5300k	;18(A5) = 53_cmd_5.3	;22(A5) = 53_cmd_5.3.5.1	;26(A5) = 53_cmd_5.1    2D2C: 41FA EA3A        $1768          LEA     53_cmd_5.0,A0    2D30: 2B48 0006      '+H..'           MOVE.L  A0,6(A5)    2D34: 41FA E972        $16A8          LEA     53_cmd_1,A0    2D38: 2B48 000A      '+H..'           MOVE.L  A0,10(A5)    2D3C: 41FA EAE8        $1826          LEA     read_5300k,A0    2D40: 2B48 000E      '+H..'           MOVE.L  A0,14(A5)    2D44: 41FA EAF4        $183A          LEA     53_cmd_5.3,A0    2D48: 2B48 0012      '+H..'           MOVE.L  A0,18(A5)    2D4C: 41FA EB1C        $186A          LEA     53_cmd_5.1,A0    2D50: 2B48 001A      '+H..'           MOVE.L  A0,26(A5)    2D54: 41FA EB10        $1866          LEA     53_cmd_5.3.5.1,A0  ; issue the #5,#3,#5,#1 'command' on $5300 0000    2D58: 2B48 0016      '+H..'           MOVE.L  A0,22(A5)    2D5C: 6100 EAC8        $1826          BSR     read_5300k    2D60: 0200 0007      '....'           ANDI.B  #7,D0      ; Mask out the upper 5 bits    2D64: 1B40 0022      '.@."'           MOVE.B  D0,34(A5)  ; write to "jumper register"?    2D68: 7000           'p.'             MOVEQ   #0,D0    2D6A: 4CDF 470E      'L.G.'   exit_74 MOVEM.L (A7)+,D1-D3/A0-A2/A6    2D6E: 4A40           'J@'             TST     D0    2D70: 4E75           'Nu'             RTS             2D72: 48E7 1F3E      'H..>'  IIci_2nd   MOVEM.L D3-D7/A2-A6,-(A7)  ; 2nd call from IIci/si handler    2D76: 7001           'p.'             MOVEQ   #1,D0    2D78: A05D           '.]'             _SwapMMUMode      2D7A: 2F00           '/.'             PUSH.L  D0    2D7C: 2C4F           ',O'             MOVEA.L A7,A6    2D7E: 2878 0DDC         $DDC          MOVEA.L BootGlobPtr,A4    2D82: 264C           '&L'             MOVEA.L A4,A3    2D84: D7EC FFF0      '....'           ADDA.L  -16(A4),A3    2D88: 42A7           'B.'             CLR.L   -(A7)    2D8A: 42A7           'B.'             CLR.L   -(A7)    2D8C: 42A7           'B.'             CLR.L   -(A7)    2D8E: 2E2B 0014      '.+..'           MOVE.L  20(A3),D7    2D92: 673E             $2DD2          BEQ.S   lae_77    2D94: 0687 0000 7FFF '......'         ADDI.L  #$7FFF,D7    2D9A: 0287 FFFF 8000 '......'         ANDI.L  #-$8000,D7    2DA0: 2F07           '/.'             PUSH.L  D7    2DA2: 2F3C 0000 0001 '/<....'         PUSH.L  #1    2DA8: 2F2B 0010      '/+..'           PUSH.L  16(A3)	    2DAC: 2F07           '/.'             PUSH.L  D7    2DAE: 2F3C 0000 0001 '/<....'         PUSH.L  #1    2DB4: 2F2B 0010      '/+..'           PUSH.L  16(A3)    2DB8: DF97           '..'             ADD.L   D7,(A7)    2DBA: 202B 0010      ' +..'           MOVE.L  16(A3),D0    2DBE: 0280 FFF0 0000 '......'         ANDI.L  #-$100000,D0	    2DC4: 2F3C 0000 8000 '/<....'         PUSH.L  #$8000    2DCA: 2F3C 0000 0001 '/<....'         PUSH.L  #1    2DD0: 2F00           '/.'             PUSH.L  D0	    2DD2: 2F3C 0010 0000 '/<....' lae_77: PUSH.L  #$100000    2DD8: 2F3C 5000 0041 '/<P..A'         PUSH.L  #$50000041    2DDE: 2F3C 5000 0000 '/<P...'         PUSH.L  #$50000000	    2DE4: 2F3C 0000 2000 '/<.. .'         PUSH.L  #$2000    2DEA: 2F3C 5300 0041 '/<S..A'         PUSH.L  #$53000041    2DF0: 2F3C 5300 0000 '/<S...'         PUSH.L  #$53000000	    2DF6: 2F3C 0000 2000 '/<.. .'         PUSH.L  #$2000    2DFC: 2F3C 0000 0001 '/<....'         PUSH.L  #1    2E02: 2F3C 5300 2000 '/<S. .'         PUSH.L  #$53002000    2E08: 4A87           'J.'             TST.L   D7    2E0A: 663C             $2E48          BNE.S   lae_78    2E0C: 2C2C 0004      ',,..'           MOVE.L  4(A4),D6    2E10: 2B46 0050      '+F.P'           MOVE.L  D6,80(A5)    2E14: 2F06           '/.'             PUSH.L  D6    2E16: 2014           ' .'             MOVE.L  (A4),D0    2E18: 0080 0000 0001 '......'         ORI.L   #1,D0    2E1E: 2F00           '/.'             PUSH.L  D0    2E20: 42A7           'B.'             CLR.L   -(A7)    2E22: 0CAC FFFF FFFF '......'         CMPI.L  #-1,8(A4)    2E2A: 6700 0084        $2EB0          BEQ     lae_80    2E2E: 202C 000C      ' ,..'           MOVE.L  12(A4),D0    2E32: D1AD 0050      '...P'           ADD.L   D0,80(A5)    2E36: 2F00           '/.'             PUSH.L  D0    2E38: 202C 0008      ' ,..'  proc51   MOVE.L  8(A4),D0    2E3C: 0080 0000 0001 '......'         ORI.L   #1,D0    2E42: 2F00           '/.'             PUSH.L  D0    2E44: 2F06           '/.'             PUSH.L  D6    2E46: 6068             $2EB0          BRA.S   lae_80    2E48: 42AD 0050      'B..P'  lae_78   CLR.L   80(A5)    2E4C: 7C00           '|.'             MOVEQ   #0,D6    2E4E: 7600           'v.'             MOVEQ   #0,D3    2E50: 0CAC FFFF FFFF '......'         CMPI.L  #-1,8(A4)    2E58: 6726             $2E80          BEQ.S   lae_79    2E5A: 222C 000C      '",..'           MOVE.L  12(A4),D1    2E5E: 0481 0000 8000 '......'         SUBI.L  #$8000,D1    2E64: 263C 0000 8000 '&<....'         MOVE.L  #$8000,D3    2E6A: D3AD 0050      '...P'           ADD.L   D1,80(A5)    2E6E: 2F01           '/.'             PUSH.L  D1    2E70: 202C 0008      ' ,..'           MOVE.L  8(A4),D0    2E74: 0080 0000 0001 '......'         ORI.L   #1,D0    2E7A: 2F00           '/.'             PUSH.L  D0    2E7C: 2F06           '/.'             PUSH.L  D6    2E7E: DC81           '..'             ADD.L   D1,D6    2E80: 2A2C 0004      '*,..'           MOVE.L  4(A4),D5    2E84: 9A87           '..'             SUB.L   D7,D5    2E86: DBAD 0050      '...P'           ADD.L   D5,80(A5)    2E8A: 2F05           '/.'             PUSH.L  D5    2E8C: 2014           ' .'             MOVE.L  (A4),D0    2E8E: D087           '..'             ADD.L   D7,D0    2E90: 0080 0000 0001 '......'         ORI.L   #1,D0    2E96: 2F00           '/.'             PUSH.L  D0    2E98: 2F06           '/.'             PUSH.L  D6    2E9A: DC85           '..'             ADD.L   D5,D6    2E9C: 4A83           'J.'             TST.L   D3    2E9E: 6710             $2EB0          BEQ.S   lae_80    2EA0: 2F03           '/.'             PUSH.L  D3    2EA2: D2AC 0008      '....'           ADD.L   8(A4),D1    2EA6: 0081 0000 0001 '......'         ORI.L   #1,D1    2EAC: 2F01           '/.'             PUSH.L  D1    2EAE: 2F06           '/.'             PUSH.L  D6    2EB0: 203C 726F 6D20 ' <rom '         MOVE.L  #'rom ',D0    2EB6: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     2EB8: 6600 02D2        $318C          BNE     lae_99    2EBC: 2F08           '/.'             PUSH.L  A0    2EBE: 2238 02AE         $2AE          MOVE.L  RomBase,D1    2EC2: 0081 0000 0001 '......'         ORI.L   #1,D1    2EC8: 2F01           '/.'             PUSH.L  D1    2ECA: 2F38 02AE         $2AE          PUSH.L  RomBase    2ECE: 224F           '"O'             MOVEA.L A7,A1    2ED0: 6100 E742        $1614          BSR     proc15    2ED4: 6100 F00A        $1EE0          BSR     proc27    2ED8: 6704             $2EDE          BEQ.S   lae_81    2EDA: 6000 02B0        $318C          BRA     lae_99    2EDE: 2B48 0054      '+H.T'           MOVE.L  A0,84(A5)    2EE2: 2B43 0058      '+C.X'           MOVE.L  D3,88(A5)    2EE6: 6100 E770        $1658          BSR     proc16    2EEA: 2B48 005C      '+H.\'           MOVE.L  A0,92(A5)    2EEE: 2B48 0060      '+H.`'           MOVE.L  A0,96(A5)    2EF2: D7AD 0060      '...`'           ADD.L   D3,96(A5)    2EF6: 203C 5000 0000 ' <P...'         MOVE.L  #$50000000,D0    2EFC: 7200           'r.'             MOVEQ   #0,D1    2EFE: 243C 0000 2000 '$<.. .'         MOVE.L  #$2000,D2    2F04: 78FF           'x.'             MOVEQ   #-1,D4    2F06: 6100 E696        $159E          BSR     proc14   ; proc14($50000000, 0, $2000, -1)    2F0A: 4CD9 00F0      'L...'           MOVEM.L (A1)+,D4-D7    2F0E: 700E           'p.'             MOVEQ   #14,D0    2F10: 48D1 00F0      'H...'    lae_82 MOVEM.L D4-D7,(A1)    2F14: 43E9 0010      'C...'           LEA     16(A1),A1    2F18: 51C8 FFF6        $2F10          DBRA    D0,lae_82    2F1C: 0CAD 0000 000B '......'         CMPI.L  #11,2(A5)    2F24: 6622             $2F48          BNE.S   lae_83    2F26: 2B7C FC03 C040 '+|...@'         MOVE.L  #$FC03C040,$64(A5)  ; Set 040 MMU     2F2E: 2B7C FC03 C040 '+|...@'         MOVE.L  #$FC03C040,$6C(A5)      2F36: 2B7C C01F C040 '+|...@'         MOVE.L  #$C01FC040,$68(A5)    2F3E: 2B7C C01F C040 '+|...@'         MOVE.L  #$C01FC040,$70(A5)    2F46: 6020             $2F68          BRA.S   lae_84    2F48: 2B7C F900 C040 '+|...@'         MOVE.L  #$F900C040,$64(A5)    2F50: 2B7C F900 C040 '+|...@'         MOVE.L  #$F900C040,$6C(A5)    2F58: 2B7C 900F C040 '+|...@'         MOVE.L  #$900FC040,$68(A5)    2F60: 2B7C 900F C040 '+|...@'         MOVE.L  #$900FC040,$70(A5)    2F68: 2E4E           '.N'             MOVEA.L A6,A7    2F6A: 203C 6164 6472 ' <addr'         MOVE.L  #'addr',D0    2F70: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     2F72: 6600 0218        $318C          BNE     lae_99    2F76: 2008           ' .'             MOVE.L  A0,D0    2F78: 0800 0000      '....'           BTST    #0,D0    2F7C: 6600 01F6        $3174          BNE     lae_97    2F80: 42A7           'B.'             CLR.L   -(A7)    2F82: 42A7           'B.'             CLR.L   -(A7)    2F84: 42A7           'B.'             CLR.L   -(A7)    2F86: 2E2B 001C      '.+..'           MOVE.L  28(A3),D7    2F8A: 673E             $2FCA          BEQ.S   lae_85    2F8C: 0687 0000 7FFF '......'         ADDI.L  #$7FFF,D7    2F92: 0287 FFFF 8000 '......'         ANDI.L  #-$8000,D7    2F98: 2F07           '/.'             PUSH.L  D7    2F9A: 2F3C 0000 0001 '/<....'         PUSH.L  #1    2FA0: 2F2B 0018      '/+..'           PUSH.L  24(A3)    2FA4: 2F07           '/.'             PUSH.L  D7    2FA6: 2F3C 0000 0001 '/<....'         PUSH.L  #1    2FAC: 2F2B 0018      '/+..'           PUSH.L  24(A3)    2FB0: DF97           '..'             ADD.L   D7,(A7)    2FB2: 202B 0018      ' +..'           MOVE.L  24(A3),D0    2FB6: 0280 FFF0 0000 '......'         ANDI.L  #-$100000,D0    2FBC: 2F3C 0000 8000 '/<....'         PUSH.L  #$8000    2FC2: 2F3C 0000 0001 '/<....'         PUSH.L  #1    2FC8: 2F00           '/.'             PUSH.L  D0    2FCA: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    2FD0: 2F3C 5000 0041 '/<P..A'         PUSH.L  #$50000041    2FD6: 2F3C 00F0 0000 '/<....'         PUSH.L  #$F00000    2FDC: 4A87           'J.'             TST.L   D7    2FDE: 665C             $303C          BNE.S   lae_88    2FE0: 283C 0080 0000 '(<....'         MOVE.L  #$800000,D4    2FE6: 2C2C 0004      ',,..'           MOVE.L  4(A4),D6    2FEA: 9C87           '..'             SUB.L   D7,D6    2FEC: 9886           '..'             SUB.L   D6,D4    2FEE: 6406             $2FF6          BHS.S   lae_86    2FF0: D886           '..'             ADD.L   D6,D4    2FF2: 2C04           ',.'             MOVE.L  D4,D6    2FF4: 7800           'x.'             MOVEQ   #0,D4    2FF6: 2B46 002C      '+F.,'           MOVE.L  D6,44(A5)    2FFA: 2F06           '/.'             PUSH.L  D6    2FFC: 2014           ' .'             MOVE.L  (A4),D0    2FFE: D087           '..'             ADD.L   D7,D0    3000: 0080 0000 0001 '......'         ORI.L   #1,D0    3006: 2F00           '/.'             PUSH.L  D0    3008: 42A7           'B.'             CLR.L   -(A7)    300A: 0CAC FFFF FFFF '......'         CMPI.L  #-1,8(A4)    3012: 6700 00AC        $30C0          BEQ     lae_93    3016: 202C 000C      ' ,..'           MOVE.L  12(A4),D0    301A: 9880           '..'             SUB.L   D0,D4    301C: 6406             $3024          BHS.S   lae_87    301E: D880           '..'             ADD.L   D0,D4    3020: 2004           ' .'             MOVE.L  D4,D0    3022: 7800           'x.'             MOVEQ   #0,D4    3024: D1AD 002C      '...,'           ADD.L   D0,44(A5)    3028: 2F00           '/.'             PUSH.L  D0    302A: 222C 0008      '",..'           MOVE.L  8(A4),D1    302E: 0081 0000 0001 '......'         ORI.L   #1,D1    3034: 2F01           '/.'             PUSH.L  D1    3036: 2F06           '/.'             PUSH.L  D6    3038: 6000 0086        $30C0          BRA     lae_93    303C: 42AD 002C      'B..,'           CLR.L   44(A5)    3040: 7C00           '|.'             MOVEQ   #0,D6    3042: 7600           'v.'             MOVEQ   #0,D3    3044: 283C 0080 0000 '(<....'         MOVE.L  #$800000,D4    304A: 0CAC FFFF FFFF '......'         CMPI.L  #-1,8(A4)    3052: 6732             $3086          BEQ.S   lae_91    3054: 222C 000C      '",..'           MOVE.L  12(A4),D1    3058: 9881           '..'             SUB.L   D1,D4    305A: 6408             $3064          BHS.S   lae_89    305C: D881           '..'             ADD.L   D1,D4    305E: 2204           '".'             MOVE.L  D4,D1    3060: 7800           'x.'             MOVEQ   #0,D4    3062: 600C             $3070          BRA.S   lae_90    3064: 0481 0000 8000 '......'         SUBI.L  #$8000,D1    306A: 263C 0000 8000 '&<....'         MOVE.L  #$8000,D3    3070: D3AD 002C      '...,'           ADD.L   D1,44(A5)    3074: 2F01           '/.'             PUSH.L  D1    3076: 202C 0008      ' ,..'           MOVE.L  8(A4),D0    307A: 0080 0000 0001 '......'         ORI.L   #1,D0    3080: 2F00           '/.'             PUSH.L  D0    3082: 2F06           '/.'             PUSH.L  D6    3084: DC81           '..'             ADD.L   D1,D6    3086: 2A2C 0004      '*,..'           MOVE.L  4(A4),D5    308A: 9A87           '..'             SUB.L   D7,D5    308C: 9885           '..'             SUB.L   D5,D4    308E: 6406             $3096          BHS.S   lae_92    3090: D885           '..'             ADD.L   D5,D4    3092: 2A04           '*.'             MOVE.L  D4,D5    3094: 7800           'x.'             MOVEQ   #0,D4    3096: DBAD 002C      '...,'           ADD.L   D5,44(A5)    309A: 2F05           '/.'             PUSH.L  D5    309C: 2014           ' .'             MOVE.L  (A4),D0    309E: D087           '..'             ADD.L   D7,D0    30A0: 0080 0000 0001 '......'         ORI.L   #1,D0    30A6: 2F00           '/.'             PUSH.L  D0    30A8: 2F06           '/.'             PUSH.L  D6    30AA: DC85           '..'             ADD.L   D5,D6    30AC: 4A83           'J.'             TST.L   D3    30AE: 6710             $30C0          BEQ.S   lae_93    30B0: 2F03           '/.'             PUSH.L  D3    30B2: D2AC 0008      '....'           ADD.L   8(A4),D1    30B6: 0081 0000 0001 '......'         ORI.L   #1,D1    30BC: 2F01           '/.'             PUSH.L  D1    30BE: 2F06           '/.'             PUSH.L  D6    30C0: 203C 726F 6D20 ' <rom '         MOVE.L  #'rom ',D0    30C6: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     30C8: 6600 00C2        $318C          BNE     lae_99    30CC: 2F08           '/.'             PUSH.L  A0    30CE: 2238 02AE         $2AE          MOVE.L  RomBase,D1    30D2: 0081 0000 0001 '......'         ORI.L   #1,D1    30D8: 2F01           '/.'             PUSH.L  D1    30DA: 2238 02AE         $2AE          MOVE.L  RomBase,D1    30DE: 0281 00FF FFFF '......'         ANDI.L  #$FFFFFF,D1    30E4: 2F01           '/.'             PUSH.L  D1    30E6: 0CAD 0000 000B '......'         CMPI.L  #11,2(A5)    30EE: 6638             $3128          BNE.S   lae_94    30F0: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    30F6: 2F3C FC00 0041 '/<...A'         PUSH.L  #$FC000041    30FC: 2F3C 00C0 0000 '/<....'         PUSH.L  #$C00000	    3102: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    3108: 2F3C FD00 0041 '/<...A'         PUSH.L  #$FD000041    310E: 2F3C 00D0 0000 '/<....'         PUSH.L  #$D00000	    3114: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    311A: 2F3C FE00 0041 '/<...A'         PUSH.L  #$FE000041    3120: 2F3C 00E0 0000 '/<....'         PUSH.L  #$E00000    3126: 6012             $313A          BRA.S   lae_95    3128: 2F3C 0010 0000 '/<....'  lae_94 PUSH.L  #$100000    312E: 2F3C F900 0041 '/<...A'         PUSH.L  #$F9000041    3134: 2F3C 0090 0000 '/<....'         PUSH.L  #$900000    313A: 224F           '"O'      lae_95 MOVEA.L A7,A1    313C: 6100 E4D6        $1614          BSR     proc15    3140: 6100 ED9E        $1EE0          BSR     proc27    3144: 6702             $3148          BEQ.S   lae_96    3146: 6044             $318C          BRA.S   lae_99    3148: 2B48 0030      '+H.0'           MOVE.L  A0,48(A5)    314C: 2B43 0034      '+C.4'           MOVE.L  D3,52(A5)    3150: 6100 E506        $1658          BSR     proc16    3154: 2B48 0038      '+H.8'           MOVE.L  A0,56(A5)    3158: 2B48 003C      '+H.<'           MOVE.L  A0,60(A5)    315C: D7AD 003C      '...<'           ADD.L   D3,60(A5)    3160: 6100 E514        $1676          BSR     proc17    3164: 42AD 0040      'B..@'           CLR.L   64(A5)    3168: 42AD 0044      'B..D'           CLR.L   68(A5)    316C: 42AD 0048      'B..H'           CLR.L   72(A5)    3170: 42AD 004C      'B..L'           CLR.L   76(A5)    3174: 7000           'p.'             MOVEQ   #0,D0    3176: 2E4E           '.N'    lae_98:  MOVEA.L A6,A7    3178: 2F00           '/.'             PUSH.L  D0    317A: 202F 0004      ' /..'           MOVE.L  4(A7),D0    317E: A05D           '.]'             _SwapMMUMode      3180: 201F           ' .'             POP.L   D0    3182: 584F           'XO'             ADDQ    #4,A7    3184: 4CDF 7CF8      'L.|.'           MOVEM.L (A7)+,D3-D7/A2-A6    3188: 4A40           'J@'             TST     D0    318A: 4E75           'Nu'             RTS         318C: 203C 0000 1B62 ' <...b' lae_99  MOVE.L  #$1B62,D0    ; RCS String "Carrera040 could not allocated a large enough block of contiguous memory."    3192: 60E2             $3176          BRA     lae_98                3194: 40E7           '@.'    IIci_3rd MOVE    SR,-(A7)  ; 3rd call from IIci/si handler    3196: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    319A: 48E7 E0E0      'H...'           MOVEM.L D0-D2/A0-A2,-(A7)    319E: 7001           'p.'             MOVEQ   #1,D0    31A0: A05D           '.]'             _SwapMMUMode    ; into 32bit mode    31A2: 1F00           '..'             PUSH.B  D0                                            ; This is IIci specific stuff - left out in the MacII equivalent                                        ; It's meant to figure out the VBR (vector base register)    31A4: 2278 0DDC         $DDC          MOVEA.L BootGlobPtr,A1  ; $DDC points to mySE/30: $04FFFFE4 / IIci: $04FAFFE4    31A8: D3E9 FFF0      '....'           ADDA.L  -16(A1),A1   ; SE30 @ 0x4FFFFE4 (+ FFFF FDFA = 0x4FFFDDE) / IIci @ 0x4FAFFE4 (+ FFFFFDA6 = 0x4FAFD8A)    31AC: 95CA           '..'             SUBA.L  A2,A2        ; "short" for movea.l #0,a2    31AE: 2029 0014      ' )..'           MOVE.L  20(A1),D0    ; SE30 20(0x4FFFDDE) = 0x4FFFDF2, contains: $0000 0000 / IIci 20(0x4FAFD8A) contains: $4B000    31B2: 6704             $31B8          BEQ.S   lae_101      ; if LSB = 0;    31B4: 2469 0010      '$i..'           MOVEA.L 16(A1),A2    ; SE30(0x4FFFDEE) = $00000000 This writes '0' into A2, which is correct (VBR=0)!	                                                           ; IIci(0x4FAFD9E) = $FBB08000 (That's the Logical 32 bit base address of screen)    31B8: 41FA 0090        $324A  lae_101 LEA     data89,A0    31BC: 202D 0060      ' -.`'           MOVE.L  96(A5),D0    31C0: 20C0           ' .'             MOVE.L  D0,(A0)+    31C2: 43FA E5EA        $17AE          LEA     data53,A1    31C6: 20C9           ' .'             MOVE.L  A1,(A0)+       ; IIci = 3BFAFC6    31C8: 20ED 0064      ' ..d'           MOVE.L  $64(A5),(A0)+  ; IIci = FC03c040    31CC: 20ED 006C      ' ..l'           MOVE.L  $6C(A5),(A0)+  ; IIci = FC03c040    31D0: 20ED 0068      ' ..h'           MOVE.L  $68(A5),(A0)+  ; IIci = C01FC040    31D4: 20ED 0070      ' ..p'           MOVE.L  $70(A5),(A0)+  ; IIci = C01FC040    31D8: 41FA 00F4        $32CE          LEA     IIci_4th,A0   ;    31DC: 2408           '$.'             MOVE.L  A0,D2         ; D2 holds IIci_4th routine pointer    31DE: 41FA 003A        $321A          LEA     data88,A0     ; Start of what seems to be a Bus Error Handler    31E2: 9488           '..'             SUB.L   A0,D2         ; Calculating the lenght of the code (data88 to end of routine)    31E4: 9FC2           '..'             SUBA.L  D2,A7    31E6: 204A           ' J'             MOVEA.L A2,A0      ; copies the Zero    31E8: 224F           '"O'             MOVEA.L A7,A1      ; the result of A0-D2-A7    31EA: 2002           ' .'             MOVE.L  D2,D0      ; the result of data88 minus instFPSP (i.e. size of codeblock $321A-$32CC)											; A0 = 00000000 (src)  - IIci: $FBB08000 											; A1 = 027ff34c (dest) - IIci: $3BF9FC6											; D0 = B4    (count)   - SAME on the IIci!											; i.e. this saves the VBR...    31EC: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     31EE: 41FA 002A        $321A          LEA     data88,A0    31F2: 224A           '"J'             MOVEA.L A2,A1  ; This is ZERO (according to MacBugs)    31F4: 2002           ' .'             MOVE.L  D2,D0                                          ; ...and replace the current VBR with our code    31F6: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size) ; 											; A0 = 9EB12 (src)   - IIci 10C4EA (data88)											; A1 = 00000 (dest)  - IIci FBB08000											; D0 = B4    (count) - IIci same											; This copies 180 bytes into 0x000000000!											    31F8: 6100 E4AE        $16A8          BSR     53_cmd_1    31FC: 204F           ' O'             MOVEA.L A7,A0    31FE: 224A           '"J'             MOVEA.L A2,A1    3200: 2002           ' .'             MOVE.L  D2,D0    3202: 6002             $3206          BRA.S   lae_103    3204: 12D8           '..'     lae_102 MOVE.B  (A0)+,(A1)+    3206: 51C8 FFFC        $3204  lae_103 DBRA    D0,lae_102    320A: DFC2           '..'             ADDA.L  D2,A7    320C: 101F           '..'             POP.B   D0    320E: A05D           '.]'             _SwapMMUMode      3210: 4CDF 0707      'L...'           MOVEM.L (A7)+,D0-D2/A0-A2    3214: 46DF           'F.'             MOVE    (A7)+,SR    3216: 7000           'p.'             MOVEQ   #0,D0    3218: 4E75           'Nu'             RTS         ; BEGIN 040 Code being copied to somewhere by line 31F6         321A: 0000 1000          '..'  data88 DC.L    #$00001000    321E: 0000 0050      '...P'           DC.L    #$00000050    3222: 0000 0048      '...H'           DC.L    #$00000048    3226: 0000 0048      '...H'           DC.L    #$00000048    322A: 0000 0048      '...H'           DC.L    #$00000048    322E: 0000 0048      '...H'           DC.L    #$00000048    3232: 0000 0048      '...H'           DC.L    #$00000048    3236: 0000 0048      '...H'           DC.L    #$00000048    323A: 0000 0048      '...H'           DC.L    #$00000048    323E: 0000 0048      '...H'           DC.L    #$00000048    3242: 0000 0048      '...H'           DC.L    #$00000048    3246: 0000 0048      '...H'           DC.L    #$00000048	    324A: 0000 0000      '....'    data89 DC.L    #$00000000    324E: 0000 0000      '....'           DC.L    #$00000000    3252: 0000 0000      '....'           DC.L    #$00000000    3256: 0000 0000      '....'           DC.L    #$00000000    325A: 0000 0000      '....'           DC.L    #$00000000    325E: 0000 0000      '....'           DC.L    #$00000000	    3262: 42B9 5300 0000 'B.S...'         CLR.L   $53000000    3268: 60FE             $3268          BRA     lae_104    326A: 41FA FFDE        $324A          LEA     data89,A0    326E: 2218           '".'             MOVE.L  (A0)+,D1    3270: 2258           '"X'             MOVEA.L (A0)+,A1    3272: 2818           '(.'             MOVE.L  (A0)+,D4    3274: 2A18           '*.'             MOVE.L  (A0)+,D5    3276: 2C18           ',.'             MOVE.L  (A0)+,D6    3278: 2E18           '..'             MOVE.L  (A0)+,D7    327A: 203C 0000 C000 ' <....'         MOVE.L  #$C000,D0    3280$ 4E7B 0004      'N{..'           MOVEC   D0,ITT0    3284$ 4E7B 0006      'N{..'           MOVEC   D0,DTT0    3288$ 4E7B 1807      'N{..'           MOVEC   D1,SRP    328C$ 4E7B 1806      'N{..'           MOVEC   D1,URP    3290: 203C 0000 C000 ' <....'         MOVE.L  #$C000,D0    3296$ F518           '..'             PFLUSHA     3298$ 4E7B 0003      'N{..'           MOVEC   D0,TC     329C: 41FA 000A        $32A8          LEA     data90,A0    32A0: D1FC 5300 2000 '..S. .'         ADDA.L  #$53002000,A0    32A6: 4ED0           'N.'             JMP     (A0)    32A8: 7000           'p.'     data90  MOVEQ   #0,D0    32AA$ 4E7B 0004      'N{..'           MOVEC   D0,ITT0    32AE$ 4E7B 0006      'N{..'           MOVEC   D0,DTT0    32B2$ 4E7B 4004      'N{@.'           MOVEC   D4,ITT0    32B6$ 4E7B 5006      'N{P.'           MOVEC   D5,DTT0    32BA$ 4E7B 6005      'N{`.'           MOVEC   D6,ITT1    32BE$ 4E7B 7007      'N{p.'           MOVEC   D7,DTT1    32C2$ F4D8           '..'             CINVA   BC    32C4: 4E71           'Nq'             NOP         32C6: 7000           'p.'             MOVEQ   #0,D0    32C8$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    32CC: 4ED1           'N.'             JMP     (A1); END 040 Code being copied to somewhere by line 31F6             32CE: 48E7 7FF8      'H...'  IIci_4th MOVEM.L D1-D7/A0-A4,-(A7)    32D2: 0CAD 0000 000B '......'         CMPI.L  #11,2(A5)  ; These 2 lines are missing     32DA: 6600 008A        $3366          BNE     lae_107    ; in the MacII version of this routine    32DE: 082D 0000 0023 '.-...#'         BTST    #0,35(A5)    32E4: 6600 00D2        $33B8          BNE     lae_110    32E8: 41FA E74C        $1A36          LEA     data61,A0    32EC: 2B48 027C      '+H.|'           MOVE.L  A0,$27C(A5)    32F0: 594F           'YO'             SUBQ    #4,A7    32F2: 2F3C 4650 5350 '/<FPSP'         PUSH.L  #'FPSP'    32F8: 3F3C 012C      '?<.,'           PUSH    #$12C    32FC: A81F           '..'             _Get1Resource ; (theType:ResType; ID:INTEGER):Handle     32FE: 203C 0000 1B64 ' <...d'         MOVE.L  #$1B64,D0 ; STR "Carrera040 could not find needed resource. The Carrera040 file may be corrupted."    3304: 2E1F           '..'             POP.L   D7    3306: 6700 00B4        $33BC          BEQ     IIci_4th_exit    330A: 2047           ' G'             MOVEA.L D7,A0    330C: A025           '.%'             _GetHandleSize ; (A0/h:Handle):D0\Size     330E: 2C00           ',.'             MOVE.L  D0,D6    3310: A51E           '..'             _NewPtr ,SYS  ; (D0/byteCount:Size):A0\Ptr     3312: 664A             $335E          BNE.S   instFPSP_loMem    3314: 43FA E77C        $1A92          LEA     data62,A1    3318: 2288           '".'             MOVE.L  A0,(A1)    331A: 2248           '"H'             MOVEA.L A0,A1    331C: 2047           ' G'             MOVEA.L D7,A0    331E: 2050           ' P'             MOVEA.L (A0),A0    3320: 2006           ' .'             MOVE.L  D6,D0    3322: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     3324: 2F07           '/.'             PUSH.L  D7    3326: A9A3           '..'             _ReleaseResource ; (theResource:Handle)     3328: 594F           'YO'             SUBQ    #4,A7    332A: 2F3C 4650 5350 '/<FPSP'         PUSH.L  #'FPSP'    3330: 3F3C 012D      '?<.-'           PUSH    #$12D    3334: A81F           '..'             _Get1Resource ; (theType:ResType; ID:INTEGER):Handle     3336: 203C 0000 1B64 ' <...d'         MOVE.L  #$1B64,D0 ; STR "Carrera040 could not find needed resource. The Carrera040 file may be corrupted."    333C: 2E1F           '..'             POP.L   D7    333E: 677C             $33BC          BEQ.S   IIci_4th_exit    3340: 2047           ' G'             MOVEA.L D7,A0    3342: A025           '.%'             _GetHandleSize ; (A0/h:Handle):D0\Size     3344: 2C00           ',.'             MOVE.L  D0,D6    3346: A51E           '..'             _NewPtr ,SYS  ; (D0/byteCount:Size):A0\Ptr     3348: 6614             $335E          BNE.S   IIci_4th_loMem    334A: 2B48 0284      '+H..'           MOVE.L  A0,$284(A5)    334E: 2248           '"H'             MOVEA.L A0,A1    3350: 2047           ' G'             MOVEA.L D7,A0    3352: 2050           ' P'             MOVEA.L (A0),A0    3354: 2006           ' .'             MOVE.L  D6,D0    3356: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     3358: 2F07           '/.'             PUSH.L  D7    335A: A9A3           '..'             _ReleaseResource ; (theResource:Handle)     335C: 605A             $33B8          BRA.S   lae_110    335E: 203C 0000 1B59 ' <...Y' IIci_4th_loMem   MOVE.L  #$1B59,D0  ;  STR "Not enough memory to load Carrera040 software."    3364: 6056             $33BC          BRA.S   IIci_4th_exit    3366: 0C2D 0003 0023 '.-...#'         CMPI.B  #3,35(A5)    336C: 674A             $33B8          BEQ.S   lae_110    336E: 0C2D 0000 0023 '.-...#'         CMPI.B  #0,35(A5)    3374: 6742             $33B8          BEQ.S   lae_110    3376: 203C 0007 0ACC ' <....'         MOVE.L  #$70ACC,D0    337C: 223C 0007 1BEC '"<....'         MOVE.L  #$71BEC,D1    3382: 082D 0000 0023 '.-...#'         BTST    #0,35(A5)    3388: 660C             $3396          BNE.S   lae_108    338A: 203C 0007 3940 ' <..9@'         MOVE.L  #$73940,D0    3390: 223C 0005 9530 '"<...0'         MOVE.L  #$59530,D1    3396: D0B8 02AE         $2AE  lae_108 ADD.L   RomBase,D0    339A: D2B8 02AE         $2AE          ADD.L   RomBase,D1    339E: 41FA E6F2        $1A92          LEA     data62,A0    33A2: 2080           ' .'             MOVE.L  D0,(A0)    33A4: 2B41 0284      '+A..'           MOVE.L  D1,$284(A5)    33A8: 206D 0028      ' m.('           MOVEA.L 40(A5),A0    33AC: 4A88           'J.'             TST.L   A0    33AE: 6704             $33B4          BEQ.S   lae_109    33B0: 41FA E684        $1A36          LEA     data61,A0    33B4: 2B48 027C      '+H.|'   lae_109 MOVE.L  A0,$27C(A5)    33B8: 6108             $33C2  lae_110 BSR.S   proc44    33BA: 7000           'p.'             MOVEQ   #0,D0    33BC: 4CDF 1FFE      'L...' IIci_4th_exit MOVEM.L (A7)+,D1-D7/A0-A4    33C0: 4E75           'Nu'             RTS    	; end IIci_4th	     33C2: 2078 011C         $11C  proc44: MOVEA.L uTableBase,A0  ; The unit table contains a handle to the unit's device control entry at UTableBase+unitnumber*4    33C6: 303C FFFB      '0<..'           MOVE    #$FFFB,D0      ; FFFB       33CA: 5240           'R@'             ADDQ    #1,D0          ; +1 = FFFC    33CC: 4440           'D@'             NEG     D0             ; = 3    33CE: 2070 0400      ' p..'           MOVEA.L 0(A0,D0.W*4),A0 ; 3 * 4 = 12 (should be "Desk accessory")    33D2: 2050           ' P'             MOVEA.L (A0),A0    33D4: 2010           ' .'             MOVE.L  (A0),D0         ; make it 24bit    33D6: A055           '.U'             _StripAddress ; (D0/theAddress:HLongInt):D0\HLongInt     33D8: 2B40 0246      '+@.F'           MOVE.L  D0,$246(A5)    33DC: 43FA D576         $954          LEA     myFloppyDrvr,A1    33E0: 2089           ' .'             MOVE.L  A1,(A0)    33E2: 3028 0004      '0(..'           MOVE    4(A0),D0    33E6: 0240 0040      '.@.@'           ANDI    #$40,D0    33EA: 3B40 024A      ';@.J'           MOVE    D0,$24A(A5)    33EE: 0268 FFBF 0004 '.h....'         ANDI    #$FFBF,4(A0)    33F4: 2B78 08FC 0250    $8FC          MOVE.L  jIODone,$250(A5)    33FA: 41FA D5E4         $9E0          LEA     data29,A0    33FE: 21C8 08FC         $8FC          MOVE.L  A0,jIODone    3402: 4E75           'Nu'             RTS            ;    ; This seems to be the Handler for IIci and IIsi    ;         3404: 6000 F8F4        $2CFA  IIci_handler  BRA     IIci_1st    3408: 6000 F968        $2D72          BRA     IIci_2nd    340C: 6000 FD86        $3194          BRA     IIci_3rd    3410: 6000 FEBC        $32CE          BRA     IIci_4th	    3414: 48E7 70E2      'H.p.'   lae_112 MOVEM.L D1-D3/A0-A2/A6,-(A7)  ; 1st call from LC_handler    3418: 2F38 0008      '/8..'           PUSH.L  8    341C: 41FA 0018        $3436          LEA     data93,A0    3420: 21C8 0008      '!...'           MOVE.L  A0,8    3424: 363C 1B5F      '6<._'           MOVE    #$1B5F,D3  ; 7007    3428: 7001           'p.'             MOVEQ   #1,D0      ; switch to 32bit mode    342A: A05D           '.]'             _SwapMMUMode      342C: 1F00           '..'             PUSH.B  D0    342E: 2C4F           ',O'             MOVEA.L A7,A6    3430: 6100 E5DC        $1A0E          BSR     read_FB60k    3434: 7600           'v.'             MOVEQ   #0,D3    3436: 2E4E           '.N'             MOVEA.L A6,A7    3438: 101F           '..'             POP.B   D0    343A: A05D           '.]'             _SwapMMUMode  ;     343C: 21DF 0008      '!...'           POP.L   8    3440: 7000           'p.'             MOVEQ   #0,D0    3442: 3003           '0.'             MOVE    D3,D0    3444: 663E             $3484          BNE.S   lae_113    3446: 48E7 60E0      'H.`.'           MOVEM.L D1-D2/A0-A2,-(A7)    344A: 41FA E50A        $1956          LEA     data58,A0    344E: 2B48 0006      '+H..'           MOVE.L  A0,6(A5)    3452: 41FA E442        $1896          LEA     proc20,A0    3456: 2B48 000A      '+H..'           MOVE.L  A0,10(A5)    345A: 41FA E5B2        $1A0E          LEA     read_FB60k,A0    345E: 2B48 000E      '+H..'           MOVE.L  A0,14(A5)    3462: 41FA EA0C        $1E70          LEA     data70,A0    3466: 2B48 0012      '+H..'           MOVE.L  A0,18(A5)    346A: 2B48 001A      '+H..'           MOVE.L  A0,26(A5)    346E: 2B48 0016      '+H..'           MOVE.L  A0,22(A5)    3472: 4CDF 0706      'L...'           MOVEM.L (A7)+,D1-D2/A0-A2    3476: 6100 E596        $1A0E          BSR     read_FB60k    347A: 0200 0007      '....'           ANDI.B  #7,D0    347E: 1B40 0022      '.@."'           MOVE.B  D0,34(A5)    3482: 7000           'p.'             MOVEQ   #0,D0    3484: 4CDF 470E      'L.G.'           MOVEM.L (A7)+,D1-D3/A0-A2/A6    3488: 4A40           'J@'             TST     D0    348A: 4E75           'Nu'             RTS                     348C: 48E7 1F3E      'H..>'   lae_114 MOVEM.L D3-D7/A2-A6,-(A7) ; 2nd call from LC-handler    3490: 2C4F           ',O'             MOVEA.L A7,A6    3492: 2878 0DDC         $DDC          MOVEA.L BootGlobPtr,A4    3496: 42A7           'B.'             CLR.L   -(A7)    3498: 42A7           'B.'             CLR.L   -(A7)    349A: 42A7           'B.'             CLR.L   -(A7)    349C: 2F3C 0004 0000 '/<....'         PUSH.L  #$40000    34A2: 2F3C 50F0 0041 '/<P..A'         PUSH.L  #$50F00041    34A8: 2F3C 50F0 0000 '/<P...'         PUSH.L  #$50F00000	    34AE: 2F3C 0008 0000 '/<....'         PUSH.L  #$80000    34B4: 2F3C 50F4 0001 '/<P...'         PUSH.L  #$50F40001    34BA: 2F3C 50F4 0000 '/<P...'         PUSH.L  #$50F40000	    34C0: 2F3C 0000 2000 '/<.. .'         PUSH.L  #$2000    34C6: 2F3C FB60 0041 '/<.`.A'         PUSH.L  #$FB600041    34CC: 2F3C FB60 0000 '/<.`..'         PUSH.L  #$FB600000	    34D2: 2F3C 0000 2000 '/<.. .'         PUSH.L  #$2000    34D8: 2F3C 0000 0001 '/<....'         PUSH.L  #1    34DE: 2F3C FB60 2000 '/<.` .'         PUSH.L  #$FB602000    34E4: 2C2C 0004      ',,..'           MOVE.L  4(A4),D6    34E8: 2B46 0050      '+F.P'           MOVE.L  D6,80(A5)    34EC: 2F06           '/.'             PUSH.L  D6    34EE: 2014           ' .'             MOVE.L  (A4),D0    34F0: 0080 0000 0001 '......'         ORI.L   #1,D0    34F6: 2F00           '/.'             PUSH.L  D0    34F8: 42A7           'B.'             CLR.L   -(A7)    34FA: 0CAC FFFF FFFF '......'         CMPI.L  #-1,8(A4)    3502: 6718             $351C          BEQ.S   lae_115    3504: 202C 000C      ' ,..'           MOVE.L  12(A4),D0    3508: D1AD 0050      '...P'           ADD.L   D0,80(A5)    350C: 2F00           '/.'             PUSH.L  D0    350E: 202C 0008      ' ,..'           MOVE.L  8(A4),D0    3512: 0080 0000 0001 '......'         ORI.L   #1,D0    3518: 2F00           '/.'             PUSH.L  D0    351A: 2F06           '/.'             PUSH.L  D6    351C: 203C 726F 6D20 ' <rom '         MOVE.L  #'rom ',D0    3522: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     3524: 6600 01B0        $36D6          BNE     lae_123    3528: 2F08           '/.'             PUSH.L  A0    352A: 2238 02AE         $2AE          MOVE.L  RomBase,D1    352E: 0081 0000 0001 '......'         ORI.L   #1,D1    3534: 2F01           '/.'             PUSH.L  D1    3536: 2F38 02AE         $2AE          PUSH.L  RomBase    353A: 203C 726F 6D20 ' <rom '         MOVE.L  #'rom ',D0    3540: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     3542: 6600 0192        $36D6          BNE     lae_123    3546: 2F08           '/.'             PUSH.L  A0    3548: 2238 02AE         $2AE          MOVE.L  RomBase,D1    354C: 0081 0000 0001 '......'         ORI.L   #1,D1    3552: 2F01           '/.'             PUSH.L  D1    3554: 2F38 02AE         $2AE          PUSH.L  RomBase    3558: 0097 4000 0000 '..@...'         ORI.L   #$40000000,(A7)    355E: 224F           '"O'             MOVEA.L A7,A1    3560: 6100 E0B2        $1614          BSR     proc15    3564: 6100 E97A        $1EE0          BSR     proc27    3568: 670A             $3574          BEQ.S   lae_116    356A: 203C 0000 1B59 ' <...Y'         MOVE.L  #$1B59,D0   ; Probaly STR "Not enough memory to load Carrera040 software."    3570: 6000 015A        $36CC          BRA     lae_122    3574: 2B48 0054      '+H.T'           MOVE.L  A0,84(A5)    3578: 2B43 0058      '+C.X'           MOVE.L  D3,88(A5)    357C: 6100 E0DA        $1658          BSR     proc16    3580: 2B48 005C      '+H.\'           MOVE.L  A0,92(A5)    3584: 2B48 0060      '+H.`'           MOVE.L  A0,96(A5)    3588: D7AD 0060      '...`'           ADD.L   D3,96(A5)    358C: 2B7C FC03 C040 '+|...@'         MOVE.L  #$FC03C040,$64(A5)    3594: 2B7C FC03 C040 '+|...@'         MOVE.L  #$FC03C040,$6C(A5)    359C: 2B7C C01F C040 '+|...@'         MOVE.L  #$C01FC040,$68(A5)    35A4: 2B7C C01F C040 '+|...@'         MOVE.L  #$C01FC040,$70(A5)    35AC: 2E4E           '.N'             MOVEA.L A6,A7    35AE: 203C 6164 6472 ' <addr'         MOVE.L  #'addr',D0    35B4: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     35B6: 6600 011E        $36D6          BNE     lae_123    35BA: 2008           ' .'             MOVE.L  A0,D0    35BC: 0800 0000      '....'           BTST    #0,D0    35C0: 6600 0108        $36CA          BNE     lae_121    35C4: 42A7           'B.'             CLR.L   -(A7)    35C6: 42A7           'B.'             CLR.L   -(A7)    35C8: 42A7           'B.'             CLR.L   -(A7)    35CA: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    35D0: 2F3C 50F0 0041 '/<P..A'         PUSH.L  #$50F00041    35D6: 2F3C 00F0 0000 '/<....'         PUSH.L  #$F00000    35DC: 283C 00A0 0000 '(<....'         MOVE.L  #$A00000,D4    35E2: 2C2C 0004      ',,..'           MOVE.L  4(A4),D6    35E6: 9886           '..'             SUB.L   D6,D4    35E8: 6406             $35F0          BHS.S   lae_117    35EA: D886           '..'             ADD.L   D6,D4    35EC: 2C04           ',.'             MOVE.L  D4,D6    35EE: 7800           'x.'             MOVEQ   #0,D4    35F0: 2B46 002C      '+F.,'           MOVE.L  D6,44(A5)    35F4: 2F06           '/.'             PUSH.L  D6    35F6: 2014           ' .'             MOVE.L  (A4),D0    35F8: 0080 0000 0001 '......'         ORI.L   #1,D0    35FE: 2F00           '/.'             PUSH.L  D0    3600: 42A7           'B.'             CLR.L   -(A7)    3602: 0CAC FFFF FFFF '......'         CMPI.L  #-1,8(A4)    360A: 6722             $362E          BEQ.S   lae_119    360C: 202C 000C      ' ,..'           MOVE.L  12(A4),D0    3610: 9880           '..'             SUB.L   D0,D4    3612: 6406             $361A          BHS.S   lae_118    3614: D880           '..'             ADD.L   D0,D4    3616: 2004           ' .'             MOVE.L  D4,D0    3618: 7800           'x.'             MOVEQ   #0,D4    361A: D1AD 002C      '...,'           ADD.L   D0,44(A5)    361E: 2F00           '/.'             PUSH.L  D0    3620: 222C 0008      '",..'           MOVE.L  8(A4),D1    3624: 0081 0000 0001 '......'         ORI.L   #1,D1    362A: 2F01           '/.'             PUSH.L  D1    362C: 2F06           '/.'             PUSH.L  D6    362E: 203C 726F 6D20 ' <rom '         MOVE.L  #'rom ',D0    3634: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     3636: 6600 009E        $36D6          BNE     lae_123    363A: 2F08           '/.'             PUSH.L  A0    363C: 2238 02AE         $2AE          MOVE.L  RomBase,D1    3640: 0081 0000 0001 '......'         ORI.L   #1,D1    3646: 2F01           '/.'             PUSH.L  D1    3648: 2238 02AE         $2AE          MOVE.L  RomBase,D1    364C: 0281 00FF FFFF '......'         ANDI.L  #$FFFFFF,D1    3652: 2F01           '/.'             PUSH.L  D1    3654: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    365A: 2F3C FC00 0041 '/<...A'         PUSH.L  #$FC000041    3660: 2F3C 00C0 0000 '/<....'         PUSH.L  #$C00000	    3666: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    366C: 2F3C FD00 0041 '/<...A'         PUSH.L  #$FD000041    3672: 2F3C 00D0 0000 '/<....'         PUSH.L  #$D00000	    3678: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    367E: 2F3C FE00 0041 '/<...A'         PUSH.L  #$FE000041    3684: 2F3C 00E0 0000 '/<....'         PUSH.L  #$E00000    368A: 224F           '"O'             MOVEA.L A7,A1    368C: 6100 DF86        $1614          BSR     proc15    3690: 6100 E84E        $1EE0          BSR     proc27    3694: 6708             $369E          BEQ.S   lae_120    3696: 203C 0000 1B59 ' <...Y'         MOVE.L  #$1B59,D0 ; Probaly STR "Not enough memory to load Carrera040 software."    369C: 602E             $36CC          BRA.S   lae_122    369E: 2B48 0030      '+H.0'           MOVE.L  A0,48(A5)    36A2: 2B43 0034      '+C.4'           MOVE.L  D3,52(A5)    36A6: 6100 DFB0        $1658          BSR     proc16    36AA: 2B48 0038      '+H.8'           MOVE.L  A0,56(A5)    36AE: 2B48 003C      '+H.<'           MOVE.L  A0,60(A5)    36B2: D7AD 003C      '...<'           ADD.L   D3,60(A5)    36B6: 6100 DFBE        $1676          BSR     proc17    36BA: 42AD 0040      'B..@'           CLR.L   64(A5)    36BE: 42AD 0044      'B..D'           CLR.L   68(A5)    36C2: 42AD 0048      'B..H'           CLR.L   72(A5)    36C6: 42AD 004C      'B..L'           CLR.L   76(A5)    36CA: 7000           'p.'             MOVEQ   #0,D0    36CC: 2E4E           '.N'    lae_122  MOVEA.L A6,A7    36CE: 4CDF 7CF8      'L.|.'           MOVEM.L (A7)+,D3-D7/A2-A6    36D2: 4A40           'J@'             TST     D0    36D4: 4E75           'Nu'             RTS         36D6: 203C 0000 1B62 ' <...b'         MOVE.L  #$1B62,D0  ; RSC Str "Carrera040 could not allocated a large enough block of contiguous memory."    36DC: 60EE             $36CC          BRA     lae_122            36DE: 40E7           '@.'    lae_124  MOVE    SR,-(A7) ; 3rd call from LC handler    36E0: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    36E4: 48E7 E0E0      'H...'           MOVEM.L D0-D2/A0-A2,-(A7)    36E8: 7001           'p.'             MOVEQ   #1,D0    36EA: A05D           '.]'             _SwapMMUMode      36EC: 1F00           '..'             PUSH.B  D0    36EE: 95CA           '..'             SUBA.L  A2,A2    36F0: 41FA 0090        $3782          LEA     data95,A0    36F4: 202D 0060      ' -.`'           MOVE.L  96(A5),D0    36F8: 20C0           ' .'             MOVE.L  D0,(A0)+    36FA: 43FA E2A0        $199C          LEA     data59,A1    36FE: 20C9           ' .'             MOVE.L  A1,(A0)+    3700: 20ED 0064      ' ..d'           MOVE.L  $64(A5),(A0)+    3704: 20ED 006C      ' ..l'           MOVE.L  $6C(A5),(A0)+    3708: 20ED 0068      ' ..h'           MOVE.L  $68(A5),(A0)+    370C: 20ED 0070      ' ..p'           MOVE.L  $70(A5),(A0)+    3710: 41FA 00F4        $3806          LEA     lae_128,A0    3714: 2408           '$.'             MOVE.L  A0,D2    3716: 41FA 003A        $3752          LEA     data94,A0    371A: 9488           '..'             SUB.L   A0,D2    371C: 9FC2           '..'             SUBA.L  D2,A7    371E: 204A           ' J'             MOVEA.L A2,A0    3720: 224F           '"O'             MOVEA.L A7,A1    3722: 2002           ' .'             MOVE.L  D2,D0    3724: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     3726: 41FA 002A        $3752          LEA     data94,A0    372A: 224A           '"J'             MOVEA.L A2,A1    372C: 2002           ' .'             MOVE.L  D2,D0    372E: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     3730: 6100 E164        $1896          BSR     proc20    3734: 204F           ' O'             MOVEA.L A7,A0    3736: 224A           '"J'             MOVEA.L A2,A1    3738: 2002           ' .'             MOVE.L  D2,D0    373A: 6002             $373E          BRA.S   lae_126    373C: 12D8           '..'             MOVE.B  (A0)+,(A1)+    373E: 51C8 FFFC        $373C          DBRA    D0,lae_125    3742: DFC2           '..'             ADDA.L  D2,A7    3744: 101F           '..'             POP.B   D0    3746: A05D           '.]'             _SwapMMUMode      3748: 4CDF 0707      'L...'           MOVEM.L (A7)+,D0-D2/A0-A2    374C: 46DF           'F.'             MOVE    (A7)+,SR    374E: 7000           'p.'             MOVEQ   #0,D0    3750: 4E75           'Nu'             RTS     	    3752: 0000           '..'             DC.W   0    3754: 1000           '..'             MOVE.B  D0,D0    3756: 0000 0050      '...P'           ORI.B   #$50,D0    375A: 0000 0048      '...H'           ORI.B   #$48,D0    375E: 0000 0048      '...H'           ORI.B   #$48,D0    3762: 0000 0048      '...H'           ORI.B   #$48,D0    3766: 0000 0048      '...H'           ORI.B   #$48,D0    376A: 0000 0048      '...H'           ORI.B   #$48,D0    376E: 0000 0048      '...H'           ORI.B   #$48,D0    3772: 0000 0048      '...H'           ORI.B   #$48,D0    3776: 0000 0048      '...H'           ORI.B   #$48,D0    377A: 0000 0048      '...H'           ORI.B   #$48,D0    377E: 0000 0048      '...H'           ORI.B   #$48,D0    3782: 0000 0000      '....'           ORI.B   #0,D0    3786: 0000 0000      '....'           ORI.B   #0,D0    378A: 0000 0000      '....'           ORI.B   #0,D0    378E: 0000 0000      '....'           ORI.B   #0,D0    3792: 0000 0000      '....'           ORI.B   #0,D0    3796: 0000 0000      '....'           ORI.B   #0,D0    379A: 42B9 FB60 0000 'B..`..'         CLR.L   $FB600000    37A0: 60FE             $37A0          BRA     lae_127    37A2: 41FA FFDE        $3782          LEA     data95,A0    37A6: 2218           '".'             MOVE.L  (A0)+,D1    37A8: 2258           '"X'             MOVEA.L (A0)+,A1    37AA: 2818           '(.'             MOVE.L  (A0)+,D4    37AC: 2A18           '*.'             MOVE.L  (A0)+,D5    37AE: 2C18           ',.'             MOVE.L  (A0)+,D6    37B0: 2E18           '..'             MOVE.L  (A0)+,D7    37B2: 203C 0000 C000 ' <....'         MOVE.L  #$C000,D0    37B8$ 4E7B 0004      'N{..'           MOVEC   D0,ITT0    37BC$ 4E7B 0006      'N{..'           MOVEC   D0,DTT0    37C0$ 4E7B 1807      'N{..'           MOVEC   D1,SRP    37C4$ 4E7B 1806      'N{..'           MOVEC   D1,URP    37C8: 203C 0000 C000 ' <....'         MOVE.L  #$C000,D0    37CE$ F518           '..'             PFLUSHA     37D0$ 4E7B 0003      'N{..'           MOVEC   D0,TC     37D4: 41FA 000A        $37E0          LEA     data96,A0    37D8: D1FC FB60 2000 '...` .'         ADDA.L  #$FB602000,A0    37DE: 4ED0           'N.'             JMP     (A0)    37E0: 7000           'p.'             MOVEQ   #0,D0    37E2$ 4E7B 0004      'N{..'           MOVEC   D0,ITT0    37E6$ 4E7B 0006      'N{..'           MOVEC   D0,DTT0    37EA$ 4E7B 4004      'N{@.'           MOVEC   D4,ITT0    37EE$ 4E7B 5006      'N{P.'           MOVEC   D5,DTT0    37F2$ 4E7B 6005      'N{`.'           MOVEC   D6,ITT1    37F6$ 4E7B 7007      'N{p.'           MOVEC   D7,DTT1    37FA$ F4D8           '..'             CINVA   BC    37FC: 4E71           'Nq'             NOP         37FE: 7000           'p.'             MOVEQ   #0,D0    3800$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    3804: 4ED1           'N.'             JMP     (A1)        3806: 0C2D 0003 0023 '.-...#' lae_128 CMPI.B  #3,35(A5)  ; 4th call from LC handler    380C: 674A             $3858          BEQ.S   lae_131    380E: 0C2D 0000 0023 '.-...#'         CMPI.B  #0,35(A5)    3814: 6742             $3858          BEQ.S   lae_131    3816: 203C 0007 0ACC ' <....'         MOVE.L  #$70ACC,D0    381C: 223C 0007 1BEC '"<....'         MOVE.L  #$71BEC,D1    3822: 082D 0000 0023 '.-...#'         BTST    #0,35(A5)    3828: 660C             $3836          BNE.S   lae_129    382A: 203C 0007 3940 ' <..9@'         MOVE.L  #$73940,D0    3830: 223C 0005 9530 '"<...0'         MOVE.L  #$59530,D1    3836: D0B8 02AE         $2AE          ADD.L   RomBase,D0    383A: D2B8 02AE         $2AE          ADD.L   RomBase,D1    383E: 41FA E252        $1A92          LEA     data62,A0    3842: 2080           ' .'             MOVE.L  D0,(A0)    3844: 2B41 0284      '+A..'           MOVE.L  D1,$284(A5)    3848: 206D 0028      ' m.('           MOVEA.L 40(A5),A0    384C: 4A88           'J.'             TST.L   A0    384E: 6704             $3854          BEQ.S   lae_130    3850: 41FA E1E4        $1A36          LEA     data61,A0    3854: 2B48 027C      '+H.|'           MOVE.L  A0,$27C(A5)    3858: 41FA E23C        $1A96          LEA     data63,A0    385C: 2B48 026C      '+H.l'           MOVE.L  A0,$26C(A5)    3860: 7000           'p.'             MOVEQ   #0,D0    3862: 4E75           'Nu'             RTS                 3864: 6000 FBAE        $3414  LC-handler:  BRA     lae_112     3868: 6000 FC22        $348C          BRA     lae_114    386C: 6000 FE70        $36DE          BRA     lae_124    3870: 6000 FF94        $3806          BRA     lae_128    3874: 48E7 70E2      'H.p.'   v_1st MOVEM.L D1-D3/A0-A2/A6,-(A7) ; 1st call from IIv handler    3878: 2F38 0008      '/8..'           PUSH.L  8    387C: 41FA 0018        $3896          LEA     data99,A0    3880: 21C8 0008      '!...'           MOVE.L  A0,8    3884: 363C 1B5F      '6<._'           MOVE    #$1B5F,D3    3888: 7001           'p.'             MOVEQ   #1,D0    388A: A05D           '.]'             _SwapMMUMode      388C: 1F00           '..'             PUSH.B  D0    388E: 2C4F           ',O'             MOVEA.L A7,A6    3890: 6100 E43E        $1CD0          BSR     proc23    3894: 7600           'v.'             MOVEQ   #0,D3    3896: 2E4E           '.N'             MOVEA.L A6,A7    3898: 101F           '..'             POP.B   D0    389A: A05D           '.]'             _SwapMMUMode      389C: 21DF 0008      '!...'           POP.L   8    38A0: 7000           'p.'             MOVEQ   #0,D0    38A2: 3003           '0.'             MOVE    D3,D0    38A4: 6646             $38EC          BNE.S   lae_133    38A6: 48E7 60E0      'H.`.'           MOVEM.L D1-D2/A0-A2,-(A7)    38AA: 41FA E36C        $1C18          LEA     53_cmd_0.LC,A0    38AE: 2B48 0006      '+H..'           MOVE.L  A0,6(A5)    38B2: 41FA E2A4        $1B58          LEA     53_cmd_1.LC,A0    38B6: 2B48 000A      '+H..'           MOVE.L  A0,10(A5)    38BA: 41FA E414        $1CD0          LEA     proc23,A0    38BE: 2B48 000E      '+H..'           MOVE.L  A0,14(A5)    38C2: 41FA DF76        $183A          LEA     53_cmd_5.3,A0    38C6: 2B48 0012      '+H..'           MOVE.L  A0,18(A5)    38CA: 41FA DF9E        $186A          LEA     53_cmd_5.1,A0    38CE: 2B48 001A      '+H..'           MOVE.L  A0,26(A5)    38D2: 41FA DF92        $1866          LEA     53_cmd_5.3.5.1,A0    38D6: 2B48 0016      '+H..'           MOVE.L  A0,22(A5)    38DA: 4CDF 0706      'L...'           MOVEM.L (A7)+,D1-D2/A0-A2    38DE: 6100 E3F0        $1CD0          BSR     proc23    38E2: 0200 0007      '....'           ANDI.B  #7,D0    38E6: 1B40 0022      '.@."'           MOVE.B  D0,34(A5)    38EA: 7000           'p.'             MOVEQ   #0,D0    38EC: 4CDF 470E      'L.G.'           MOVEM.L (A7)+,D1-D3/A0-A2/A6    38F0: 4A40           'J@'             TST     D0    38F2: 4E75           'Nu'             RTS                 38F4: 48E7 1F3E      'H..>'           MOVEM.L D3-D7/A2-A6,-(A7) ; 2nd call from IIv handler    38F8: 2C4F           ',O'             MOVEA.L A7,A6    38FA: 2878 0DDC         $DDC          MOVEA.L BootGlobPtr,A4    38FE: 42A7           'B.'             CLR.L   -(A7)    3900: 42A7           'B.'             CLR.L   -(A7)    3902: 42A7           'B.'             CLR.L   -(A7)        ;    ; check these!     ; $50F0.... = IIvx I/O Space    ; $5300.... = IIci/si I/O Space    ;     ; There's some logic behind those (struct?), I've put them into blocks of 3 lines          3904: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    390A: 2F3C 50F0 0041 '/<P..A'         PUSH.L  #$50F00041    3910: 2F3C 50F0 0000 '/<P...'         PUSH.L  #$50F00000   ; VIA1 base?        3916: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    391C: 2F3C 60B0 0001 '/<`...'         PUSH.L  #$60B00001    3922: 2F3C 60B0 0000 '/<`...'         PUSH.L  #$60B00000        3928: 2F3C 0000 2000 '/<.. .'         PUSH.L  #$2000    392E: 2F3C 5300 0041 '/<S..A'         PUSH.L  #$53000041    3934: 2F3C 5300 0000 '/<S...'         PUSH.L  #$53000000        393A: 2F3C 0000 2000 '/<.. .'         PUSH.L  #$2000    3940: 2F3C 0000 0001 '/<....'         PUSH.L  #1    3946: 2F3C 5300 2000 '/<S. .'         PUSH.L  #$53002000        394C: 2C2C 0004      ',,..'           MOVE.L  4(A4),D6    3950: 2B46 0050      '+F.P'           MOVE.L  D6,80(A5)    3954: 2F06           '/.'             PUSH.L  D6    3956: 2014           ' .'             MOVE.L  (A4),D0    3958: 0080 0000 0001 '......'         ORI.L   #1,D0    395E: 2F00           '/.'             PUSH.L  D0    3960: 42A7           'B.'             CLR.L   -(A7)    3962: 0CAC FFFF FFFF '......'         CMPI.L  #-1,8(A4)    396A: 6718             $3984          BEQ.S   lae_135    396C: 202C 000C      ' ,..'           MOVE.L  12(A4),D0    3970: D1AD 0050      '...P'           ADD.L   D0,80(A5)    3974: 2F00           '/.'             PUSH.L  D0    3976: 202C 0008      ' ,..'           MOVE.L  8(A4),D0    397A: 0080 0000 0001 '......'         ORI.L   #1,D0    3980: 2F00           '/.'             PUSH.L  D0    3982: 2F06           '/.'             PUSH.L  D6    3984: 203C 726F 6D20 ' <rom '         MOVE.L  #'rom ',D0    398A: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     398C: 6600 019E        $3B2C          BNE     lae_143    3990: 2F08           '/.'             PUSH.L  A0    3992: 2238 02AE         $2AE          MOVE.L  RomBase,D1    3996: 0081 0000 0001 '......'         ORI.L   #1,D1    399C: 2F01           '/.'             PUSH.L  D1    399E: 2F38 02AE         $2AE          PUSH.L  RomBase    39A2: 224F           '"O'             MOVEA.L A7,A1    39A4: 6100 DC6E        $1614          BSR     proc15    39A8: 6100 E536        $1EE0          BSR     proc27    39AC: 670A             $39B8          BEQ.S   lae_136    39AE: 203C 0000 1B59 ' <...Y'         MOVE.L  #$1B59,D0 ; Probaly STR "Not enough memory to load Carrera040 software."    39B4: 6000 016C        $3B22          BRA     lae_142    39B8: 2B48 0054      '+H.T'           MOVE.L  A0,84(A5)    39BC: 2B43 0058      '+C.X'           MOVE.L  D3,88(A5)    39C0: 6100 DC96        $1658          BSR     proc16    39C4: 2B48 005C      '+H.\'           MOVE.L  A0,92(A5)    39C8: 2B48 0060      '+H.`'           MOVE.L  A0,96(A5)    39CC: D7AD 0060      '...`'           ADD.L   D3,96(A5)    39D0: 2B7C FC03 C040 '+|...@'         MOVE.L  #$FC03C040,$64(A5)    39D8: 2B7C FC03 C040 '+|...@'         MOVE.L  #$FC03C040,$6C(A5)    39E0: 2B7C C01F C040 '+|...@'         MOVE.L  #$C01FC040,$68(A5)    39E8: 2B7C C01F C040 '+|...@'         MOVE.L  #$C01FC040,$70(A5)    39F0: 2E4E           '.N'             MOVEA.L A6,A7    39F2: 203C 6164 6472 ' <addr'         MOVE.L  #'addr',D0    39F8: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     39FA: 6600 0130        $3B2C          BNE     lae_143    39FE: 2008           ' .'             MOVE.L  A0,D0    3A00: 0800 0000      '....'           BTST    #0,D0    3A04: 6600 011A        $3B20          BNE     lae_141    3A08: 42A7           'B.'             CLR.L   -(A7)    3A0A: 42A7           'B.'             CLR.L   -(A7)    3A0C: 42A7           'B.'             CLR.L   -(A7)    3A0E: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    3A14: 2F3C 50F0 0041 '/<P..A'         PUSH.L  #$50F00041    3A1A: 2F3C 00F0 0000 '/<....'         PUSH.L  #$F00000    3A20: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    3A26: 2F3C 60B0 0001 '/<`...'         PUSH.L  #$60B00001    3A2C: 2F3C 00B0 0000 '/<....'         PUSH.L  #$B00000    3A32: 283C 0080 0000 '(<....'         MOVE.L  #$800000,D4    3A38: 2C2C 0004      ',,..'           MOVE.L  4(A4),D6    3A3C: 9886           '..'             SUB.L   D6,D4    3A3E: 6406             $3A46          BHS.S   lae_137    3A40: D886           '..'             ADD.L   D6,D4    3A42: 2C04           ',.'             MOVE.L  D4,D6    3A44: 7800           'x.'             MOVEQ   #0,D4    3A46: 2B46 002C      '+F.,'           MOVE.L  D6,44(A5)    3A4A: 2F06           '/.'             PUSH.L  D6    3A4C: 2014           ' .'             MOVE.L  (A4),D0    3A4E: 0080 0000 0001 '......'         ORI.L   #1,D0    3A54: 2F00           '/.'             PUSH.L  D0    3A56: 42A7           'B.'             CLR.L   -(A7)    3A58: 0CAC FFFF FFFF '......'         CMPI.L  #-1,8(A4)    3A60: 6722             $3A84          BEQ.S   lae_139    3A62: 202C 000C      ' ,..'           MOVE.L  12(A4),D0    3A66: 9880           '..'             SUB.L   D0,D4    3A68: 6406             $3A70          BHS.S   lae_138    3A6A: D880           '..'             ADD.L   D0,D4    3A6C: 2004           ' .'             MOVE.L  D4,D0    3A6E: 7800           'x.'             MOVEQ   #0,D4    3A70: D1AD 002C      '...,'           ADD.L   D0,44(A5)    3A74: 2F00           '/.'             PUSH.L  D0    3A76: 222C 0008      '",..'           MOVE.L  8(A4),D1    3A7A: 0081 0000 0001 '......'         ORI.L   #1,D1    3A80: 2F01           '/.'             PUSH.L  D1    3A82: 2F06           '/.'             PUSH.L  D6    3A84: 203C 726F 6D20 ' <rom '         MOVE.L  #'rom ',D0    3A8A: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     3A8C: 6600 009E        $3B2C          BNE     lae_143    3A90: 2F08           '/.'             PUSH.L  A0    3A92: 2238 02AE         $2AE          MOVE.L  RomBase,D1    3A96: 0081 0000 0001 '......'         ORI.L   #1,D1    3A9C: 2F01           '/.'             PUSH.L  D1    3A9E: 2238 02AE         $2AE          MOVE.L  RomBase,D1    3AA2: 0281 00FF FFFF '......'         ANDI.L  #$FFFFFF,D1    3AA8: 2F01           '/.'             PUSH.L  D1    3AAA: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    3AB0: 2F3C FC00 0041 '/<...A'         PUSH.L  #$FC000041    3AB6: 2F3C 00C0 0000 '/<....'         PUSH.L  #$C00000	    3ABC: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    3AC2: 2F3C FD00 0041 '/<...A'         PUSH.L  #$FD000041    3AC8: 2F3C 00D0 0000 '/<....'         PUSH.L  #$D00000	    3ACE: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    3AD4: 2F3C FE00 0041 '/<...A'         PUSH.L  #$FE000041    3ADA: 2F3C 00E0 0000 '/<....'         PUSH.L  #$E00000    3AE0: 224F           '"O'             MOVEA.L A7,A1    3AE2: 6100 DB30        $1614          BSR     proc15    3AE6: 6100 E3F8        $1EE0          BSR     proc27    3AEA: 6708             $3AF4          BEQ.S   lae_140    3AEC: 203C 0000 1B59 ' <...Y'         MOVE.L  #$1B59,D0  ; Probaly STR "Not enough memory to load Carrera040 software."    3AF2: 602E             $3B22          BRA.S   lae_142    3AF4: 2B48 0030      '+H.0'           MOVE.L  A0,48(A5)    3AF8: 2B43 0034      '+C.4'           MOVE.L  D3,52(A5)    3AFC: 6100 DB5A        $1658          BSR     proc16    3B00: 2B48 0038      '+H.8'           MOVE.L  A0,56(A5)    3B04: 2B48 003C      '+H.<'           MOVE.L  A0,60(A5)    3B08: D7AD 003C      '...<'           ADD.L   D3,60(A5)    3B0C: 6100 DB68        $1676          BSR     proc17    3B10: 42AD 0040      'B..@'           CLR.L   64(A5)    3B14: 42AD 0044      'B..D'           CLR.L   68(A5)    3B18: 42AD 0048      'B..H'           CLR.L   72(A5)    3B1C: 42AD 004C      'B..L'           CLR.L   76(A5)    3B20: 7000           'p.'             MOVEQ   #0,D0    3B22: 2E4E           '.N'             MOVEA.L A6,A7    3B24: 4CDF 7CF8      'L.|.'           MOVEM.L (A7)+,D3-D7/A2-A6    3B28: 4A40           'J@'             TST     D0    3B2A: 4E75           'Nu'             RTS         3B2C: 203C 0000 1B62 ' <...b'         MOVE.L  #$1B62,D0  ; RSC Str "Carrera040 could not allocated a large enough block of contiguous memory."    3B32: 60EE             $3B22          BRA     lae_142            3B34: 7000           'p.'    v_3rd  MOVEQ   #0,D0 ; 3rd subroutine called by IIv handler    3B36: 2040           ' @'             MOVEA.L D0,A0    3B38: A198           '..'             _HWPriv    ; disable instr. cache    3B3A: 7002           'p.'             MOVEQ   #2,D0    3B3C: 91C8           '..'             SUBA.L  A0,A0    3B3E: A198           '..'             _HWPriv    ; disable data cache    3B40: 40E7           '@.'             MOVE    SR,-(A7)    3B42: 007C 0700      '.|..'           ORI     #$700,SR ; Set bit 9-11 of SR (disable Interrupts)    3B46: 48E7 E0E0      'H...'           MOVEM.L D0-D2/A0-A2,-(A7)    3B4A: 7001           'p.'             MOVEQ   #1,D0    3B4C: A05D           '.]'             _SwapMMUMode      3B4E: 1F00           '..'             PUSH.B  D0    3B50: 95CA           '..'             SUBA.L  A2,A2    3B52: 41FA 009E        $3BF2          LEA     data101,A0    3B56: 202D 0060      ' -.`'           MOVE.L  96(A5),D0    3B5A: 20C0           ' .'             MOVE.L  D0,(A0)+    3B5C: 43FA E100        $1C5E          LEA     data66,A1    3B60: 20C9           ' .'             MOVE.L  A1,(A0)+    3B62: 20ED 0064      ' ..d'           MOVE.L  $64(A5),(A0)+    3B66: 20ED 006C      ' ..l'           MOVE.L  $6C(A5),(A0)+    3B6A: 20ED 0068      ' ..h'           MOVE.L  $68(A5),(A0)+    3B6E: 20ED 0070      ' ..p'           MOVE.L  $70(A5),(A0)+    3B72: 41FA 0102        $3C76          LEA     data103,A0    3B76: 2408           '$.'             MOVE.L  A0,D2    3B78: 41FA 0048        $3BC2          LEA     data100,A0    3B7C: 9488           '..'             SUB.L   A0,D2    3B7E: 9FC2           '..'             SUBA.L  D2,A7    3B80: 204A           ' J'             MOVEA.L A2,A0    3B82: 224F           '"O'             MOVEA.L A7,A1    3B84: 2002           ' .'             MOVE.L  D2,D0    3B86: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     3B88: 41FA 0038        $3BC2          LEA     data100,A0    3B8C: 224A           '"J'             MOVEA.L A2,A1    3B8E: 2002           ' .'             MOVE.L  D2,D0    3B90: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     3B92: 6100 DFC4        $1B58          BSR     53_cmd_1.LC    3B96: 204F           ' O'             MOVEA.L A7,A0    3B98: 224A           '"J'             MOVEA.L A2,A1    3B9A: 2002           ' .'             MOVE.L  D2,D0    3B9C: 6002             $3BA0          BRA.S   lae_146    3B9E: 12D8           '..'             MOVE.B  (A0)+,(A1)+    3BA0: 51C8 FFFC        $3B9E          DBRA    D0,lae_145    3BA4: DFC2           '..'             ADDA.L  D2,A7    3BA6: 101F           '..'             POP.B   D0    3BA8: A05D           '.]'             _SwapMMUMode      3BAA: 4CDF 0707      'L...'           MOVEM.L (A7)+,D0-D2/A0-A2    3BAE: 46DF           'F.'             MOVE    (A7)+,SR    3BB0: 7000           'p.'             MOVEQ   #0,D0    3BB2: 307C 0001      '0|..'           MOVEA   #1,A0    3BB6: A198           '..'             _HWPriv       ; enable instr. cache    3BB8: 7002           'p.'             MOVEQ   #2,D0     3BBA: 2040           ' @'             MOVEA.L D0,A0    3BBC: A198           '..'             _HWPriv       ; enable data cache    3BBE: 7000           'p.'             MOVEQ   #0,D0    3BC0: 4E75           'Nu'             RTS         3BC2: 0000           '..'             DC.W   0    3BC4: 1000           '..'             MOVE.B  D0,D0    3BC6: 0000 0050      '...P'           ORI.B   #$50,D0    3BCA: 0000 0048      '...H'           ORI.B   #$48,D0    3BCE: 0000 0048      '...H'           ORI.B   #$48,D0    3BD2: 0000 0048      '...H'           ORI.B   #$48,D0    3BD6: 0000 0048      '...H'           ORI.B   #$48,D0    3BDA: 0000 0048      '...H'           ORI.B   #$48,D0    3BDE: 0000 0048      '...H'           ORI.B   #$48,D0    3BE2: 0000 0048      '...H'           ORI.B   #$48,D0    3BE6: 0000 0048      '...H'           ORI.B   #$48,D0    3BEA: 0000 0048      '...H'           ORI.B   #$48,D0    3BEE: 0000 0048      '...H'           ORI.B   #$48,D0    3BF2: 0000 0000      '....'           ORI.B   #0,D0    3BF6: 0000 0000      '....'           ORI.B   #0,D0    3BFA: 0000 0000      '....'           ORI.B   #0,D0    3BFE: 0000 0000      '....'           ORI.B   #0,D0    3C02: 0000 0000      '....'           ORI.B   #0,D0    3C06: 0000 0000      '....'           ORI.B   #0,D0	    3C0A: 42B9 5300 0000 'B.S...'         CLR.L   $53000000    3C10: 60FE             $3C10          BRA     lae_147    3C12: 41FA FFDE        $3BF2          LEA     data101,A0    3C16: 2218           '".'             MOVE.L  (A0)+,D1    3C18: 2258           '"X'             MOVEA.L (A0)+,A1    3C1A: 2818           '(.'             MOVE.L  (A0)+,D4    3C1C: 2A18           '*.'             MOVE.L  (A0)+,D5    3C1E: 2C18           ',.'             MOVE.L  (A0)+,D6    3C20: 2E18           '..'             MOVE.L  (A0)+,D7    3C22: 203C 0000 C000 ' <....'         MOVE.L  #$C000,D0    3C28$ 4E7B 0004      'N{..'           MOVEC   D0,ITT0    3C2C$ 4E7B 0006      'N{..'           MOVEC   D0,DTT0    3C30$ 4E7B 1807      'N{..'           MOVEC   D1,SRP    3C34$ 4E7B 1806      'N{..'           MOVEC   D1,URP    3C38: 203C 0000 C000 ' <....'         MOVE.L  #$C000,D0    3C3E$ F518           '..'             PFLUSHA     3C40$ 4E7B 0003      'N{..'           MOVEC   D0,TC     3C44: 41FA 000A        $3C50          LEA     data102,A0    3C48: D1FC 5300 2000 '..S. .'         ADDA.L  #$53002000,A0    3C4E: 4ED0           'N.'             JMP     (A0)    3C50: 7000           'p.'             MOVEQ   #0,D0    3C52$ 4E7B 0004      'N{..'           MOVEC   D0,ITT0    3C56$ 4E7B 0006      'N{..'           MOVEC   D0,DTT0    3C5A$ 4E7B 4004      'N{@.'           MOVEC   D4,ITT0    3C5E$ 4E7B 5006      'N{P.'           MOVEC   D5,DTT0    3C62$ 4E7B 6005      'N{`.'           MOVEC   D6,ITT1    3C66$ 4E7B 7007      'N{p.'           MOVEC   D7,DTT1    3C6A$ F4D8           '..'             CINVA   BC    3C6C: 4E71           'Nq'             NOP         3C6E: 7000           'p.'             MOVEQ   #0,D0    3C70$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    3C74: 4ED1           'N.'             JMP     (A1)    ; Most likely the loader for the Motorola FPSP (FPU emulation for 68040)	        3C76: 48E7 7FF8      'H...'           MOVEM.L D1-D7/A0-A4,-(A7)    3C7A: 082D 0000 0023 '.-...#'         BTST    #0,35(A5)    3C80: 6672             $3CF4          BNE.S   lae_149    3C82: 41FA DDB2        $1A36          LEA     data61,A0    3C86: 2B48 027C      '+H.|'           MOVE.L  A0,$27C(A5)    3C8A: 594F           'YO'             SUBQ    #4,A7    3C8C: 2F3C 4650 5350 '/<FPSP'         PUSH.L  #'FPSP'    3C92: 3F3C 012C      '?<.,'           PUSH    #$12C    3C96: A81F           '..'             _Get1Resource ; (theType:ResType; ID:INTEGER):Handle     3C98: 203C 0000 1B64 ' <...d'         MOVE.L  #$1B64,D0  ;STR "Carrera040 could not find needed resource. The Carrera040 file may be corrupted."    3C9E: 2E1F           '..'             POP.L   D7    3CA0: 6754             $3CF6          BEQ.S   lae_150    3CA2: 2047           ' G'             MOVEA.L D7,A0    3CA4: A025           '.%'             _GetHandleSize ; (A0/h:Handle):D0\Size     3CA6: 2C00           ',.'             MOVE.L  D0,D6    3CA8: A51E           '..'             _NewPtr ,SYS  ; (D0/byteCount:Size):A0\Ptr     3CAA: 6650             $3CFC          BNE.S   lae_151    3CAC: 43FA DDE4        $1A92          LEA     data62,A1    3CB0: 2288           '".'             MOVE.L  A0,(A1)    3CB2: 2248           '"H'             MOVEA.L A0,A1    3CB4: 2047           ' G'             MOVEA.L D7,A0    3CB6: 2050           ' P'             MOVEA.L (A0),A0    3CB8: 2006           ' .'             MOVE.L  D6,D0    3CBA: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     3CBC: 2F07           '/.'             PUSH.L  D7    3CBE: A9A3           '..'             _ReleaseResource ; (theResource:Handle)     3CC0: 594F           'YO'             SUBQ    #4,A7    3CC2: 2F3C 4650 5350 '/<FPSP'         PUSH.L  #'FPSP'    3CC8: 3F3C 012D      '?<.-'           PUSH    #$12D    3CCC: A81F           '..'             _Get1Resource ; (theType:ResType; ID:INTEGER):Handle     3CCE: 203C 0000 1B64 ' <...d'         MOVE.L  #$1B64,D0  ;STR "Carrera040 could not find needed resource. The Carrera040 file may be corrupted."    3CD4: 2E1F           '..'             POP.L   D7    3CD6: 671E             $3CF6          BEQ.S   lae_150    3CD8: 2047           ' G'             MOVEA.L D7,A0    3CDA: A025           '.%'             _GetHandleSize ; (A0/h:Handle):D0\Size     3CDC: 2C00           ',.'             MOVE.L  D0,D6    3CDE: A51E           '..'             _NewPtr ,SYS  ; (D0/byteCount:Size):A0\Ptr     3CE0: 661A             $3CFC          BNE.S   lae_151    3CE2: 2B48 0284      '+H..'           MOVE.L  A0,$284(A5)    3CE6: 2248           '"H'             MOVEA.L A0,A1    3CE8: 2047           ' G'             MOVEA.L D7,A0    3CEA: 2050           ' P'             MOVEA.L (A0),A0    3CEC: 2006           ' .'             MOVE.L  D6,D0    3CEE: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     3CF0: 2F07           '/.'             PUSH.L  D7    3CF2: A9A3           '..'             _ReleaseResource ; (theResource:Handle)     3CF4: 7000           'p.'             MOVEQ   #0,D0    3CF6: 4CDF 1FFE      'L...' lae_150:  MOVEM.L (A7)+,D1-D7/A0-A4    3CFA: 4E75           'Nu'             RTS         3CFC: 203C 0000 1B59 ' <...Y'         MOVE.L  #$1B59,D0  ; Probaly STR "Not enough memory to load Carrera040 software."    3D02: 60F2             $3CF6          BRA     lae_150---------------------------------------------------------------    ; Mac IIv[i|x|m] handler aka "v_handler" - and parts of it used for II/IIx/IIcx, too    ; Setting function pointers for all $5300k commands        ;  6(A5) = 53_cmd_0    ; 10(A5) = 53_cmd_1x    ; 14(A5) = read_5300k2    ; 18(A5) = 53_cmd_5.3    ; 22(A5) = 53_cmd_5.3.5.1    ; 26(A5) = 53_cmd_5.1    ; 34(A5) = lower 3 bits of result from read5300k "jumper register"?    3D04: 6000 FB6E        $3874 v_handler:  BRA     v_1st    3D08: 6000 FBEA        $38F4             BRA     v_2nd    3D0C: 6000 FE26        $3B34          BRA     v_3rd    3D10: 6000 FF64        $3C76          BRA     v_4th	    3D14: 48E7 70E2      'H.p.'  MacII_1st  MOVEM.L D1-D3/A0-A2/A6,-(A7) ; <---- ALSO: 1st call from MacII handler    3D18: 2F38 0008      '/8..'           PUSH.L  8    3D1C: 41FA 0018        $3D36          LEA     data105,A0    3D20: 21C8 0008      '!...'           MOVE.L  A0,8    3D24: 363C 1B5F      '6<._'           MOVE    #$1B5F,D3  ; 7007    3D28: 7001           'p.'             MOVEQ   #1,D0    3D2A: A05D           '.]'             _SwapMMUMode      3D2C: 1F00           '..'             PUSH.B  D0    3D2E: 2C4F           ',O'             MOVEA.L A7,A6    3D30: 6100 E12A        $1E5C          BSR     read_5300k2    3D34: 7600           'v.'             MOVEQ   #0,D3    3D36: 2E4E           '.N'    data105  MOVEA.L A6,A7    3D38: 101F           '..'             POP.B   D0    3D3A: A05D           '.]'             _SwapMMUMode      3D3C: 21DF 0008      '!...'           POP.L   8    3D40: 7000           'p.'             MOVEQ   #0,D0    3D42: 3003           '0.'             MOVE    D3,D0    3D44: 6646             $3D8C          BNE.S   lae_153    3D46: 48E7 60E0      'H.`.'           MOVEM.L D1-D2/A0-A2,-(A7)    3D4A: 41FA E058        $1DA4          LEA     53_cmd_0,A0    3D4E: 2B48 0006      '+H..'           MOVE.L  A0,6(A5)    3D52: 41FA DF90        $1CE4          LEA     53_cmd_1x,A0    3D56: 2B48 000A      '+H..'           MOVE.L  A0,10(A5)    3D5A: 41FA E100        $1E5C          LEA     read_5300k2,A0    3D5E: 2B48 000E      '+H..'           MOVE.L  A0,14(A5)    3D62: 41FA DAD6        $183A          LEA     53_cmd_5.3,A0    3D66: 2B48 0012      '+H..'           MOVE.L  A0,18(A5)    3D6A: 41FA DAFE        $186A          LEA     53_cmd_5.1,A0    3D6E: 2B48 001A      '+H..'           MOVE.L  A0,26(A5)    3D72: 41FA DAF2        $1866          LEA     53_cmd_5.3.5.1,A0    3D76: 2B48 0016      '+H..'           MOVE.L  A0,22(A5)    3D7A: 4CDF 0706      'L...'           MOVEM.L (A7)+,D1-D2/A0-A2    3D7E: 6100 E0DC        $1E5C          BSR     read_5300k2    3D82: 0200 0007      '....'           ANDI.B  #7,D0    3D86: 1B40 0022      '.@."'           MOVE.B  D0,34(A5)    3D8A: 7000           'p.'             MOVEQ   #0,D0    3D8C: 4CDF 470E      'L.G.'  lae_153: MOVEM.L (A7)+,D1-D3/A0-A2/A6    3D90: 4A40           'J@'             TST     D0    3D92: 4E75           'Nu'             RTS     ---------------------------------------------------------------    ;  Checks various Gestalt constructors (RAM, ROM, ADDR)            3D94: 48E7 1F3E      'H..>' MacII_2nd:  MOVEM.L D3-D7/A2-A6,-(A7) ; 2nd call from MacII handler    3D98: 2C4F           ',O'             MOVEA.L A7,A6    3D9A: 42A7           'B.'             CLR.L   -(A7) ; PUSH.L #00000000    3D9C: 42A7           'B.'             CLR.L   -(A7) ; PUSH.L #00000000    3D9E: 42A7           'B.'             CLR.L   -(A7) ; PUSH.L #00000000    3DA0: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    3DA6: 2F3C 50F0 0041 '/<P..A'         PUSH.L  #$50F00041    3DAC: 2F3C 50F0 0000 '/<P...'         PUSH.L  #$50F00000 ; VIA1        3DB2: 2F3C 0000 2000 '/<.. .'         PUSH.L  #$2000    3DB8: 2F3C 5300 0041 '/<S..A'         PUSH.L  #$53000041    3DBE: 2F3C 5300 0000 '/<S...'         PUSH.L  #$53000000        3DC4: 2F3C 0000 2000 '/<.. .'         PUSH.L  #$2000    3DCA: 2F3C 0000 0001 '/<....'         PUSH.L  #1    3DD0: 2F3C 5300 2000 '/<S. .'         PUSH.L  #$53002000     ; data end    3DD6: 203C 7261 6D20 ' <ram '         MOVE.L  #'ram ',D0  ; Returns the number of bytes of the physical RAM     3DDC: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     3DDE: 6600 01AC        $3F8C          BNE     lae_160 ;could not allocated a large enough block of contiguous memory    3DE2: 2C08           ',.'             MOVE.L  A0,D6    3DE4: 2B46 0050      '+F.P'           MOVE.L  D6,80(A5)    3DE8: 2F06           '/.'             PUSH.L  D6    3DEA: 2F3C 0000 0001 '/<....'         PUSH.L  #1    3DF0: 42A7           'B.'             CLR.L   -(A7)    3DF2: 203C 726F 6D20 ' <rom '         MOVE.L  #'rom ',D0    3DF8: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     3DFA: 6600 0190        $3F8C          BNE     lae_160 ; could not allocated a large enough block of contiguous memory    3DFE: 2F08           '/.'             PUSH.L  A0    3E00: 2238 02AE         $2AE          MOVE.L  RomBase,D1    3E04: 0081 0000 0001 '......'         ORI.L   #1,D1    3E0A: 2F01           '/.'             PUSH.L  D1    3E0C: 2F38 02AE         $2AE          PUSH.L  RomBase    3E10: 224F           '"O'             MOVEA.L A7,A1    3E12: 6100 D800        $1614          BSR     proc15    3E16: 6100 E0C8        $1EE0          BSR     proc27    3E1A: 670A             $3E26          BEQ.S   lae_155    3E1C: 203C 0000 1B59 ' <...Y'         MOVE.L  #$1B59,D0  ; Probaly STR "Not enough memory to load Carrera040 software."    3E22: 6000 015E        $3F82          BRA     lae_159    3E26: 2B48 0054      '+H.T'   lae_155 MOVE.L  A0,84(A5)    3E2A: 2B43 0058      '+C.X'           MOVE.L  D3,88(A5)    3E2E: 6100 D828        $1658          BSR     proc16    3E32: 2B48 005C      '+H.\'           MOVE.L  A0,92(A5)    3E36: 2B48 0060      '+H.`'           MOVE.L  A0,96(A5)    3E3A: D7AD 0060      '...`'           ADD.L   D3,96(A5)    3E3E: 2B7C 807F C040 '+|...@'         MOVE.L  #$807FC040,$64(A5)    3E3E: 2B7C 807F C040 '+|...@'         MOVE.L  #$807FC040,$64(A5)    3E46: 2B7C 807F C040 '+|...@'         MOVE.L  #$807FC040,$6C(A5)    3E4E: 42AD 0068      'B..h'           CLR.L   $68(A5)    3E52: 42AD 0070      'B..p'           CLR.L   $70(A5)    3E56: 203C 6164 6472 ' <addr'         MOVE.L  #'addr',D0 ; get addressing mode    3E5C: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     3E5E: 6600 012C        $3F8C          BNE     lae_160  ; could not allocated a large enough block of contiguous memory    3E62: 2008           ' .'             MOVE.L  A0,D0    3E64: 0800 0000      '....'           BTST    #0,D0    3E68: 6600 0116        $3F80          BNE     lae_158    3E6C: 42A7           'B.'             CLR.L   -(A7)     ; PUSH.L #00000000    3E6E: 42A7           'B.'             CLR.L   -(A7)     ; PUSH.L #00000000    3E70: 42A7           'B.'             CLR.L   -(A7)     ; PUSH.L #00000000    3E72: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    3E78: 2F3C 50F0 0041 '/<P..A'         PUSH.L  #$50F00041    3E7E: 2F3C 00F0 0000 '/<....'         PUSH.L  #$F00000    3E84: 203C 7261 6D20 ' <ram '         MOVE.L  #'ram ',D0    3E8A: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     3E8C: 6600 00FE        $3F8C          BNE     lae_160 ; could not allocated a large enough block of contiguous memory    3E90: 2C08           ',.'             MOVE.L  A0,D6    3E92: 0C86 0080 0000 '......'         CMPI.L  #$800000,D6      3E98: 6506             $3EA0          BLO.S   lae_156      ; less than 8MB RAM available?    3E9A: 2C3C 0080 0000 ',<....'         MOVE.L  #$800000,D6    3EA0: 2B46 0050      '+F.P'   lae_156 MOVE.L  D6,80(A5)    3EA4: 2F06           '/.'             PUSH.L  D6    3EA6: 2F3C 0000 0001 '/<....'         PUSH.L  #1    3EAC: 42A7           'B.'             CLR.L   -(A7)    3EAE: 203C 726F 6D20 ' <rom '         MOVE.L  #'rom ',D0    3EB4: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     3EB6: 6600 00D4        $3F8C          BNE     lae_160 ; could not allocated a large enough block of contiguous memory    3EBA: 2F08           '/.'             PUSH.L  A0    3EBC: 2238 02AE         $2AE          MOVE.L  RomBase,D1    3EC0: 0081 0000 0001 '......'         ORI.L   #1,D1    3EC6: 2F01           '/.'             PUSH.L  D1    3EC8: 2238 02AE         $2AE          MOVE.L  RomBase,D1    3ECC: 0281 00FF FFFF '......'         ANDI.L  #$FFFFFF,D1    3ED2: 2F01           '/.'             PUSH.L  D1	; This smells like the 6 NuBUS slot adresses ($F9000000 - $FE000000)     3ED4: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000   ; Slot space (1MB)    3EDA: 2F3C F900 0041 '/<...A'         PUSH.L  #$F9000041 ; 32bit NuBUS slot 1, offset $41    3EE0: 2F3C 0090 0000 '/<....'         PUSH.L  #$900000   ; 24bit slot address	    3EE6: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    3EEC: 2F3C FA00 0041 '/<...A'         PUSH.L  #$FA000041 ; slot 0xA (aka "2")    3EF2: 2F3C 00A0 0000 '/<....'         PUSH.L  #$A00000   ; 24bit slot address	    3EF8: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    3EFE: 2F3C FB00 0041 '/<...A'         PUSH.L  #$FB000041 ; This is slot 3, 0xB (offset $41), and also where the IIci     3F04: 2F3C 00B0 0000 '/<....'         PUSH.L  #$B00000   ; VRAM is mapped to (physically at $0000 0000)	    3F0A: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    3F10: 2F3C FC00 0041 '/<...A'         PUSH.L  #$FC000041 ; Slot 0xC    3F16: 2F3C 00C0 0000 '/<....'         PUSH.L  #$C00000   ; 24bit slot address	    3F1C: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    3F22: 2F3C FD00 0041 '/<...A'         PUSH.L  #$FD000041 ; Slot 0xD    3F28: 2F3C 00D0 0000 '/<....'         PUSH.L  #$D00000   ; 24bit slot address	    3F2E: 2F3C 0010 0000 '/<....'         PUSH.L  #$100000    3F34: 2F3C FE00 0041 '/<...A'         PUSH.L  #$FE000041 ; Slot 0xE    3F3A: 2F3C 00E0 0000 '/<....'         PUSH.L  #$E00000   ; 24bit slot address    3F40: 224F           '"O'             MOVEA.L A7,A1    3F42: 6100 D6D0        $1614          BSR     proc15    3F46: 6100 DF98        $1EE0          BSR     proc27    3F4A: 6708             $3F54          BEQ.S   lae_157    3F4C: 203C 0000 1B59 ' <...Y'         MOVE.L  #$1B59,D0  ; Probaly STR "Not enough memory to load Carrera040 software."    3F52: 602E             $3F82          BRA.S   lae_159    3F54: 2B48 0030      '+H.0'   lae_157 MOVE.L  A0,48(A5)    3F58: 2B43 0034      '+C.4'           MOVE.L  D3,52(A5)    3F5C: 6100 D6FA        $1658          BSR     proc16    3F60: 2B48 0038      '+H.8'           MOVE.L  A0,56(A5)    3F64: 2B48 003C      '+H.<'           MOVE.L  A0,60(A5)    3F68: D7AD 003C      '...<'           ADD.L   D3,60(A5)    3F6C: 6100 D708        $1676          BSR     proc17    3F70: 42AD 0040      'B..@'           CLR.L   64(A5)    3F74: 42AD 0044      'B..D'           CLR.L   68(A5)    3F78: 42AD 0048      'B..H'           CLR.L   72(A5)    3F7C: 42AD 004C      'B..L'           CLR.L   76(A5)    3F80: 7000           'p.'             MOVEQ   #0,D0    3F82: 2E4E           '.N'    lae_159: MOVEA.L A6,A7    3F84: 4CDF 7CF8      'L.|.'           MOVEM.L (A7)+,D3-D7/A2-A6    3F88: 4A40           'J@'             TST     D0    3F8A: 4E75           'Nu'             RTS          3F8C: 203C 0000 1B62 ' <...b'lae_160: MOVE.L  #$1B62,D0  ; RSC Str "Carrera040 could not allocated a large enough block of contiguous memory."    3F92: 60EE             $3F82          BRA     lae_159    ; ---------------------------------------------------------------        3F94: 40E7           '@.'  MacII_3rd: MOVE    SR,-(A7)     ; 3rd call from MacII handler    3F96: 007C 0700      '.|..'           ORI     #$700,SR       ; Set bit 9-11 of SR (disable Interrupts)    3F9A: 48E7 E0E0      'H...'           MOVEM.L D0-D2/A0-A2,-(A7)    3F9E: 7001           'p.'             MOVEQ   #1,D0    3FA0: A05D           '.]'             _SwapMMUMode      3FA2: 1F00           '..'             PUSH.B  D0    3FA4: 95CA           '..'             SUBA.L  A2,A2         ; faster movea.l #0,a2    3FA6: 41FA 0090        $4038          LEA     data107,A0    ; Filling the data into the 6x32 field    3FAA: 202D 0060      ' -.`'           MOVE.L  96(A5),D0    3FAE: 20C0           ' .'             MOVE.L  D0,(A0)+      ; SE30: 9FE00    3FB0: 43FA DE38        $1DEA          LEA     data69,A1    3FB4: 20C9           ' .'             MOVE.L  A1,(A0)+      ; SE30: 9D6E2 (User/Supervisor Rootpointer?)    3FB6: 20ED 0064      ' ..d'           MOVE.L  $64(A5),(A0)+ ; 807FC040    3FBA: 20ED 006C      ' ..l'           MOVE.L  $6C(A5),(A0)+ ; 807FC040    3FBE: 20ED 0068      ' ..h'           MOVE.L  $68(A5),(A0)+ ; 00000000    3FC2: 20ED 0070      ' ..p'           MOVE.L  $70(A5),(A0)+ ; 00000000    3FC6: 41FA 00F4        $40BC          LEA     MacII_4th,A0    3FCA: 2408           '$.'             MOVE.L  A0,D2    3FCC: 41FA 003A        $4008          LEA     data106,A0    3FD0: 9488           '..'             SUB.L   A0,D2         ; 'distance' from data106 to MacII_4th    3FD2: 9FC2           '..'             SUBA.L  D2,A7    3FD4: 204A           ' J'             MOVEA.L A2,A0    3FD6: 224F           '"O'             MOVEA.L A7,A1											; save the current VBR to the stack    3FD8: 2002           ' .'             MOVE.L  D2,D0											; A0 = SE30: 00000000 (src)  - IIci: $FBB08000											; A1 = SE30: 027ff34c (dest) - IIci: $3BF9FC6											; D0 = B4    (count)      3FDA: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size) 											; write my own VBR...    3FDC: 41FA 002A        $4008          LEA     data106,A0    3FE0: 224A           '"J'             MOVEA.L A2,A1    3FE2: 2002           ' .'             MOVE.L  D2,D0											; A0 = 9F900 (src)   - IIci 10C4EA (data88)    											; A1 = 00000 (dest)  - IIci FBB08000											; D0 = B4    (count) - IIci same											; This copies 180 bytes into 0x000000000 replacing the original VBR.   											; ... and kills Macsbug if not circumvented properly.    3FE4: A02E           '..'             _BlockMove ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     3FE6: 6100 DCFC        $1CE4          BSR     53_cmd_1x  ; Bring the C040 to life    3FEA: 204F           ' O'             MOVEA.L A7,A0  ; SP to A0    3FEC: 224A           '"J'             MOVEA.L A2,A1  ; SE30: 00000000    3FEE: 2002           ' .'             MOVE.L  D2,D0  ; the code length (B4 again)    3FF0: 6002             $3FF4          BRA.S   lae_163    3FF2: 12D8           '..'     lae_162 MOVE.B  (A0)+,(A1)+ ; Write the VBR back from the stack    3FF4: 51C8 FFFC        $3FF2  lae_163 DBRA    D0,lae_162    3FF8: DFC2           '..'             ADDA.L  D2,A7 ; adjust the stack    3FFA: 101F           '..'             POP.B   D0    3FFC: A05D           '.]'             _SwapMMUMode      3FFE: 4CDF 0707      'L...'           MOVEM.L (A7)+,D0-D2/A0-A2    4002: 46DF           'F.'             MOVE    (A7)+,SR    4004: 7000           'p.'             MOVEQ   #0,D0    4006: 4E75           'Nu'             RTS         ; Start of VBR replacement- and 040-Code being copied to 0x0 the by line 3FE4 ; /if/ theses are the Vectors 0-17, then their meaning would be:    4008: 0000 1000      '..'   data106:  DC.L    #$00001000 ; Reset initial Stack Pointer    400C: 0000 0050      '...P'           DC.L    #$00000050 ; Reset initial Program Counter    ; - ALL of these Vectors point to addr 4050 (offset 0x48) -    4010: 0000 0048      '...H'           DC.L    #$00000048 ; Buserror      4014: 0000 0048      '...H'           DC.L    #$00000048 ; Adress Error    4018: 0000 0048      '...H'           DC.L    #$00000048 ; Illegal Instruction    401C: 0000 0048      '...H'           DC.L    #$00000048 ; Zero Divide    4020: 0000 0048      '...H'           DC.L    #$00000048 ; CHK, CHK2 instruction    4024: 0000 0048      '...H'           DC.L    #$00000048 ; cpTRAPcc, TRAPcc, TRAPV instruction    4028: 0000 0048      '...H'           DC.L    #$00000048 ; Privilige Violation    402C: 0000 0048      '...H'           DC.L    #$00000048 ; Trace    4030: 0000 0048      '...H'           DC.L    #$00000048 ; LINE 1010 Emulation    4034: 0000 0048      '...H'           DC.L    #$00000048 ; LINE 1111 Emulation    ; - THESE are definitely no vectors, they are dynamically written by the code above    ; and to be used to setup the 040 MMU registers.    4038: 0000 0000      '....' data107:  DC.L    #$00000000 ; SE30: 0009FE00  (12)    403C: 0000 0000      '....'           DC.L    #$00000000 ; SE30: 0009D6E2  (13)    4040: 0000 0000      '....'           DC.L    #$00000000 ; SE30: 807FC040  (14)     4044: 0000 0000      '....'           DC.L    #$00000000 ; SE30: 807FC040  (15)    4048: 0000 0000      '....'           DC.L    #$00000000 ; SE30: 00000000     404C: 0000 0000      '....'           DC.L    #$00000000 ; SE30: 00000000         4050: 42B9 5300 0000 'B.S...'         CLR.L   $53000000  ; Poke 0 to $53000000 (c040 off)    4056: 60FE             $4056  block3: BRA     block3    ; Points to itself... probably a "blocker"	; - load data from data107 into registers and set system parameters with it    4058: 41FA FFDE        $4038          LEA     data107,A0 ; SE30: 9F900 (initial Program Counter)    405C: 2218           '".'             MOVE.L  (A0)+,D1   ; SE30: 0009FE00 (User/Supervisor Rootpointer)    405E: 2258           '"X'             MOVEA.L (A0)+,A1   ; 0009D6E2    4060: 2818           '(.'             MOVE.L  (A0)+,D4   ; 807FC040    4062: 2A18           '*.'             MOVE.L  (A0)+,D5   ; 807FC040    4064: 2C18           ',.'             MOVE.L  (A0)+,D6   ; 00000000    4066: 2E18           '..'             MOVE.L  (A0)+,D7   ; 00000000    4068: 203C 0000 C000 ' <....'         MOVE.L  #$C000,D0    406E$ 4E7B 0004      'N{..'           MOVEC   D0,ITT0   ; Set Instruction Transparent Translation    4072$ 4E7B 0006      'N{..'           MOVEC   D0,DTT0   ; Set Data Transparent Translation    4076$ 4E7B 1807      'N{..'           MOVEC   D1,SRP    ; Set Supervisor Rootpointer and    407A$ 4E7B 1806      'N{..'           MOVEC   D1,URP    ; User Rootpointer (same as Macs always run in SU mode)    407E: 203C 0000 C000 ' <....'         MOVE.L  #$C000,D0    4084$ F518           '..'             PFLUSHA           ; Invalidates all entries in the address translation cache    4086$ 4E7B 0003      'N{..'           MOVEC   D0,TC     ; TranslationControl register set to Enable & 8K page size    408A: 41FA 000A        $4096          LEA     data108,A0    408E: D1FC 5300 2000 '..S. .'         ADDA.L  #$53002000,A0 ; (=0x530A1900)    4094: 4ED0           'N.'             JMP     (A0)      ; JuMP to data108 code (below) in C040 RAM range?         ; Setting up the 68040 MMU    ; Meaning of bits in ITT/DTT (Instruction/Data Transparent Translation)    ; registers:    ; %BBBBBBBBMMMMMMMMESS000UU0CC00W00    ; B - Logical Address Base - compared with address bits A31-A24. Addresses    ;                            that match in this comparision are    ;                            transparently translated    ; M - Logical Address Mask - setting a bit in this field causes    ;                            corresponding bit in Base field to be ignored    ; E - Enable Bit - 1 - translation enabled; 0 - disabled    ; S - Supervisor Mode - 00 - match only in user mode    ;                       01 - match only in supervisor mode    ;                       1x - ignore mode when matching    ; U - User Page Attributes - ignored by 040    ; C - Cache mode - 00 - Cacheable, Write-through    ;                  01 - Cacheable, Copyback    ;                  10 - Noncacheable, Serialized    ;                  11 - Noncacheable    ; W - Write protect - 0 - write permitted; 1 - write disabled        ; i.e: 807FC040 = 10000000011111111100000001000000    ;                 BBBBBBBBMMMMMMMMESS000UU0CC00W00		; -> 2GB transparently translated	; -> translation enabled	; -> Supervisor Mode: ignore mode when matching	; -> Cache mode: Noncacheable, Serialized	; -> Write permitted            4096: 7000           'p.'    data108: MOVEQ   #0,D0    4098$ 4E7B 0004      'N{..'           MOVEC   D0,ITT0 ; 0    409C$ 4E7B 0006      'N{..'           MOVEC   D0,DTT0 ; 0    40A0$ 4E7B 4004      'N{@.'           MOVEC   D4,ITT0 ; 807FC040    40A4$ 4E7B 5006      'N{P.'           MOVEC   D5,DTT0 ; 807FC040    40A8$ 4E7B 6005      'N{`.'           MOVEC   D6,ITT1 ; 00000000    40AC$ 4E7B 7007      'N{p.'           MOVEC   D7,DTT1 ; 00000000    40B0$ F4D8           '..'             CINVA   BC    40B2: 4E71           'Nq'             NOP         40B4: 7000           'p.'             MOVEQ   #0,D0    40B6$ 4E7B 0002      'N{..'           MOVEC   D0,CACR    40BA: 4ED1           'N.'             JMP     (A1)    ; 0009D6E2    ; END 040 Code being copied to somewhere by line 3FE4     40BC: 48E7 7FF8      'H...'  MacII_4th: MOVEM.L D1-D7/A0-A4,-(A7)  ; 4th subroutine called my MacII_handler    40C0: 082D 0000 0023 '.-...#'         BTST    #0,35(A5)  ; Check for FPU    40C6: 6672             $413A          BNE.S   lae_166    ; if no FPU	    40C8: 41FA D96C        $1A36          LEA     data61,A0    40CC: 2B48 027C      '+H.|'           MOVE.L  A0,$27C(A5)    40D0: 594F           'YO'             SUBQ    #4,A7    40D2: 2F3C 4650 5350 '/<FPSP'         PUSH.L  #'FPSP'    40D8: 3F3C 012C      '?<.,'           PUSH    #$12C      ; RSC ID #300    40DC: A81F           '..'             _Get1Resource      ; (theType:ResType; ID:INTEGER):Handle     40DE: 203C 0000 1B64 ' <...d'         MOVE.L  #$1B64,D0  ; RSC String: "Carrera040 could not find needed resource.                                                              ; The Carrera040 file may be corrupted."    40E4: 2E1F           '..'             POP.L   D7    40E6: 6758             $4140          BEQ.S   lae_167    40E8: 2047           ' G'             MOVEA.L D7,A0    40EA: A025           '.%'             _GetHandleSize     ; (A0/h:Handle):D0\Size     40EC: 2C00           ',.'             MOVE.L  D0,D6    40EE: A51E           '..'             _NewPtr ,SYS       ; (D0/byteCount:Size):A0\Ptr     40F0: 6654             $4146          BNE.S   lae_168    ; Not enough memory left, throw error msg    40F2: 43FA D99E        $1A92          LEA     data62,A1  ; data62 might be storage for FPSP handle    40F6: 2288           '".'             MOVE.L  A0,(A1)    40F8: 2248           '"H'             MOVEA.L A0,A1    40FA: 2047           ' G'             MOVEA.L D7,A0    40FC: 2050           ' P'             MOVEA.L (A0),A0    40FE: 2006           ' .'             MOVE.L  D6,D0     ; This loads FPSP into RAM    4100: A02E           '..'             _BlockMove        ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     4102: 2F07           '/.'             PUSH.L  D7    4104: A9A3           '..'             _ReleaseResource  ; (theResource:Handle)     4106: 594F           'YO'             SUBQ    #4,A7    4108: 2F3C 4650 5350 '/<FPSP'         PUSH.L  #'FPSP'    410E: 3F3C 012D      '?<.-'           PUSH    #$12D      ; RSC ID #301    4112: A81F           '..'             _Get1Resource      ; (theType:ResType; ID:INTEGER):Handle     4114: 203C 0000 1B64 ' <...d'         MOVE.L  #$1B64,D0  ; RSC String "Carrera040 could not find needed resource.                                                              ; The Carrera040 file may be corrupted."    411A: 2E1F           '..'             POP.L   D7    411C: 6722             $4140          BEQ.S   lae_167     ; If RSC is missing, leave sub...    411E: 2047           ' G'             MOVEA.L D7,A0    4120: A025           '.%'             _GetHandleSize     ; (A0/h:Handle):D0\Size     4122: 2C00           ',.'             MOVE.L  D0,D6    4124: A51E           '..'             _NewPtr ,SYS       ; (D0/byteCount:Size):A0\Ptr     4126: 661E             $4146          BNE.S   lae_168    4128: 2B48 0284      '+H..'           MOVE.L  A0,$284(A5)    412C: 2248           '"H'             MOVEA.L A0,A1    412E: 2047           ' G'             MOVEA.L D7,A0    4130: 2050           ' P'             MOVEA.L (A0),A0    4132: 2006           ' .'             MOVE.L  D6,D0    4134: A02E           '..'             _BlockMove        ; (A0/srcPtr,A1/destPtr:Ptr; D0/byteCount:Size)     4136: 2F07           '/.'             PUSH.L  D7    4138: A9A3           '..'             _ReleaseResource ; (theResource:Handle)     413A: 6100 F286        $33C2 lae_166: BSR     proc44   ; this branch is MacII routine specific    413E: 7000           'p.'             MOVEQ   #0,D0    4140: 4CDF 1FFE      'L...'  lae_167: MOVEM.L (A7)+,D1-D7/A0-A4    4144: 4E75           'Nu'             RTS           4146: 203C 0000 1B59 ' <...Y'lae_168: MOVE.L  #$1B59,D0     ; RSC String "Not enough memory to load Carrera040 software."    414C: 60F2             $4140          BRA     lae_167        ---- Mac II / IIx / IIcx handler ----        414E: 6000 FBC4        $3D14 MacII_handler:  BRA   MacII_1st ; From II, IIx & IIcx    4152: 6000 FC40        $3D94          BRA     MacII_2nd    4156: 6000 FE3C        $3F94          BRA     MacII_3rd    415A: 6000 FF60        $40BC          BRA     MacII_4th        ; This is "FINFDTHING"        415E: 4E56 FFE8      'NV..' findthing:  LINK    A6,#-$18    4162: 48E7 1838      'H..8'           MOVEM.L D3-D4/A2-A4,-(A7)    4166: 262E 0008      '&...'           MOVE.L  8(A6),D3    416A: 282E 000C      '(...'           MOVE.L  12(A6),D4    416E: 7000           'p.'             MOVEQ   #0,D0    4170: 2640           '&@'             MOVEA.L D0,A3    4172: 2D43 FFE8      '-C..'           MOVE.L  D3,-24(A6)    4176: 2D44 FFEC      '-D..'           MOVE.L  D4,-20(A6)    417A: 7000           'p.'             MOVEQ   #0,D0    417C: 2D40 FFF0      '-@..'           MOVE.L  D0,-16(A6)    4180: 7000           'p.'             MOVEQ   #0,D0    4182: 2D40 FFF4      '-@..'           MOVE.L  D0,-12(A6)    4186: 7000           'p.'             MOVEQ   #0,D0    4188: 2D40 FFF8      '-@..'           MOVE.L  D0,-8(A6)    418C: 594F           'YO'             SUBQ    #4,A7    418E: 42A7           'B.'             CLR.L   -(A7)    4190: 486E FFE8      'Hn..'           PEA     -24(A6)    4194: 7004           'p.'             MOVEQ   #4,D0    4196: A82A           '.*'             _ComponentDispatch ; (sel_arg:HLongInt; D0/selector:INTEGER)     4198: 201F           ' .'             POP.L   D0    419A: 2440           '$@'             MOVEA.L D0,A2    419C: 4A80           'J.'             TST.L   D0    419E: 6766             $4206          BEQ.S   lae_170    41A0: 207C 0000 015A    $15A          MOVEA.L #SysVersion,A0    41A6: 3010           '0.'             MOVE    (A0),D0    41A8: 0C40 0750      '.@.P'           CMPI    #$750,D0    41AC: 6C24             $41D2          BGE.S   lae_169    41AE: 207C 0000 028A    $28A          MOVEA.L #CMPtr,A0    41B4: 2050           ' P'             MOVEA.L (A0),A0    41B6: 2028 0018      ' (..'           MOVE.L  24(A0),D0    41BA: 2840           '(@'             MOVEA.L D0,A4    41BC: 220A           '".'             MOVE.L  A2,D1    41BE: 0281 0000 FFFF '......'         ANDI.L  #$FFFF,D1    41C4: ED81           '..'             ASL.L   #6,D1    41C6: D280           '..'             ADD.L   D0,D1    41C8: 2041           ' A'             MOVEA.L D1,A0    41CA: 2028 003C      ' (.<'           MOVE.L  60(A0),D0    41CE: 2640           '&@'             MOVEA.L D0,A3    41D0: 6034             $4206          BRA.S   lae_170    41D2: 207C 0000 028A    $28A  lae_169 MOVEA.L #CMPtr,A0    41D8: 2050           ' P'             MOVEA.L (A0),A0    41DA: 2028 0018      ' (..'           MOVE.L  24(A0),D0    41DE: 2D40 FFFC      '-@..'           MOVE.L  D0,-4(A6)    41E2: 220A           '".'             MOVE.L  A2,D1    41E4: 0281 0000 FFFF '......'         ANDI.L  #$FFFF,D1    41EA: 2401           '$.'             MOVE.L  D1,D2    41EC: C2FC 0044      '...D'           MULU    #68,D1    41F0: 4842           'HB'             SWAP    D2    41F2: C4FC 0044      '...D'           MULU    #68,D2    41F6: 4842           'HB'             SWAP    D2    41F8: 4242           'BB'             CLR     D2    41FA: D282           '..'             ADD.L   D2,D1    41FC: D280           '..'             ADD.L   D0,D1    41FE: 2041           ' A'             MOVEA.L D1,A0    4200: 2028 003C      ' (.<'           MOVE.L  60(A0),D0    4204: 2640           '&@'             MOVEA.L D0,A3    4206: 200B           ' .'    lae_170  MOVE.L  A3,D0    4208: 4CDF 1C18      'L...'           MOVEM.L (A7)+,D3-D4/A2-A4    420C: 4E5E           'N^'             UNLK    A6    420E: 4E75           'Nu'             RTS             ;  "FINDTHING" end - String null-terminated        4210: 8946 494E      '.FIN'           PACK    D6,D4,#$494E    4214: 4454           'DT'             NEG     (A4)    4216: 4849           'HI'             BKPT    #1    4218: 4E47           'NG'             TRAP    #7    421A: 0000           '..'             DC.W   0    	; --- InitSoundPatch	    421C: 4E56 FF74      'NV.t'  proc46:  LINK    A6,#-$8C    4220: 48E7 0038      'H..8'           MOVEM.L A2-A4,-(A7)    4224: 246E 0008      '$n..'           MOVEA.L 8(A6),A2    4228: A11A           '..'             _GetZone ; :A0\THz     422A: 2648           '&H'             MOVEA.L A0,A3    422C: 594F           'YO'             SUBQ    #4,A7    422E: 2EB8 02A6         $2A6          MOVE.L  SysZone,(A7)    4232: 205F           ' _'             POP.L   A0    4234: A01B           '..'             _SetZone ; (A0/hz:THz)     4236: 7006           'p.'             MOVEQ   #6,D0    4238: A31E           '..'             _NewPtr ,CLEAR; (D0/byteCount:Size):A0\Ptr     423A: 2848           '(H'             MOVEA.L A0,A4    423C: 224A           '"J'             MOVEA.L A2,A1    423E: 2288           '".'             MOVE.L  A0,(A1)    4240: 4240           'B@'             CLR     D0    4242: 3D40 FF90      '=@..'           MOVE    D0,-$70(A6)    4246: 4240           'B@'             CLR     D0    4248: 3D40 FF8A      '=@..'           MOVE    D0,-$76(A6)    424C: 554F           'UO'             SUBQ    #2,A7    424E: A994           '..'             _CurResFile ; :RefNum     4250: 301F           '0.'             POP     D0    4252: 3D40 FF8C      '=@..'           MOVE    D0,-$74(A6)    4256: 41EE FFBA      'A...'           LEA     -70(A6),A0    425A: 2D48 FF86      '-H..'           MOVE.L  A0,-$7A(A6)    425E: 41EE FF74      'A..t'           LEA     -$8C(A6),A0    4262: 7008           'p.'             MOVEQ   #8,D0       ;Trap = GetFcbInfo    4264: A260           '.`'             _HFsDispatch ,HFS  ; (A0|IOPB:FCBPBRec):D0\OSErr     4266: 3D6E FFA8 FFB4 '=n....'         MOVE    -88(A6),-76(A6)    426C: 2D6E FFAE FFB6 '-n....'         MOVE.L  -82(A6),-74(A6)    4272: 554F           'UO'             SUBQ    #2,A7    4274: 42A7           'B.'             CLR.L   -(A7)    4276: 486E FFB4      'Hn..'           PEA     -76(A6)    427A: 2F0C           '/.'             PUSH.L  A4    427C: 7002           'p.'             MOVEQ   #2,D0    427E: A823           '.#'             _AliasMgr ; (D0/selector:INTEGER)     4280: 544F           'TO'             ADDQ    #2,A7    4282: 4240           'B@'             CLR     D0    4284: 204C           ' L'             MOVEA.L A4,A0    4286: 3140 0004      '1@..'           MOVE    D0,4(A0)    428A: 203C 6D61 6368 ' <mach'         MOVE.L  #'mach',D0    4290: 43EE FFFC      'C...'           LEA     -4(A6),A1    4294: A1AD           '..'             _Gestalt ; (A0/selector:OSType):D0\OSErr     4296: 2288           '".'             MOVE.L  A0,(A1)    4298: 4A40           'J@'             TST     D0    429A: 6646             $42E2          BNE.S   lae_174    429C: 202E FFFC      ' ...'           MOVE.L  -4(A6),D0    ; This most likely maps the machine to one of the code fragments from the 'sift' ressource (ID 128,129,130)    42A0: 7207           'r.'             MOVEQ   #7,D1  ; 7 = IIx    42A2: B081           '..'             CMP.L   D1,D0    42A4: 6720             $42C6          BEQ.S   lae_171    42A6: 7208           'r.'             MOVEQ   #8,D1  ; 8 = IIcx    42A8: B081           '..'             CMP.L   D1,D0    42AA: 671A             $42C6          BEQ.S   lae_171     42AC: 720B           'r.'             MOVEQ   #11,D1 ; 11 = IIci    42AE: B081           '..'             CMP.L   D1,D0    42B0: 671E             $42D0          BEQ.S   lae_172    42B2: 7212           'r.'             MOVEQ   #18,D1 ; 18 = IIsi    42B4: B081           '..'             CMP.L   D1,D0    42B6: 6718             $42D0          BEQ.S   lae_172    42B8: 7213           'r.'             MOVEQ   #19,D1 ; 19 = LC    42BA: B081           '..'             CMP.L   D1,D0    42BC: 671C             $42DA          BEQ.S   lae_173    42BE: 7225           'r%'             MOVEQ   #37,D1 ; 37 = LCII    42C0: B081           '..'             CMP.L   D1,D0    42C2: 6716             $42DA          BEQ.S   lae_173    42C4: 601C             $42E2          BRA.S   lae_174    42C6: 204C           ' L'    lae_171  MOVEA.L A4,A0 ; IIx/IIcx    42C8: 317C 0080 0004 '1|....'         MOVE    #$80,4(A0)    42CE: 6012             $42E2          BRA.S   lae_174    42D0: 204C           ' L'    lae_172  MOVEA.L A4,A0 ; IIci/si    42D2: 317C 0081 0004 '1|....'         MOVE    #$81,4(A0)    42D8: 6008             $42E2          BRA.S   lae_174    42DA: 204C           ' L'    lae_173  MOVEA.L A4,A0  ; LC    42DC: 317C 0082 0004 '1|....'         MOVE    #$82,4(A0)    42E2: 204B           ' K'    lae_174  MOVEA.L A3,A0    42E4: A01B           '..'             _SetZone ; (A0/hz:THz)     42E6: 4CDF 1C00      'L...'           MOVEM.L (A7)+,A2-A4    42EA: 4E5E           'N^'             UNLK    A6    42EC: 4E75           'Nu'             RTS     	    42EE: 8E49           '.I'             OR      A1,D7  ; INITSOUNDPATCH, null-terminated    42F0: 4E49           'NI'             TRAP    #9    42F2: 5453           'TS'             ADDQ    #2,(A3)    42F4¥ 4F55           'OU'             ILL*        42F6: 4E44           'ND'             TRAP    #4    42F8: 5041           'PA'             ADDQ    #8,D1    42FA: 5443           'TC'             ADDQ    #2,D3    42FC: 4800           'H.'             NBCD    D0    42FE: 0000           '..'             DC.W   0		; --- GetSysWDRefNum - Get system Working Directory ref num    4300: 4E56 FFF0      'NV..'   GetSysWDRefNum  LINK    A6,#-$10    4304: 7002           'p.'             MOVEQ   #2,D0    4306: 41EE FFF0      'A...'           LEA     -16(A6),A0    430A: A090           '..'             _SysEnvirons ; (D0/verRequested:INTEGER; VAR A0|theWorld:SysEnvRec):D0\OSErr     430C: 4A40           'J@'             TST     D0    430E: 6708             $4318          BEQ.S   lae_175    4310: 4240           'B@'             CLR     D0    4312: 3D40 0008      '=@..'           MOVE    D0,8(A6)    4316: 6008             $4320          BRA.S   lae_176    4318: 302E FFFE      '0...'           MOVE    -2(A6),D0    431C: 3D40 0008      '=@..'           MOVE    D0,8(A6)    4320: 4E5E           'N^'             UNLK    A6    4322: 4E75           'Nu'             RTS   	    4324: 8E47           '.G'             OR      D7,D7 ; GETSYSWDREFNUM,  null-terminated    4326¥ 4554           'ET'             ILL*        4328: 5359           'SY'             SUBQ    #1,(A1)+    432A: 5357           'SW'             SUBQ    #1,(A7)    432C: 4452           'DR'             NEG     (A2)    432E¥ 4546           'EF'             ILL*        4330: 4E55 4D00      'NUM.'           LINK    A5,#$4D00    4334: 0000 0000      '....'           ORI.B   #0,D0    4338:                        data113  EQU     *-1